{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"\u4e3b\u9875"},{"location":"about/","text":"\u6211\u662f\u6df1\u7231\u91ce\u5b69\u5b50\u7684\u7a3b\u8349\u4eba","title":"\u5173\u4e8e"},{"location":"Redis/redis command/","text":"Redis\u547d\u4ee4\u96c6 redis\u6570\u636e\u7c7b\u578b string(\u5b57\u7b26\u4e32) list(\u5217\u8868) hash\uff08\u54c8\u5e0c\uff09 set\uff08\u96c6\u5408\uff09 zset \uff08\u6709\u5e8f\u96c6\u5408\uff09 Key Command set > set mykey somevalue OK > get mykey somevalue set\u547d\u4ee4\u9009\u9879 EX: \u6307\u5b9a\u5bf9\u8c61\u8fc7\u671f\u7684\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d PX:\u6307\u5b9a\u5bf9\u8c61\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d NX:\u5f53key\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u8bbe\u7f6e XX:\u5f53key\u5b58\u5728\u65f6\u6dfb\u52a0\u5bf9\u8c61 exists > exists key [key...] \u5982\u679ckey\u5b58\u5728\u8fd4\u56de1 \u5982\u679ckey\u4e0d\u5b58\u5728\u8fd4\u56de0 \u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2akey\u8fd4\u56dekey\u5b58\u5728\u7684\u6570\u91cf del del key [key...] \u5220\u9664\u6307\u5b9a\u7684key,\u5982\u679ckey\u4e0d\u5b58\u5728\u5c06\u88ab\u5ffd\u7565\uff0c\u8fd4\u56de\u88ab\u79fb\u9664\u7684key\u7684\u6570\u91cf unlink \u4e0edel\u76f8\u4f3c\uff0c\u4f46\u662f\u975e\u963b\u585e\u5f0f/\u5f02\u6b65\u64cd\u4f5c type type key \u8fd4\u56dekey\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b (String,list,hash,set,zset),\u5982\u679ckey\u4e0d\u5b58\u5728\u8fd4\u56denone touch touch key \u4fee\u6539key\u7684\u6700\u540e\u8bbf\u95ee\u65f6\u95f4\uff0c\u8fd4\u56de\u64cd\u4f5c\u7684key\u7684\u6570\u91cf keys keys pattern \u8fd4\u56de\u5339\u914d\u7684key\u6570\u7ec4 h?llo matches hello, hallo and hxllo h*llo matches hllo and heeeello h[ae]llo matches hello and hallo, but not hillo h[^e]llo matches hallo, hbllo, ... but not hello h[a-b]llo matches hallo and hbllo \u7279\u6b8a\u5b57\u7b26\u4f7f\u7528 \\ \u8f6c\u4e49 scan SCAN cursor [MATCH pattern] [COUNT count] [TYPE type] pattern:\u5339\u914d\u7684\u683c\u5f0f count:\u6570\u91cf type:\u6570\u636e\u7c7b\u578b SCAN\u547d\u4ee4\u662f\u4e00\u4e2a\u57fa\u4e8e\u6e38\u6807\u7684\u8fed\u4ee3\u5668\uff08cursor based iterator\uff09\uff1a SCAN\u547d\u4ee4\u6bcf\u6b21\u88ab\u8c03\u7528\u4e4b\u540e\uff0c \u90fd\u4f1a\u5411\u7528\u6237\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6e38\u6807\uff0c \u7528\u6237\u5728\u4e0b\u6b21\u8fed\u4ee3\u65f6\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u65b0\u6e38\u6807\u4f5c\u4e3a SCAN\u547d\u4ee4\u7684\u6e38\u6807\u53c2\u6570\uff0c \u4ee5\u6b64\u6765\u5ef6\u7eed\u4e4b\u524d\u7684\u8fed\u4ee3\u8fc7\u7a0b\u3002 randomKey randomkey key \u5728\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u8fd4\u56de\u968f\u673a\u7684key,\u5982\u679c\u6570\u636e\u5e93\u662f\u7a7a\u7684\u8fd4\u56de nil rename rename key newkey \u91cd\u547d\u540dkey\u4e3a\u4e00\u4e2a\u65b0\u7684key\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u5982\u679c\u65b0\u7684key\u5b58\u5728\u5c06\u4f1a\u88ab\u8986\u76d6 renamenx renamenx sourcekey targetkey \u5982\u679ckey\u88ab\u91cd\u547d\u540d\u4e3a\u65b0key\u8fd4\u56de1,\u5982\u679c\u65b0key\u5b58\u5728\u8fd4\u56de0,\u91cd\u547d\u540d\u5931\u8d25 expire expire key seconds \u8bbe\u7f6ekey\u7684\u751f\u547d\u5468\u671f\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u5982\u679ckey\u5b58\u5728\u8fd4\u56de1,\u4e0d\u5b58\u5728\u8fd4\u56de0","title":"Redis command"},{"location":"Redis/redis command/#key-command","text":"","title":"Key Command"},{"location":"Redis/redis command/#set","text":"> set mykey somevalue OK > get mykey somevalue set\u547d\u4ee4\u9009\u9879 EX: \u6307\u5b9a\u5bf9\u8c61\u8fc7\u671f\u7684\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d PX:\u6307\u5b9a\u5bf9\u8c61\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d NX:\u5f53key\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u8bbe\u7f6e XX:\u5f53key\u5b58\u5728\u65f6\u6dfb\u52a0\u5bf9\u8c61","title":"set"},{"location":"Redis/redis command/#exists","text":"> exists key [key...] \u5982\u679ckey\u5b58\u5728\u8fd4\u56de1 \u5982\u679ckey\u4e0d\u5b58\u5728\u8fd4\u56de0 \u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2akey\u8fd4\u56dekey\u5b58\u5728\u7684\u6570\u91cf","title":"exists"},{"location":"Redis/redis command/#del","text":"del key [key...] \u5220\u9664\u6307\u5b9a\u7684key,\u5982\u679ckey\u4e0d\u5b58\u5728\u5c06\u88ab\u5ffd\u7565\uff0c\u8fd4\u56de\u88ab\u79fb\u9664\u7684key\u7684\u6570\u91cf","title":"del"},{"location":"Redis/redis command/#unlink","text":"\u4e0edel\u76f8\u4f3c\uff0c\u4f46\u662f\u975e\u963b\u585e\u5f0f/\u5f02\u6b65\u64cd\u4f5c","title":"unlink"},{"location":"Redis/redis command/#type","text":"type key \u8fd4\u56dekey\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b (String,list,hash,set,zset),\u5982\u679ckey\u4e0d\u5b58\u5728\u8fd4\u56denone","title":"type"},{"location":"Redis/redis command/#touch","text":"touch key \u4fee\u6539key\u7684\u6700\u540e\u8bbf\u95ee\u65f6\u95f4\uff0c\u8fd4\u56de\u64cd\u4f5c\u7684key\u7684\u6570\u91cf","title":"touch"},{"location":"Redis/redis command/#keys","text":"keys pattern \u8fd4\u56de\u5339\u914d\u7684key\u6570\u7ec4 h?llo matches hello, hallo and hxllo h*llo matches hllo and heeeello h[ae]llo matches hello and hallo, but not hillo h[^e]llo matches hallo, hbllo, ... but not hello h[a-b]llo matches hallo and hbllo \u7279\u6b8a\u5b57\u7b26\u4f7f\u7528 \\ \u8f6c\u4e49","title":"keys"},{"location":"Redis/redis command/#scan","text":"SCAN cursor [MATCH pattern] [COUNT count] [TYPE type] pattern:\u5339\u914d\u7684\u683c\u5f0f count:\u6570\u91cf type:\u6570\u636e\u7c7b\u578b SCAN\u547d\u4ee4\u662f\u4e00\u4e2a\u57fa\u4e8e\u6e38\u6807\u7684\u8fed\u4ee3\u5668\uff08cursor based iterator\uff09\uff1a SCAN\u547d\u4ee4\u6bcf\u6b21\u88ab\u8c03\u7528\u4e4b\u540e\uff0c \u90fd\u4f1a\u5411\u7528\u6237\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6e38\u6807\uff0c \u7528\u6237\u5728\u4e0b\u6b21\u8fed\u4ee3\u65f6\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u65b0\u6e38\u6807\u4f5c\u4e3a SCAN\u547d\u4ee4\u7684\u6e38\u6807\u53c2\u6570\uff0c \u4ee5\u6b64\u6765\u5ef6\u7eed\u4e4b\u524d\u7684\u8fed\u4ee3\u8fc7\u7a0b\u3002","title":"scan"},{"location":"Redis/redis command/#randomkey","text":"randomkey key \u5728\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u8fd4\u56de\u968f\u673a\u7684key,\u5982\u679c\u6570\u636e\u5e93\u662f\u7a7a\u7684\u8fd4\u56de nil","title":"randomKey"},{"location":"Redis/redis command/#rename","text":"rename key newkey \u91cd\u547d\u540dkey\u4e3a\u4e00\u4e2a\u65b0\u7684key\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u5982\u679c\u65b0\u7684key\u5b58\u5728\u5c06\u4f1a\u88ab\u8986\u76d6","title":"rename"},{"location":"Redis/redis command/#renamenx","text":"renamenx sourcekey targetkey \u5982\u679ckey\u88ab\u91cd\u547d\u540d\u4e3a\u65b0key\u8fd4\u56de1,\u5982\u679c\u65b0key\u5b58\u5728\u8fd4\u56de0,\u91cd\u547d\u540d\u5931\u8d25","title":"renamenx"},{"location":"Redis/redis command/#expire","text":"expire key seconds \u8bbe\u7f6ekey\u7684\u751f\u547d\u5468\u671f\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u5982\u679ckey\u5b58\u5728\u8fd4\u56de1,\u4e0d\u5b58\u5728\u8fd4\u56de0","title":"expire"},{"location":"Redis/redis-replication/","text":"Redis \u4e3b\u4ece\u590d\u5236 \uff08Replication\uff09 Redis\u4e3b\u4ece\u6a21\u5f0f\u73b0\u6570\u636e\u5907\u4efd \u4e3b\u4ece\u590d\u5236\u64cd\u4f5c\u673a\u5236\uff1a \u5f53master\u4e0eslave\u8fde\u63a5\u826f\u597d\uff0cmaster\u4f1a\u5411slave\u53d1\u9001\u5b83\u63a5\u6536\u7684\u547d\u4ee4\u6765\u4fdd\u6301\u6570\u636e\u540c\u6b65 \u5f53master\u4e0eslave\u7531\u4e8e\u7f51\u7edc\u7b49\u95ee\u9898\u65ad\u5f00\u65f6\uff0c\u5728slave\u91cd\u8fde\u540e\uff0c\u4f1a\u5c1d\u8bd5\u83b7\u53d6\u65ad\u5f00\u671f\u95f4\u7684\u540c\u6b65\u547d\u4ee4 \u5f53\u90e8\u5206\u540c\u6b65\u5931\u8d25\u65f6\uff0cmaster\u4f1a\u5c06\u6240\u6709\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u5feb\u7167\u7248\u672c\uff0c\u4e00\u8d77\u53d1\u9001\u7ed9slave,\u7ee7\u7eed\u540e\u7eed\u540c\u6b65\u547d\u4ee4 \u4e3b\u4ece\u590d\u5236\u7279\u6027: Redis \u4f7f\u7528\u5f02\u6b65\u590d\u5236\uff0cslave \u548c master \u4e4b\u95f4\u5f02\u6b65\u5730\u786e\u8ba4\u5904\u7406\u7684\u6570\u636e\u91cf \u4e00\u4e2a master \u53ef\u4ee5\u62e5\u6709\u591a\u4e2a slave slave\u53ef\u4ee5\u63a5\u6536\u5176\u4ed6\u591a\u4e2aslave\u8fde\u63a5,\u6765\u5b9e\u73b0\u5c42\u53e0\u5f0f\u7684\u4e3b\u4ece\u4ece\u7ed3\u6784,\u50cfA->B->C,\u5176\u4e2dB\u662fA\u7684slave,C\u662fB\u7684slave Redis\u590d\u5236\u662f\u5f02\u6b65\u7684,\u610f\u5473\u7740master\u5411slave\u53d1\u9001\u540c\u6b65\u547d\u4ee4\u65f6,\u53ef\u4ee5\u7ee7\u7eed\u63a5\u6536\u5ba2\u6237\u7aef\u6570\u636e slave\u7aef\u7684\u590d\u5236\u4e5f\u662f\u5f02\u6b65\u7684,\u5f53 slave \u8fdb\u884c\u521d\u6b21\u540c\u6b65\u65f6\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u65e7\u6570\u636e\u96c6\u5904\u7406\u67e5\u8be2\u8bf7\u6c42\u3002(replica-serve-stale-data \u914d\u7f6e\u4e3a yes \u65f6,\u4f1a\u6b63\u5e38\u8fd4\u56de,\u53ef\u80fd\u8fd4\u56de\u7a7a\u6570\u636e\u96c6,\u5982\u679c\u914d\u7f6e\u4e3a no ,\u5c06\u8fd4\u56de\u5ba2\u6237\u7aef\u4e00\u4e2a\u9519\u8bef)\u540c\u6b65\u4e4b\u540e\uff0c\u65e7\u6570\u636e\u96c6\u5fc5\u987b\u88ab\u5220\u9664\uff0c\u540c\u65f6\u52a0\u8f7d\u65b0\u7684\u6570\u636e\u96c6\u3002 slave \u5728\u8fd9\u4e2a\u77ed\u6682\u7684\u65f6\u95f4\u7a97\u53e3\u5185\uff08\u5982\u679c\u6570\u636e\u96c6\u5f88\u5927\uff0c\u4f1a\u6301\u7eed\u8f83\u957f\u65f6\u95f4\uff09\uff0c\u4f1a\u963b\u585e\u5230\u6765\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u53ef\u4ee5\u4f7f\u7528\u590d\u5236\u6765\u907f\u514d master \u5c06\u5168\u90e8\u6570\u636e\u96c6\u5199\u5165\u78c1\u76d8\u9020\u6210\u7684\u5f00\u9500\uff1a\u4e00\u79cd\u5178\u578b\u7684\u6280\u672f\u662f\u914d\u7f6e\u4f60\u7684 master Redis.conf \u4ee5\u907f\u514d\u5bf9\u78c1\u76d8\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u7136\u540e\u8fde\u63a5\u4e00\u4e2a slave \uff0c\u5176\u914d\u7f6e\u4e3a\u4e0d\u5b9a\u671f\u4fdd\u5b58\u6216\u662f\u542f\u7528 AOF\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u5fc5\u987b\u5c0f\u5fc3\u5904\u7406\uff0c\u56e0\u4e3a\u91cd\u65b0\u542f\u52a8\u7684 master \u7a0b\u5e8f\u5c06\u4ece\u4e00\u4e2a\u7a7a\u6570\u636e\u96c6\u5f00\u59cb\uff1a\u5982\u679c\u4e00\u4e2a slave \u8bd5\u56fe\u4e0e\u5b83\u540c\u6b65\uff0c\u90a3\u4e48\u8fd9\u4e2a slave \u4e5f\u4f1a\u88ab\u6e05\u7a7a Redis\u590d\u5236\u5b9e\u73b0\u539f\u7406 \u6bcf\u4e00\u4e2a Redis master \u90fd\u6709\u4e00\u4e2a replication ID \uff1a\u8fd9\u662f\u4e00\u4e2a\u8f83\u5927\u7684\u4f2a\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u6807\u8bb0\u4e86\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u3002\u6bcf\u4e2a master \u4e5f\u6301\u6709\u4e00\u4e2a\u504f\u79fb\u91cf\uff0cmaster \u5c06\u81ea\u5df1\u4ea7\u751f\u7684\u590d\u5236\u6d41\u53d1\u9001\u7ed9 slave \u65f6\uff0c\u53d1\u9001\u591a\u5c11\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u81ea\u8eab\u7684\u504f\u79fb\u91cf\u5c31\u4f1a\u589e\u52a0\u591a\u5c11\uff0c\u76ee\u7684\u662f\u5f53\u6709\u65b0\u7684\u64cd\u4f5c\u4fee\u6539\u81ea\u5df1\u7684\u6570\u636e\u96c6\u65f6\uff0c\u5b83\u53ef\u4ee5\u4ee5\u6b64\u66f4\u65b0 slave \u7684\u72b6\u6001\u3002\u590d\u5236\u504f\u79fb\u91cf\u5373\u4f7f\u5728\u6ca1\u6709\u4e00\u4e2a slave \u8fde\u63a5\u5230 master \u65f6\uff0c\u4e5f\u4f1a\u81ea\u589e\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u6bcf\u4e00\u5bf9\u7ed9\u5b9a\u7684 Replication ID, offset \u90fd\u4f1a\u6807\u8bc6\u4e00\u4e2a master \u6570\u636e\u96c6\u7684\u786e\u5207\u7248\u672c\u3002 \u5f53 slave \u8fde\u63a5\u5230 master \u65f6\uff0c\u5b83\u4eec\u4f7f\u7528 PSYNC \u547d\u4ee4\u6765\u53d1\u9001\u5b83\u4eec\u8bb0\u5f55\u7684\u65e7\u7684 master replication ID \u548c\u5b83\u4eec\u81f3\u4eca\u4e3a\u6b62\u5904\u7406\u7684\u504f\u79fb\u91cf\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c master \u80fd\u591f\u4ec5\u53d1\u9001 slave \u6240\u9700\u7684\u589e\u91cf\u90e8\u5206\u3002\u4f46\u662f\u5982\u679c master \u7684\u7f13\u51b2\u533a\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u547d\u4ee4\u79ef\u538b\u7f13\u51b2\u8bb0\u5f55\uff0c\u6216\u8005\u5982\u679c slave \u5f15\u7528\u4e86\u4e0d\u518d\u77e5\u9053\u7684\u5386\u53f2\u8bb0\u5f55\uff08replication ID\uff09\uff0c\u5219\u4f1a\u8f6c\u800c\u8fdb\u884c\u4e00\u4e2a\u5168\u91cf\u91cd\u540c\u6b65\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c slave \u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u96c6\u526f\u672c\uff0c\u4ece\u5934\u5f00\u59cb\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5168\u91cf\u540c\u6b65\u7684\u5de5\u4f5c\u7ec6\u8282\uff1a master \u5f00\u542f\u4e00\u4e2a\u540e\u53f0\u4fdd\u5b58\u8fdb\u7a0b\uff0c\u4ee5\u4fbf\u4e8e\u751f\u4ea7\u4e00\u4e2a RDB \u6587\u4ef6\u3002\u540c\u65f6\u5b83\u5f00\u59cb\u7f13\u51b2\u6240\u6709\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u7684\u65b0\u7684\u5199\u5165\u547d\u4ee4\u3002\u5f53\u540e\u53f0\u4fdd\u5b58\u5b8c\u6210\u65f6\uff0c master \u5c06\u6570\u636e\u96c6\u6587\u4ef6\u4f20\u8f93\u7ed9 slave\uff0c slave\u5c06\u4e4b\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u7136\u540e\u52a0\u8f7d\u6587\u4ef6\u5230\u5185\u5b58\u3002\u518d\u7136\u540e master \u4f1a\u53d1\u9001\u6240\u6709\u7f13\u51b2\u7684\u547d\u4ee4\u53d1\u7ed9 slave\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4ee5\u6307\u4ee4\u6d41\u7684\u5f62\u5f0f\u5b8c\u6210\u5e76\u4e14\u548c Redis \u534f\u8bae\u672c\u8eab\u7684\u683c\u5f0f\u76f8\u540c\u3002 \u4e3b\u4ece\u590d\u5236\u914d\u7f6e\u65b9\u6848: \u9700\u8981\u5728\u6240\u6709\u7684slave\u4e3b\u673a\u4e2d\u627e\u5230redis.conf\u8fdb\u884c\u914d\u7f6e # \u914d\u7f6emaster\u670d\u52a1\u5668redis\u7684IP\u548cport slaveof 192.168.64.1 6379 # master\u670d\u52a1\u5668\u6388\u6743\u5bc6\u7801 masterauth root # master \u670d\u52a1\u5668redis\u7528\u6237\u540d \u5982\u679c\u662fdefault\u53ef\u4ee5\u4e0d\u7528\u914d\u7f6e masteruser default # slave\u662f\u5426\u53ea\u8bfb,\u4e00\u822c\u914d\u7f6e\u4e3ayes,\u9632\u6b62\u5199\u5165\u6570\u636e\u5bfc\u81f4\u540c\u6b65\u5931\u8d25 replica-read-only yes # \u662f\u5426\u4f7f\u7528\u65e0\u76d8\u540c\u6b65,\u542f\u52a8\u65e0\u76d8\u540c\u6b65\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u98ce\u9669 repl-diskless-sync no # \u65e0\u76d8\u540c\u6b65\u5ef6\u8fdf\u65f6\u95f4,\u4ee5\u7b49\u5f85\u5176\u4ed6slave\u5c31\u7eea repl-diskless-sync-delay 5 # slave\u670d\u52a1\u5668\u4f18\u5148\u7ea7,master down\u72b6\u6001\u65f6\u4f18\u5148\u5347\u7ea7\u4e3amaster,\u6570\u5b57\u5c0f\u7684\u6392\u5728\u524d\u5217,\u4e3a0\u65f6\u6c38\u4e0d\u5347\u7ea7\u4e3amaster replica-priority 100 \u54e8\u5175\u6a21\u5f0f Redis-Sentinel\u662fRedis\u5b98\u65b9\u63a8\u8350\u7684\u9ad8\u53ef\u7528\u6027(HA)\u89e3\u51b3\u65b9\u6848\uff0c\u5f53\u7528Redis\u505aMaster-slave\u7684\u9ad8\u53ef\u7528\u65b9\u6848\u65f6\uff0c\u5982\u679cmaster\u5b95\u673a\uff0cRedis\u81ea\u8eab\u5e76\u4e0d\u80fd\u5b9e\u73b0\u81ea\u52a8\u8fdb\u884c\u4e3b\u5907\u5207\u6362\uff0csentinel\u53ef\u4ee5\u76d1\u63a7\u590d\u5236\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5f53\u4e3b\u8282\u70b9\u5b95\u673a\u540e\uff0c\u5b83\u80fd\u6839\u636e\u9009\u4e3e\u65b9\u5f0f\u9009\u51fa\u540e\u7aef\u7684\u4e00\u4e2a\u4ece\u8282\u70b9\u4f5c\u4e3a\u65b0\u7684master\uff0csentinel\u8fd8\u80fd\u76d1\u63a7\u591a\u4e2amaster-slave\u96c6\u7fa4\uff0c\u53d1\u73b0master\u5b95\u673a\u540e\u80fd\u8fdb\u884c\u81ea\u52a8\u5207\u6362\u3002 redis\u4e3b\u4ece\u8bbe\u8ba1\u62d3\u6251\u56fe: \u529f\u80fd: \u76d1\u63a7: \u80fd\u4e0d\u65ad\u7684\u68c0\u6d4bmaster \u548cslave\u662f\u5426\u6b63\u5e38\u5de5\u4f5c \u901a\u77e5: \u5f53\u76d1\u63a7\u7684redis\u5b9e\u4f8b\u53d1\u751f\u9519\u8bef\u65f6,\u53ef\u4ee5\u901a\u8fc7\u5176Api\u901a\u77e5\u7cfb\u7edf\u7ba1\u7406\u5458\u6216\u5176\u4ed6\u7535\u8111\u7a0b\u5e8f \u81ea\u52a8\u6545\u969c\u8f6c\u79fb:\u5982\u679cmaster\u53d1\u751f\u6545\u969c\u65f6,sentinel\u4f1a\u5f00\u542f\u4e00\u4e2a\u6545\u969c\u8f6c\u79fb\u8fdb\u7a0b,\u5c06\u6295\u7968\u6311\u9009\u51fa\u5176\u4e2d\u4e00\u4e2aslave\u5347\u7ea7\u4e3a\u4e00\u4e2a\u65b0\u7684master,\u5176\u4ed6slave\u914d\u7f6e\u5230\u65b0\u7684master,\u5f62\u6210\u65b0\u7684\u4e3b\u4ece\u590d\u5236\u7ed3\u6784 \u63d0\u4f9b\u914d\u7f6e:\u5ba2\u6237\u7aef\u53ef\u4ee5\u8fde\u63a5\u5230sentinel\u6765\u64cd\u4f5credis\u6570\u636e\u8bfb\u5199,sentinel\u4f1a\u81ea\u52a8\u627e\u5230master\u670d\u52a1\u5668\u53d1\u9001redis\u547d\u4ee4,\u5f53\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u65f6,Redis\u7cfb\u7edf\u4f9d\u7136\u80fd\u6b63\u5e38\u5de5\u4f5c \u542f\u52a8Redis Sentinel\u547d\u4ee4 redis-sentinel /path/to/sentinel.conf \u6216\u8005 redis-server /path/to/sentinel.conf --sentinel \u4e24\u4e2a\u547d\u4ee4\u542f\u52a8\u7684\u6548\u679c\u662f\u4e00\u6837\u7684. # \u7aef\u53e3 port 26379 # \u662f\u5426\u540e\u53f0\u542f\u52a8\u8fdb\u7a0b daemonize yes/no # master-group-name: master\u670d\u52a1\u5668\u7684\u540d\u5b57,\u4e0d\u8bb8\u6709\u7279\u6b8a\u5b57\u7b26 # ip: master\u670d\u52a1\u5668IP # port: master\u670d\u52a1\u5668\u7aef\u53e3 # quorum: \u5f53sentinel\u65e0\u6cd5\u8fde\u63a5\u5230master\u65f6,\u4f1a\u6807\u8bb0sdown,\u5373\u4e3b\u89c2\u8ba4\u4e3a\u662fdown\u72b6\u6001,\u5f53sentinel\u6807\u8bb0\u7684sdown\u72b6\u6001\u8d85\u8fc7quonum\u7684\u6570\u91cf\u65f6,\u4e3amaster\u6807\u8bb0odown\u72b6\u6001,\u5f00\u542f\u6545\u969c\u8f6c\u79fb\u8fdb\u7a0b sentinel monitor <master-group-name> <ip> <port> <quorum> # \u4e3b\u670d\u52a1\u5668\u6388\u6743\u7801 sentinel auth-pass <master-name> <password> # \u6545\u969c\u8f6c\u79fb\u8d85\u65f6\u65f6\u95f4,\u5f53\u8d85\u8fc7\u914d\u7f6e\u7684\u65f6\u95f4,\u4efb\u52a1\u6545\u969c\u8f6c\u79fb\u5931\u8d25 sentinel failover-timeout <master-name> <milliseconds> # \u5f53sentinel\u5728\u6307\u5b9a\u6307\u5b9a\u65f6\u95f4\u5185\u65e0\u6cd5\u8fde\u63a5\u5230master,\u4e3b\u89c2\u4efb\u52a1down\u72b6\u6001,\u6807\u8bb0+sdown sentinel down-after-milliseconds <master-name> <milliseconds> # \u9009\u9879\u6307\u5b9a\u4e86\u5728\u6267\u884c\u6545\u969c\u8f6c\u79fb\u65f6\uff0c \u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a\u4ece\u670d\u52a1\u5668\u540c\u65f6\u5bf9\u65b0\u7684\u4e3b\u670d\u52a1\u5668\u8fdb\u884c\u540c\u6b65 sentinel parallel-syncs <master-name> <numreplicas> \u8fd0\u884c\u65f6\u91cd\u65b0\u914d\u7f6e # \u8fd0\u884c\u65f6\u65b0\u589e\u76d1\u63a7\u5bf9\u8c61 SENTINEL MONITOR <name> <ip> <port> <quorum> # \u79fb\u9664\u76d1\u63a7\u5bf9\u8c61 SENTINEL REMOVE <name> # \u8fd0\u884c\u65f6\u4fee\u6539master\u914d\u7f6e name\u4e3amaster\u670d\u52a1\u5668Redis\u540d\u5b57 SENTINEL SET <name> <option> <value> \u6dfb\u52a0\u6216\u79fb\u9664Sentinel \u6dfb\u52a0\u4e00\u4e2aSentinel\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u5e76\u542f\u52a8\u8be5\u8fdb\u7a0b,\u7531\u4e8eSentinel\u7531\u81ea\u52a8\u53d1\u73b0\u7684\u673a\u5236,\u5982\u679c\u60f3\u8981\u4e00\u6b21\u6027\u6dfb\u52a0\u591a\u4e2aSentinel,\u9700\u8981\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684\u6dfb\u52a0,\u7b49\u5f85\u81f3\u5c1130s\u540e\u5176\u4ed6\u7684Sentinel\u51c6\u5907\u5c31\u7eea\u540e\u518d\u6dfb\u52a0\u4e0b\u4e00\u4e2a. \u5982\u679c\u60f3\u5220\u9664\u4e00\u4e2aSentinel,\u9700\u8981\u5148\u505c\u6b62\u8be5\u8fdb\u7a0b,\u7136\u540e\u5728\u5176\u4ed6\u7684Sentinel\u53d1\u9001 sentinel reset * \u547d\u4ee4,*\u53ef\u4ee5\u66ff\u6362\u6210mastername \u6700\u540e\u5728\u68c0\u67e5\u4e00\u4e0b\u6bcf\u4e2asentinel, \u901a\u8fc7\u547d\u4ee4 SENTINEL MASTER mastername \u79fb\u9664\u4e00\u4e2a\u65e7\u7684master\u6216\u8005\u4e0d\u80fd\u8fde\u63a5\u7684slave sentinel\u4e0d\u4f1a\u6bcf\u4e00\u4e2aslave,\u5373\u4f7f\u5f88\u957f\u65f6\u95f4\u4e0d\u80fd\u8fde\u63a5,\u56e0\u4e3a\u5b83\u8981\u5728slave\u91cd\u65b0\u8fde\u63a5\u65f6\u91cd\u65b0\u914d\u7f6e,\u6240\u4ee5\u9700\u8981\u6267\u884c sentinel master mastername ,\u5728\u63a5\u4e0b\u6765\u768410s\u4f1a\u5237\u65b0\u8fd9\u4e2a\u914d\u7f6e","title":"Redis \u4e3b\u4ece\u590d\u5236 \uff08Replication\uff09"},{"location":"Redis/redis-replication/#redis-replication","text":"Redis\u4e3b\u4ece\u6a21\u5f0f\u73b0\u6570\u636e\u5907\u4efd","title":"Redis \u4e3b\u4ece\u590d\u5236 \uff08Replication\uff09"},{"location":"Redis/redis-replication/#_1","text":"\u5f53master\u4e0eslave\u8fde\u63a5\u826f\u597d\uff0cmaster\u4f1a\u5411slave\u53d1\u9001\u5b83\u63a5\u6536\u7684\u547d\u4ee4\u6765\u4fdd\u6301\u6570\u636e\u540c\u6b65 \u5f53master\u4e0eslave\u7531\u4e8e\u7f51\u7edc\u7b49\u95ee\u9898\u65ad\u5f00\u65f6\uff0c\u5728slave\u91cd\u8fde\u540e\uff0c\u4f1a\u5c1d\u8bd5\u83b7\u53d6\u65ad\u5f00\u671f\u95f4\u7684\u540c\u6b65\u547d\u4ee4 \u5f53\u90e8\u5206\u540c\u6b65\u5931\u8d25\u65f6\uff0cmaster\u4f1a\u5c06\u6240\u6709\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u5feb\u7167\u7248\u672c\uff0c\u4e00\u8d77\u53d1\u9001\u7ed9slave,\u7ee7\u7eed\u540e\u7eed\u540c\u6b65\u547d\u4ee4","title":"\u4e3b\u4ece\u590d\u5236\u64cd\u4f5c\u673a\u5236\uff1a"},{"location":"Redis/redis-replication/#_2","text":"Redis \u4f7f\u7528\u5f02\u6b65\u590d\u5236\uff0cslave \u548c master \u4e4b\u95f4\u5f02\u6b65\u5730\u786e\u8ba4\u5904\u7406\u7684\u6570\u636e\u91cf \u4e00\u4e2a master \u53ef\u4ee5\u62e5\u6709\u591a\u4e2a slave slave\u53ef\u4ee5\u63a5\u6536\u5176\u4ed6\u591a\u4e2aslave\u8fde\u63a5,\u6765\u5b9e\u73b0\u5c42\u53e0\u5f0f\u7684\u4e3b\u4ece\u4ece\u7ed3\u6784,\u50cfA->B->C,\u5176\u4e2dB\u662fA\u7684slave,C\u662fB\u7684slave Redis\u590d\u5236\u662f\u5f02\u6b65\u7684,\u610f\u5473\u7740master\u5411slave\u53d1\u9001\u540c\u6b65\u547d\u4ee4\u65f6,\u53ef\u4ee5\u7ee7\u7eed\u63a5\u6536\u5ba2\u6237\u7aef\u6570\u636e slave\u7aef\u7684\u590d\u5236\u4e5f\u662f\u5f02\u6b65\u7684,\u5f53 slave \u8fdb\u884c\u521d\u6b21\u540c\u6b65\u65f6\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u65e7\u6570\u636e\u96c6\u5904\u7406\u67e5\u8be2\u8bf7\u6c42\u3002(replica-serve-stale-data \u914d\u7f6e\u4e3a yes \u65f6,\u4f1a\u6b63\u5e38\u8fd4\u56de,\u53ef\u80fd\u8fd4\u56de\u7a7a\u6570\u636e\u96c6,\u5982\u679c\u914d\u7f6e\u4e3a no ,\u5c06\u8fd4\u56de\u5ba2\u6237\u7aef\u4e00\u4e2a\u9519\u8bef)\u540c\u6b65\u4e4b\u540e\uff0c\u65e7\u6570\u636e\u96c6\u5fc5\u987b\u88ab\u5220\u9664\uff0c\u540c\u65f6\u52a0\u8f7d\u65b0\u7684\u6570\u636e\u96c6\u3002 slave \u5728\u8fd9\u4e2a\u77ed\u6682\u7684\u65f6\u95f4\u7a97\u53e3\u5185\uff08\u5982\u679c\u6570\u636e\u96c6\u5f88\u5927\uff0c\u4f1a\u6301\u7eed\u8f83\u957f\u65f6\u95f4\uff09\uff0c\u4f1a\u963b\u585e\u5230\u6765\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u53ef\u4ee5\u4f7f\u7528\u590d\u5236\u6765\u907f\u514d master \u5c06\u5168\u90e8\u6570\u636e\u96c6\u5199\u5165\u78c1\u76d8\u9020\u6210\u7684\u5f00\u9500\uff1a\u4e00\u79cd\u5178\u578b\u7684\u6280\u672f\u662f\u914d\u7f6e\u4f60\u7684 master Redis.conf \u4ee5\u907f\u514d\u5bf9\u78c1\u76d8\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u7136\u540e\u8fde\u63a5\u4e00\u4e2a slave \uff0c\u5176\u914d\u7f6e\u4e3a\u4e0d\u5b9a\u671f\u4fdd\u5b58\u6216\u662f\u542f\u7528 AOF\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u5fc5\u987b\u5c0f\u5fc3\u5904\u7406\uff0c\u56e0\u4e3a\u91cd\u65b0\u542f\u52a8\u7684 master \u7a0b\u5e8f\u5c06\u4ece\u4e00\u4e2a\u7a7a\u6570\u636e\u96c6\u5f00\u59cb\uff1a\u5982\u679c\u4e00\u4e2a slave \u8bd5\u56fe\u4e0e\u5b83\u540c\u6b65\uff0c\u90a3\u4e48\u8fd9\u4e2a slave \u4e5f\u4f1a\u88ab\u6e05\u7a7a","title":"\u4e3b\u4ece\u590d\u5236\u7279\u6027:"},{"location":"Redis/redis-replication/#redis","text":"\u6bcf\u4e00\u4e2a Redis master \u90fd\u6709\u4e00\u4e2a replication ID \uff1a\u8fd9\u662f\u4e00\u4e2a\u8f83\u5927\u7684\u4f2a\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u6807\u8bb0\u4e86\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u3002\u6bcf\u4e2a master \u4e5f\u6301\u6709\u4e00\u4e2a\u504f\u79fb\u91cf\uff0cmaster \u5c06\u81ea\u5df1\u4ea7\u751f\u7684\u590d\u5236\u6d41\u53d1\u9001\u7ed9 slave \u65f6\uff0c\u53d1\u9001\u591a\u5c11\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u81ea\u8eab\u7684\u504f\u79fb\u91cf\u5c31\u4f1a\u589e\u52a0\u591a\u5c11\uff0c\u76ee\u7684\u662f\u5f53\u6709\u65b0\u7684\u64cd\u4f5c\u4fee\u6539\u81ea\u5df1\u7684\u6570\u636e\u96c6\u65f6\uff0c\u5b83\u53ef\u4ee5\u4ee5\u6b64\u66f4\u65b0 slave \u7684\u72b6\u6001\u3002\u590d\u5236\u504f\u79fb\u91cf\u5373\u4f7f\u5728\u6ca1\u6709\u4e00\u4e2a slave \u8fde\u63a5\u5230 master \u65f6\uff0c\u4e5f\u4f1a\u81ea\u589e\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u6bcf\u4e00\u5bf9\u7ed9\u5b9a\u7684 Replication ID, offset \u90fd\u4f1a\u6807\u8bc6\u4e00\u4e2a master \u6570\u636e\u96c6\u7684\u786e\u5207\u7248\u672c\u3002 \u5f53 slave \u8fde\u63a5\u5230 master \u65f6\uff0c\u5b83\u4eec\u4f7f\u7528 PSYNC \u547d\u4ee4\u6765\u53d1\u9001\u5b83\u4eec\u8bb0\u5f55\u7684\u65e7\u7684 master replication ID \u548c\u5b83\u4eec\u81f3\u4eca\u4e3a\u6b62\u5904\u7406\u7684\u504f\u79fb\u91cf\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c master \u80fd\u591f\u4ec5\u53d1\u9001 slave \u6240\u9700\u7684\u589e\u91cf\u90e8\u5206\u3002\u4f46\u662f\u5982\u679c master \u7684\u7f13\u51b2\u533a\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u547d\u4ee4\u79ef\u538b\u7f13\u51b2\u8bb0\u5f55\uff0c\u6216\u8005\u5982\u679c slave \u5f15\u7528\u4e86\u4e0d\u518d\u77e5\u9053\u7684\u5386\u53f2\u8bb0\u5f55\uff08replication ID\uff09\uff0c\u5219\u4f1a\u8f6c\u800c\u8fdb\u884c\u4e00\u4e2a\u5168\u91cf\u91cd\u540c\u6b65\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c slave \u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u96c6\u526f\u672c\uff0c\u4ece\u5934\u5f00\u59cb\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5168\u91cf\u540c\u6b65\u7684\u5de5\u4f5c\u7ec6\u8282\uff1a master \u5f00\u542f\u4e00\u4e2a\u540e\u53f0\u4fdd\u5b58\u8fdb\u7a0b\uff0c\u4ee5\u4fbf\u4e8e\u751f\u4ea7\u4e00\u4e2a RDB \u6587\u4ef6\u3002\u540c\u65f6\u5b83\u5f00\u59cb\u7f13\u51b2\u6240\u6709\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u7684\u65b0\u7684\u5199\u5165\u547d\u4ee4\u3002\u5f53\u540e\u53f0\u4fdd\u5b58\u5b8c\u6210\u65f6\uff0c master \u5c06\u6570\u636e\u96c6\u6587\u4ef6\u4f20\u8f93\u7ed9 slave\uff0c slave\u5c06\u4e4b\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u7136\u540e\u52a0\u8f7d\u6587\u4ef6\u5230\u5185\u5b58\u3002\u518d\u7136\u540e master \u4f1a\u53d1\u9001\u6240\u6709\u7f13\u51b2\u7684\u547d\u4ee4\u53d1\u7ed9 slave\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4ee5\u6307\u4ee4\u6d41\u7684\u5f62\u5f0f\u5b8c\u6210\u5e76\u4e14\u548c Redis \u534f\u8bae\u672c\u8eab\u7684\u683c\u5f0f\u76f8\u540c\u3002","title":"Redis\u590d\u5236\u5b9e\u73b0\u539f\u7406"},{"location":"Redis/redis-replication/#_3","text":"\u9700\u8981\u5728\u6240\u6709\u7684slave\u4e3b\u673a\u4e2d\u627e\u5230redis.conf\u8fdb\u884c\u914d\u7f6e # \u914d\u7f6emaster\u670d\u52a1\u5668redis\u7684IP\u548cport slaveof 192.168.64.1 6379 # master\u670d\u52a1\u5668\u6388\u6743\u5bc6\u7801 masterauth root # master \u670d\u52a1\u5668redis\u7528\u6237\u540d \u5982\u679c\u662fdefault\u53ef\u4ee5\u4e0d\u7528\u914d\u7f6e masteruser default # slave\u662f\u5426\u53ea\u8bfb,\u4e00\u822c\u914d\u7f6e\u4e3ayes,\u9632\u6b62\u5199\u5165\u6570\u636e\u5bfc\u81f4\u540c\u6b65\u5931\u8d25 replica-read-only yes # \u662f\u5426\u4f7f\u7528\u65e0\u76d8\u540c\u6b65,\u542f\u52a8\u65e0\u76d8\u540c\u6b65\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u98ce\u9669 repl-diskless-sync no # \u65e0\u76d8\u540c\u6b65\u5ef6\u8fdf\u65f6\u95f4,\u4ee5\u7b49\u5f85\u5176\u4ed6slave\u5c31\u7eea repl-diskless-sync-delay 5 # slave\u670d\u52a1\u5668\u4f18\u5148\u7ea7,master down\u72b6\u6001\u65f6\u4f18\u5148\u5347\u7ea7\u4e3amaster,\u6570\u5b57\u5c0f\u7684\u6392\u5728\u524d\u5217,\u4e3a0\u65f6\u6c38\u4e0d\u5347\u7ea7\u4e3amaster replica-priority 100","title":"\u4e3b\u4ece\u590d\u5236\u914d\u7f6e\u65b9\u6848:"},{"location":"Redis/redis-replication/#_4","text":"Redis-Sentinel\u662fRedis\u5b98\u65b9\u63a8\u8350\u7684\u9ad8\u53ef\u7528\u6027(HA)\u89e3\u51b3\u65b9\u6848\uff0c\u5f53\u7528Redis\u505aMaster-slave\u7684\u9ad8\u53ef\u7528\u65b9\u6848\u65f6\uff0c\u5982\u679cmaster\u5b95\u673a\uff0cRedis\u81ea\u8eab\u5e76\u4e0d\u80fd\u5b9e\u73b0\u81ea\u52a8\u8fdb\u884c\u4e3b\u5907\u5207\u6362\uff0csentinel\u53ef\u4ee5\u76d1\u63a7\u590d\u5236\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5f53\u4e3b\u8282\u70b9\u5b95\u673a\u540e\uff0c\u5b83\u80fd\u6839\u636e\u9009\u4e3e\u65b9\u5f0f\u9009\u51fa\u540e\u7aef\u7684\u4e00\u4e2a\u4ece\u8282\u70b9\u4f5c\u4e3a\u65b0\u7684master\uff0csentinel\u8fd8\u80fd\u76d1\u63a7\u591a\u4e2amaster-slave\u96c6\u7fa4\uff0c\u53d1\u73b0master\u5b95\u673a\u540e\u80fd\u8fdb\u884c\u81ea\u52a8\u5207\u6362\u3002","title":"\u54e8\u5175\u6a21\u5f0f"},{"location":"Redis/redis-replication/#redis_1","text":"\u529f\u80fd: \u76d1\u63a7: \u80fd\u4e0d\u65ad\u7684\u68c0\u6d4bmaster \u548cslave\u662f\u5426\u6b63\u5e38\u5de5\u4f5c \u901a\u77e5: \u5f53\u76d1\u63a7\u7684redis\u5b9e\u4f8b\u53d1\u751f\u9519\u8bef\u65f6,\u53ef\u4ee5\u901a\u8fc7\u5176Api\u901a\u77e5\u7cfb\u7edf\u7ba1\u7406\u5458\u6216\u5176\u4ed6\u7535\u8111\u7a0b\u5e8f \u81ea\u52a8\u6545\u969c\u8f6c\u79fb:\u5982\u679cmaster\u53d1\u751f\u6545\u969c\u65f6,sentinel\u4f1a\u5f00\u542f\u4e00\u4e2a\u6545\u969c\u8f6c\u79fb\u8fdb\u7a0b,\u5c06\u6295\u7968\u6311\u9009\u51fa\u5176\u4e2d\u4e00\u4e2aslave\u5347\u7ea7\u4e3a\u4e00\u4e2a\u65b0\u7684master,\u5176\u4ed6slave\u914d\u7f6e\u5230\u65b0\u7684master,\u5f62\u6210\u65b0\u7684\u4e3b\u4ece\u590d\u5236\u7ed3\u6784 \u63d0\u4f9b\u914d\u7f6e:\u5ba2\u6237\u7aef\u53ef\u4ee5\u8fde\u63a5\u5230sentinel\u6765\u64cd\u4f5credis\u6570\u636e\u8bfb\u5199,sentinel\u4f1a\u81ea\u52a8\u627e\u5230master\u670d\u52a1\u5668\u53d1\u9001redis\u547d\u4ee4,\u5f53\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u65f6,Redis\u7cfb\u7edf\u4f9d\u7136\u80fd\u6b63\u5e38\u5de5\u4f5c","title":"redis\u4e3b\u4ece\u8bbe\u8ba1\u62d3\u6251\u56fe:"},{"location":"Redis/redis-replication/#redis-sentinel","text":"redis-sentinel /path/to/sentinel.conf \u6216\u8005 redis-server /path/to/sentinel.conf --sentinel \u4e24\u4e2a\u547d\u4ee4\u542f\u52a8\u7684\u6548\u679c\u662f\u4e00\u6837\u7684. # \u7aef\u53e3 port 26379 # \u662f\u5426\u540e\u53f0\u542f\u52a8\u8fdb\u7a0b daemonize yes/no # master-group-name: master\u670d\u52a1\u5668\u7684\u540d\u5b57,\u4e0d\u8bb8\u6709\u7279\u6b8a\u5b57\u7b26 # ip: master\u670d\u52a1\u5668IP # port: master\u670d\u52a1\u5668\u7aef\u53e3 # quorum: \u5f53sentinel\u65e0\u6cd5\u8fde\u63a5\u5230master\u65f6,\u4f1a\u6807\u8bb0sdown,\u5373\u4e3b\u89c2\u8ba4\u4e3a\u662fdown\u72b6\u6001,\u5f53sentinel\u6807\u8bb0\u7684sdown\u72b6\u6001\u8d85\u8fc7quonum\u7684\u6570\u91cf\u65f6,\u4e3amaster\u6807\u8bb0odown\u72b6\u6001,\u5f00\u542f\u6545\u969c\u8f6c\u79fb\u8fdb\u7a0b sentinel monitor <master-group-name> <ip> <port> <quorum> # \u4e3b\u670d\u52a1\u5668\u6388\u6743\u7801 sentinel auth-pass <master-name> <password> # \u6545\u969c\u8f6c\u79fb\u8d85\u65f6\u65f6\u95f4,\u5f53\u8d85\u8fc7\u914d\u7f6e\u7684\u65f6\u95f4,\u4efb\u52a1\u6545\u969c\u8f6c\u79fb\u5931\u8d25 sentinel failover-timeout <master-name> <milliseconds> # \u5f53sentinel\u5728\u6307\u5b9a\u6307\u5b9a\u65f6\u95f4\u5185\u65e0\u6cd5\u8fde\u63a5\u5230master,\u4e3b\u89c2\u4efb\u52a1down\u72b6\u6001,\u6807\u8bb0+sdown sentinel down-after-milliseconds <master-name> <milliseconds> # \u9009\u9879\u6307\u5b9a\u4e86\u5728\u6267\u884c\u6545\u969c\u8f6c\u79fb\u65f6\uff0c \u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a\u4ece\u670d\u52a1\u5668\u540c\u65f6\u5bf9\u65b0\u7684\u4e3b\u670d\u52a1\u5668\u8fdb\u884c\u540c\u6b65 sentinel parallel-syncs <master-name> <numreplicas>","title":"\u542f\u52a8Redis Sentinel\u547d\u4ee4"},{"location":"Redis/redis-replication/#_5","text":"# \u8fd0\u884c\u65f6\u65b0\u589e\u76d1\u63a7\u5bf9\u8c61 SENTINEL MONITOR <name> <ip> <port> <quorum> # \u79fb\u9664\u76d1\u63a7\u5bf9\u8c61 SENTINEL REMOVE <name> # \u8fd0\u884c\u65f6\u4fee\u6539master\u914d\u7f6e name\u4e3amaster\u670d\u52a1\u5668Redis\u540d\u5b57 SENTINEL SET <name> <option> <value>","title":"\u8fd0\u884c\u65f6\u91cd\u65b0\u914d\u7f6e"},{"location":"Redis/redis-replication/#sentinel","text":"\u6dfb\u52a0\u4e00\u4e2aSentinel\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u5e76\u542f\u52a8\u8be5\u8fdb\u7a0b,\u7531\u4e8eSentinel\u7531\u81ea\u52a8\u53d1\u73b0\u7684\u673a\u5236,\u5982\u679c\u60f3\u8981\u4e00\u6b21\u6027\u6dfb\u52a0\u591a\u4e2aSentinel,\u9700\u8981\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684\u6dfb\u52a0,\u7b49\u5f85\u81f3\u5c1130s\u540e\u5176\u4ed6\u7684Sentinel\u51c6\u5907\u5c31\u7eea\u540e\u518d\u6dfb\u52a0\u4e0b\u4e00\u4e2a. \u5982\u679c\u60f3\u5220\u9664\u4e00\u4e2aSentinel,\u9700\u8981\u5148\u505c\u6b62\u8be5\u8fdb\u7a0b,\u7136\u540e\u5728\u5176\u4ed6\u7684Sentinel\u53d1\u9001 sentinel reset * \u547d\u4ee4,*\u53ef\u4ee5\u66ff\u6362\u6210mastername \u6700\u540e\u5728\u68c0\u67e5\u4e00\u4e0b\u6bcf\u4e2asentinel, \u901a\u8fc7\u547d\u4ee4 SENTINEL MASTER mastername","title":"\u6dfb\u52a0\u6216\u79fb\u9664Sentinel"},{"location":"Redis/redis-replication/#masterslave","text":"sentinel\u4e0d\u4f1a\u6bcf\u4e00\u4e2aslave,\u5373\u4f7f\u5f88\u957f\u65f6\u95f4\u4e0d\u80fd\u8fde\u63a5,\u56e0\u4e3a\u5b83\u8981\u5728slave\u91cd\u65b0\u8fde\u63a5\u65f6\u91cd\u65b0\u914d\u7f6e,\u6240\u4ee5\u9700\u8981\u6267\u884c sentinel master mastername ,\u5728\u63a5\u4e0b\u6765\u768410s\u4f1a\u5237\u65b0\u8fd9\u4e2a\u914d\u7f6e","title":"\u79fb\u9664\u4e00\u4e2a\u65e7\u7684master\u6216\u8005\u4e0d\u80fd\u8fde\u63a5\u7684slave"},{"location":"VIM/vim/","text":":set showmode \u663e\u793avim\u6a21\u5f0f \u79fb\u52a8\u5149\u6807 h \u5de6 j \u4e0b k \u4e0a l \u53f3 w \u5149\u6807\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd\u5230\u9996\u5b57\u6bcd b \u5982\u679c\u5149\u6807\u5728\u5355\u8bcd\u9996\u5b57\u6bcd\uff0c\u5219\u8df3\u5230\u524d\u4e00\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\uff0c\u5426\u5219\u8df3\u5230\u672c\u5355\u8bcd\u7684\u9996\u5b57\u6bcd e \u5982\u679c\u5149\u6807\u5728\u5355\u8bcd\u672b\uff0c\u5219\u8df3\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u672b\uff0c\u5426\u5219\uff0c\u8df3\u5230\u672c\u5355\u8bcd\u672b ge \u5149\u6807\u5411\u5de6\u4e00\u4e2a\u5355\u8bcd\u5e76\u5230\u8bcd\u672b 0/Home \u79fb\u52a8\u5149\u6807\u5230\u5f53\u524d\u884c\u884c\u9996 $/End \u79fb\u52a8\u5149\u6807\u5230\u5f53\u524d\u884c\u884c\u5c3e f/F \u884c\u7ea7\u67e5\u627e\u5355\u4e2a\u5b57\u7b26\uff0c\u5149\u6807\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0cf\u5411\u53f3\uff0cF\u5411\u5de6 % \u5149\u6807\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u62ec\u53f7\u4e0a\uff0c() [] {} G +\u6570\u5b57\u524d\u7f00\u79fb\u52a8\u5230\u6307\u5b9a\u884c\uff0c\u4f8b\u598233G,\u5149\u6807\u4f1a\u79fb\u52a8\u523033\u884c\uff0c\u5982\u679c\u6ca1\u6709\u6570\u5b57\u524d\u7f00\uff0c\u5219\u79fb\u52a8\u5230\u6700\u540e\u4e00\u884c gg \u79fb\u52a8\u5149\u6807\u5230\u6587\u4ef6\u9996\uff0c\u53ca\u7b2c\u4e00\u884c\uff0c\u6216\u80051G\u547d\u4ee4 \u8ba1\u6570\u5668 + % \u6309\u7167\u767e\u5206\u6bd4\u79fb\u52a8\u5230\u6587\u4ef6\u7684\u5927\u81f4\u4f4d\u7f6e Ctrl + G \u663e\u793a\u6587\u4ef6\u540d + \u603b\u884c\u6570 + \u6240\u5728\u884c\u6570\u5360\u603b\u884c\u6570\u7684\u767e\u5206\u6bd4 :set nu/:set number \u663e\u793a\u884c\u53f7 :set nonu/:set nonumber \u5173\u95ed\u884c\u53f7 :set ruler \u663e\u793a\u5f53\u524d\u5149\u6807\u6240\u5728\u4f4d\u7f6e Ctrl + U \u5411\u4e0b\u79fb\u52a8\u534a\u5c4f Ctrl + D \u5411\u4e0b\u79fb\u52a8\u534a\u5c4f Ctrl + E \u4e0a\u6eda\u4e00\u884c Ctrl + Y \u4e0b\u6eda\u4e00\u884c Ctrl + B \u5411\u524d\u6eda\u52a8\u6574\u5c4f\uff08\u51cf\u4e24\u884c\uff09 Ctrl + F \u5411\u540e\u6eda\u52a8\u6574\u5c4f zt \u5149\u6807\u6240\u5728\u884c\u79fb\u52a8\u5230\u5c4f\u5e55\u9876\u90e8 zz \u5149\u6807\u6240\u5728\u884c\u79fb\u52a8\u5230\u5c4f\u5e55\u4e2d\u95f4 zb \u5149\u6807\u6240\u5728\u884c\u79fb\u52a8\u5230\u5c4f\u5e55\u5e95\u90e8","title":"Vim"},{"location":"java/String/","text":"java.lang.String","title":"\u5b57\u7b26\u4e32"},{"location":"java/JUC/ReentrantLock/","text":"ReentrantLock(\u53ef\u91cd\u5165\u540c\u6b65\u9501) \u200b ReentrantLock\u5b9e\u73b0\u4e86Lock\u63a5\u53e3 //\u52a0\u9501 void lock(); //\u53ef\u4e2d\u65ad\u7684\u9501 void lockInterruptibly() //\u5c1d\u8bd5\u52a0\u9501,\u6210\u529f\u8fd4\u56detrue,\u5426\u5219\u8fd4\u56defalse boolean tryLock(); //\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u83b7\u53d6\u9501,\u5982\u679c\u83b7\u53d6\u6210\u529f\u8fd4\u56detrue,\u5426\u5219\u8fd4\u56defalse,\u5982\u679c\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u5219\u629b\u51faInterruptedException boolean tryLock(long time, TimeUnit unit) throws InterruptedException; //\u91ca\u653e\u9501 void unlock(); //\u8fd4\u56de Condition\u5b9e\u4f8b,\u524d\u63d0\u662f\u5f53\u524d\u7ebf\u7a0b\u5fc5\u987b\u62e5\u6709\u9501,\u7528\u6237\u7ebf\u7a0b\u7b49\u5f85\u6216\u8005\u5524\u9192\u7684\u64cd\u4f5c Condition newCondition(); ReentrantLock\u540c\u6b65\u9501\u4e2d\u5305\u542b\u4e86\u516c\u5e73\u9501\u548c\u975e\u516c\u5e73\u9501,\u5176\u5e95\u5c42\u662f\u57fa\u4e8eAQS\u5b9e\u73b0\u7684,\u6211\u4eec\u5206\u522b\u7814\u7a76\u4e0b\u8fd9\u4e24\u79cd\u9501\u662f\u5982\u4f55\u5b9e\u73b0\u7684.\u5982\u4f55\u521b\u5efa\u516c\u5e73\u9501\u4e0e\u975e\u516c\u5e73\u9501, \u53ef\u4ee5\u901a\u8fc7\u5176\u6784\u9020\u5668\u5f97\u77e5. //\u9ed8\u8ba4\u662f\u975e\u516c\u5e73\u9501 public ReentrantLock() { sync = new NonfairSync(); } //true\u4e3a\u516c\u5e73\u9501,false\u4e3a\u975e\u516c\u5e73\u9501 public ReentrantLock(boolean fair) { sync = fair ? new FairSync() : new NonfairSync(); } \u516c\u5e73\u9501 lock(\u52a0\u9501) public void lock() { //\u540c\u6b65\u5bf9\u8c61\u52a0\u9501 sync.lock(); } final void lock() { //\u83b7\u53d6\u4e00\u628a\u9501 acquire(1); } public final void acquire(int arg) { // tryAcquire\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u4e00\u628a\u9501,\u5982\u679c\u8fd4\u56detrue\u4ee3\u8868\u83b7\u53d6\u9501\u6210\u529f,\u5982\u679c\u83b7\u53d6\u5931\u8d25,\u5c06\u5f53\u524d\u7ebf\u7a0b\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217,\u5e76\u6807 // \u8bb0\u72ec\u5360\u6a21\u5f0f,\u5982\u679cacquireQueued\u8fd4\u56detrue\u4ee3\u8868\u7ebf\u7a0b\u9700\u8981\u4e2d\u65ad if (!tryAcquire(arg) && acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad\u72b6\u6001\u4e3atrue,\u8c03\u7528\u7ebf\u7a0b\u4e2d\u65ad\u65b9\u6cd5,\u539f\u56e0\u662f\u83b7\u53d6\u4e2d\u65ad\u72b6\u6001\u540e,\u7ebf\u7a0b\u72b6\u6001\u4f1a\u88ab\u6e05\u7406 selfInterrupt(); } //\u5c1d\u8bd5\u83b7\u53d6\u9501 protected final boolean tryAcquire(int acquires) { //\u83b7\u53d6\u5f53\u524d\u7ade\u4e89\u9501\u7684\u7ebf\u7a0b final Thread current = Thread.currentThread(); //\u9501\u7684\u72b6\u6001,\u5982\u679c\u4e3a0,\u4ee3\u8868\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001,\u5927\u4e8e0,\u5176\u503c\u4ee3\u8868\u9501\u7684\u5904\u7406,\u5728\u4f7f\u7528\u9501\u7684\u9636\u6bb5,\u52a0\u9501\u548c\u91ca\u653e\u9501\u90fd\u9700\u8981\u6210\u5bf9\u51fa\u73b0, //\u5373\u8c03\u7528lock()\u540e\u9700\u8981\u8c03\u7528unlock()\u6765\u91ca\u653e,\u6bcf\u6b21\u52a0\u9501state+1,\u91ca\u653e\u9501\u65f6state-1 int c = getState(); //\u5982\u679c\u9501\u72b6\u6001\u4e3a0,\u4ee3\u8868\u7a7a\u95f2 if (c == 0) { //hasQueuedPredecessors()\u65b9\u6cd5\u5224\u65ad\u540c\u6b65\u961f\u5217\u4e2d\u662f\u5426\u6709\u6392\u5728\u5f53\u524d\u7ebf\u7a0b\u4e4b\u524d\u7684\u7ebf\u7a0b\u7ade\u4e89\u9501,\u8fd9\u662f\u516c\u5e73\u9501\u7684\u4f53\u73b0. //\u540c\u6b65\u961f\u5217\u662f\u4f7f\u7528FIFO\u7684\u8bbe\u8ba1,\u5373\u5148\u8fdb\u5148\u51fa //compareAndSetState()\u65b9\u6cd5\u4f7f\u7528CAS\u64cd\u4f5c\u8bbe\u7f6estate\u503c,\u8fd4\u56detrue\u4ee3\u8868\u8bbe\u7f6e\u6210\u529f,\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4f7f\u7528CAS\u64cd\u4f5c,\u4e2a\u4eba\u8ba4\u4e3a\u662f\u4e00\u79cd\u60b2\u89c2\u7684\u4f53\u73b0,\u5f53\u524d\u7ebf\u7a0b\u59cb\u7ec8\u8ba4\u4e3a\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u62a2\u9501,\u6240\u4ee5\u81ea\u8eab\u4e5f\u5c1d\u8bd5\u7ade\u4e89\u662f\u5426\u80fd\u591f\u6210\u529f //setExclusiveOwnerThread()\u65b9\u6cd5\u8bbe\u7f6e\u9501\u88ab\u72ec\u5360\u7684\u7ebf\u7a0b,\u6700\u7ec8\u8fd4\u56detrue\u4ee3\u8868\u53d6\u9501\u6210\u529f if (!hasQueuedPredecessors() && compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u4e0e\u72ec\u5360\u9501\u7684\u7ebf\u7a0b\u662f\u5426\u76f8\u7b49,\u5982\u679c\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b,\u5141\u8bb8\u83b7\u53d6\u9501,\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u91cd\u5165\u7684\u9501 else if (current == getExclusiveOwnerThread()) { //\u52a0\u9501\u7684\u6b21\u6570 int nextc = c + acquires; if (nextc < 0) throw new Error(\"Maximum lock count exceeded\"); //\u8bbe\u7f6estate,\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528CAS\u64cd\u4f5c?\u56e0\u4e3a\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u9501,\u4e0d\u4f1a\u6709\u5176\u4ed6\u7ebf\u7a0b\u7ade\u4e89 setState(nextc); return true; } return false; } public final boolean hasQueuedPredecessors() { // The correctness of this depends on head being initialized // before tail and on head.next being accurate if the current // thread is first in queue. //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u5728\u961f\u5217\u4e4b\u524d\u662f\u5426\u8fd8\u6709\u7ade\u4e89\u8005\u5728\u6392\u961f,FIFO\u961f\u5217,\u9996\u5148\u7684\u6761\u4ef6\u662fhead != tail \u56e0\u4e3ahead\u548ctail\u76f8\u7b49\u65f6\u961f\u5217\u662f\u7a7a\u7684,\u5176\u6b21\u5224\u65adhead\u7684next\u8282\u70b9\u7684\u7ebf\u7a0b\u4e0d\u7b49\u4e8e\u5f53\u524d\u7ebf\u7a0b,\u4ee3\u8868\u5f53\u524d\u7ebf\u7a0b\u4e0d\u662f\u6392\u5728\u7b2c\u4e00\u4e2a Node t = tail; // Read fields in reverse initialization order Node h = head; Node s; return h != t && ((s = h.next) == null || s.thread != Thread.currentThread()); } //\u524d\u9762\u8bb2\u5230\u5982\u679ctryAcquire(int)\u65b9\u6cd5\u83b7\u53d6\u5931\u8d25,\u4f1a\u5c06\u5f53\u524d\u7ebf\u7a0b\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u7b49\u5f85,\u6211\u4eec\u6765\u770b\u4e00\u770b\u662f\u5982\u4f55\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u7684? final boolean acquireQueued(final Node node, int arg) { //failed \u5c5e\u6027\u662f\u4e00\u4e2a\u5931\u8d25\u7684\u6807\u8bc6,\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25,\u53d6\u6d88\u5f53\u524d\u7ebf\u7a0b\u53bb\u7ade\u4e89\u9501,\u5982\u679c\u53d6\u6d88\u7a0d\u540e\u89e3\u91ca boolean failed = true; try { //\u7ebf\u7a0b\u4e2d\u65ad\u6807\u8bc6,\u5982\u679c\u4e3atrue,\u4ee3\u8868\u7ebf\u7a0b\u9700\u8981\u4e2d\u65ad,\u5728\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u540e\u8c03\u7528 boolean interrupted = false; //\u8fd9\u91cc\u662f\u81ea\u65cb for (;;) { //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9 final Node p = node.predecessor(); //\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u662f\u5934\u8282\u70b9,\u5219\u5c1d\u8bd5\u83b7\u53d6\u9501,\u83b7\u53d6\u9501\u7684\u7ed3\u679c\u51b3\u5b9a\u5f53\u524d\u7ebf\u7a0b\u7684\u8d70\u5411 //1.\u83b7\u53d6\u9501\u6210\u529f,\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9,\u5e76\u8fd4\u56de if (p == head && tryAcquire(arg)) { // head = node; node.thread = null; node.prev = null; setHead(node); p.next = null; // help GC \u539f\u6765\u7684head\u8282\u70b9\u7684next\u8bbe\u7f6e\u4e3anull,\u53d6\u6d88\u4e0enode\u7684\u5f15\u7528\u5173\u7cfb failed = false;// \u53d6\u9501\u6210\u529f,failed\u8bbe\u7f6e\u4e3afalse return interrupted;//\u8fd4\u56deinterrupted\u4e2d\u65ad\u6807\u8bc6 } //2.\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25,\u5224\u65ad\u5f53\u524d\u662f\u5426\u5e94\u8be5\u6302\u8d77,\u5982\u679c\u5e94\u8be5\u6302\u8d77,\u5219\u6267\u884c\u6302\u8d77,\u5e76\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) interrupted = true; } } finally { //\u5982\u679c\u5931\u8d25,\u53d6\u6d88\u9501\u7684\u7ade\u4e89 if (failed) cancelAcquire(node); } } //\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\u5230\u7b49\u5f85\u961f\u5217, mode\u5305\u542b\u72ec\u5360\u6a21\u5f0f\u548c\u5171\u4eab\u6a21\u5f0f private Node addWaiter(Node mode) { //\u4ee5\u6307\u5b9a\u6a21\u5f0f\u521b\u5efa\u5f53\u524d\u7684\u8282\u70b9 Node node = new Node(Thread.currentThread(), mode); // Try the fast path of enq; backup to full enq on failure //\u5c1d\u8bd5\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230\u961f\u5217\u672b\u5c3e Node pred = tail; if (pred != null) { node.prev = pred; if (compareAndSetTail(pred, node)) { pred.next = node; //\u5982\u679c\u6dfb\u52a0\u6210\u529f,\u8fd4\u56de\u5f53\u524d\u8282\u70b9 return node; } } // compareAndSetTail() CAS\u64cd\u4f5c\u8bbe\u7f6etail\u8282\u70b9\u5931\u8d25\u540e,\u901a\u8fc7enq()\u65b9\u6cd5\u6dfb\u52a0\u5230tail\u8282\u70b9,\u8be5\u65b9\u6cd5\u662f\u4ee5\u81ea\u65cb\u7684\u65b9\u5f0f\u76f4\u5230\u6dfb\u52a0\u6210\u529f\u4e3a\u6b62 enq(node); return node; } //\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230\u961f\u5217\u7684\u672b\u5c3e private Node enq(final Node node) { for (;;) { Node t = tail; if (t == null) { // Must initialize //\u5982\u679ctail\u8282\u70b9\u672a\u521d\u59cb\u5316,\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7a7a\u8282\u70b9\u6765\u521d\u59cb\u5316\u961f\u5217 if (compareAndSetHead(new Node())) tail = head; } else { node.prev = t; if (compareAndSetTail(t, node)) { t.next = node; return t; } } } } //\u5224\u65adnode\u8282\u70b9\u662f\u5426\u5e94\u8be5\u6302\u8d77 private static boolean shouldParkAfterFailedAcquire(Node pred, Node node) { //\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u7b49\u5f85\u72b6\u6001 int ws = pred.waitStatus; //\u5982\u679c\u662fSIGNAL\u72b6\u6001,\u8fd4\u56detrue if (ws == Node.SIGNAL) /* * This node has already set status asking a release * to signal it, so it can safely park. */ return true; if (ws > 0) { /* * Predecessor was cancelled. Skip over predecessors and * indicate retry. */ //ws > 0 \u4ee3\u8868\u8be5\u8282\u70b9\u5df2\u7ecf\u53d6\u6d88,\u5411\u524d\u67e5\u627e\u672a\u53d6\u6d88\u7684\u8282\u70b9,\u5c06\u961f\u5217\u62fc\u63a5\u4e0a,\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u7591\u95ee,\u53d6\u6d88\u7684\u8282\u70b9\u5df2\u7ecf\u79bb\u5f00\u961f\u5217,\u662f\u5426\u5e94\u8be5help GC\u4e00\u4e0b\u5462? do { node.prev = pred = pred.prev; } while (pred.waitStatus > 0); pred.next = node; } else { /* * waitStatus must be 0 or PROPAGATE. Indicate that we * need a signal, but don't park yet. Caller will need to * retry to make sure it cannot acquire before parking. */ //\u8fd9\u91cc\u66f4\u65b0\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u4e3aSIGNAL,\u800c\u6ca1\u6709\u8fd4\u56detrue\u6765\u6302\u8d77\u7ebf\u7a0b,\u4e3a\u4e86\u91cd\u8bd5\u83b7\u53d6\u9501\u786e\u4fdd\u5f53\u524d\u7ebf\u7a0b\u6ca1\u6709\u6210\u529f\u624d\u6267\u884c\u6302\u8d77 compareAndSetWaitStatus(pred, ws, Node.SIGNAL); } return false; } private final boolean parkAndCheckInterrupt() { //\u7ebf\u7a0b\u6302\u8d77 LockSupport.park(this); //\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad return Thread.interrupted(); } private void cancelAcquire(Node node) { // Ignore if node doesn't exist //\u5982\u679c\u8282\u70b9\u4e3anull,\u76f4\u63a5\u8fd4\u56de if (node == null) return; node.thread = null;//\u5c06\u5f53\u524d\u8282\u70b9\u7684\u7ebf\u7a0b\u8bbe\u7f6e\u4e3anull // Skip cancelled predecessors //\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9,\u5982\u679c\u524d\u4e00\u8282\u70b9\u72b6\u6001\u4e3a\u662f\u53d6\u6d88\u7684,\u7ee7\u7eed\u5411\u524d\u67e5\u627e Node pred = node.prev; while (pred.waitStatus > 0) node.prev = pred = pred.prev; // predNext is the apparent node to unsplice. CASes below will // fail if not, in which case, we lost race vs another cancel // or signal, so no further action is necessary. //\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 Node predNext = pred.next; // Can use unconditional write instead of CAS here. // After this atomic step, other Nodes can skip past us. // Before, we are free of interference from other threads. //\u6807\u8bb0\u5f53\u524d\u8282\u70b9\u7684\u72b6\u6001 node.waitStatus = Node.CANCELLED; // If we are the tail, remove ourselves. //\u5982\u679c\u5f53\u524d\u8282\u70b9\u662ftail\u8282\u70b9,\u5219\u66f4\u65b0\u524d\u4e00\u8282\u70b9\u4e3atail,\u5e76\u5c06\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u8bbe\u7f6e\u4e3anull if (node == tail && compareAndSetTail(node, pred)) { compareAndSetNext(pred, predNext, null); } else { // If successor needs signal, try to set pred's next-link // so it will get one. Otherwise wake it up to propagate. int ws; //1.\u524d\u4e00\u8282\u70b9\u4e0d\u662fhead\u8282\u70b9 //2.\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u72b6\u6001SIGNAL\u6216\u8005\u72b6\u6001\u5c0f\u4e8e\u7b49\u4e8e0\u7136\u540eCAS\u66f4\u65b0\u4e3aSIGNAL\u6210\u529f //3.\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u7ebf\u7a0b\u4e0d\u662f\u7a7a //\u4ee5\u4e0a\u6761\u4ef6\u6ee1\u8db3,\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9,\u6b64\u8282\u70b9\u4e0d\u662f\u7a7a\u5e76\u4e14\u72b6\u6001\u5c0f\u4e8e\u7b49\u4e8e0,\u5c06\u524d\u4e00\u4e2a\u8282\u70b9\u4e0e\u4e0b\u4e00\u4e2a\u8282\u70b9\u62fc\u8d77\u6765 if (pred != head && ((ws = pred.waitStatus) == Node.SIGNAL || (ws <= 0 && compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) && pred.thread != null) { Node next = node.next; if (next != null && next.waitStatus <= 0) compareAndSetNext(pred, predNext, next); } else { //\u5426\u5219\u5524\u9192\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9? unparkSuccessor(node); } node.next = node; // help GC } } private void unparkSuccessor(Node node) { /* * If status is negative (i.e., possibly needing signal) try * to clear in anticipation of signalling. It is OK if this * fails or if status is changed by waiting thread. */ int ws = node.waitStatus; if (ws < 0) compareAndSetWaitStatus(node, ws, 0); /* * Thread to unpark is held in successor, which is normally * just the next node. But if cancelled or apparently null, * traverse backwards from tail to find the actual * non-cancelled successor. */ Node s = node.next; if (s == null || s.waitStatus > 0) { s = null; for (Node t = tail; t != null && t != node; t = t.prev) if (t.waitStatus <= 0) s = t; } if (s != null) LockSupport.unpark(s.thread); } lockInterruptibly(\u53ef\u4e2d\u65ad\u52a0\u9501) public void lockInterruptibly() throws InterruptedException { sync.acquireInterruptibly(1); } public final void acquireInterruptibly(int arg) throws InterruptedException { //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); //\u5c1d\u8bd5\u83b7\u53d6\u9501.\u5982\u679c\u5931\u8d25,\u6267\u884cdoAcquireInterruptibly() if (!tryAcquire(arg)) doAcquireInterruptibly(arg); } private void doAcquireInterruptibly(int arg) throws InterruptedException { //\u9996\u5148\u6dfb\u52a0\u4e00\u4e2a\u72ec\u5360\u6a21\u5f0f\u7684\u7ebf\u7a0b\u8282\u70b9\u5230\u961f\u5217\u5c3e\u90e8 final Node node = addWaiter(Node.EXCLUSIVE); //\u4e0b\u9762\u8fd9\u4e9b\u5b9e\u73b0\u4e0eacquireQueued()\u65b9\u6cd5\u57fa\u672c\u76f8\u540c,\u552f\u4e00\u7684\u533a\u522b\u662f\u5982\u679c\u6302\u8d77\u7684\u7ebf\u7a0b\u88ab\u5524\u9192\u540e\u5982\u679c\u7ebf\u7a0b\u662f\u4e2d\u65ad\u72b6\u6001\u5219\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38 boolean failed = true; try { for (;;) { final Node p = node.predecessor(); if (p == head && tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return; } if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) throw new InterruptedException(); } } finally { if (failed) cancelAcquire(node); } } tryLock(\u5c1d\u8bd5\u52a0\u9501) \u200b tryLock\u662f\u4e0d\u516c\u5e73\u9501\u7684\u4e00\u79cd\u4f53\u73b0,\u5b83\u83b7\u53d6\u9501\u7684\u65f6\u5019\u4e0d\u4f1a\u6392\u961f,\u5728\u5199\u5230\u4e0d\u516c\u5e73\u9501\u7684\u65f6\u5019\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b public boolean tryLock() { return sync.nonfairTryAcquire(1); } final boolean nonfairTryAcquire(int acquires) { //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b final Thread current = Thread.currentThread(); int c = getState(); //\u5982\u679c\u9501\u5904\u4e8e\u7a7a\u95f2,\u76f4\u63a5\u83b7\u53d6\u9501,\u5e76\u8fd9\u662f\u72ec\u5360\u9501\u7684\u7ebf\u7a0b\u4e3a\u5f53\u524d\u7ebf\u7a0b if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } //\u5982\u679c\u4e0d\u662f\u7a7a\u95f2,\u5224\u65ad\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u662f\u5f53\u524d\u7ebf\u7a0b,\u6dfb\u52a0\u9501\u7684\u6b21\u6570,\u83b7\u53d6\u9501\u6210\u529f,\u56e0\u4e3a\u8fd9\u662f\u53ef\u91cd\u5165\u9501 else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) // overflow throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } //\u5176\u4ed6\u60c5\u51b5\u90fd\u8868\u793a\u83b7\u53d6\u9501\u5931\u8d25 return false; } tryLock(\u6307\u5b9a\u65f6\u95f4\u5185\u5c1d\u8bd5\u83b7\u53d6\u9501) public boolean tryLock(long timeout, TimeUnit unit) throws InterruptedException { //\u5c06\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u7eb3\u79d2 return sync.tryAcquireNanos(1, unit.toNanos(timeout)); } public final boolean tryAcquireNanos(int arg, long nanosTimeout) throws InterruptedException { //\u5982\u679c\u7ebf\u7a0b\u662f\u4e2d\u65ad\u72b6\u6001,\u76f4\u63a5\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); // \u9996\u5148\u5c1d\u8bd5\u83b7\u53d6\u9501,\u5982\u679c\u5931\u8d25\u8c03\u7528doAcquireNanos() return tryAcquire(arg) || doAcquireNanos(arg, nanosTimeout); } private boolean doAcquireNanos(int arg, long nanosTimeout) throws InterruptedException { //\u8d85\u65f6\u65f6\u95f4\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e0,\u76f4\u63a5\u83b7\u53d6\u9501\u5931\u8d25 if (nanosTimeout <= 0L) return false; //\u7ed3\u675f\u65f6\u95f4 final long deadline = System.nanoTime() + nanosTimeout; //\u6dfb\u52a0\u4e00\u4e2a\u72ec\u5360\u7684\u8282\u70b9\u5230\u961f\u5217\u7684\u672b\u5c3e final Node node = addWaiter(Node.EXCLUSIVE); boolean failed = true; try { //\u81ea\u65cb for (;;) { //\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9 final Node p = node.predecessor(); //\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u662fhead\u8282\u70b9,\u5c1d\u8bd5\u83b7\u53d6\u9501,\u6210\u529f\u8fd4\u56detrue if (p == head && tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return true; } //\u8d85\u65f6\u7684\u7ed3\u675f\u65f6\u95f4\u4e0e\u5f53\u524d\u65f6\u95f4\u5dee,\u5982\u679c\u5927\u4e8e0\u4ee3\u8868\u8fd8\u6ca1\u6709\u8d85\u65f6,\u7ee7\u7eed\u81ea\u65cb nanosTimeout = deadline - System.nanoTime(); if (nanosTimeout <= 0L) return false; //\u5224\u65ad\u662f\u5426\u5e94\u8be5\u6302\u8d77\u7ebf\u7a0b,\u5982\u679c\u65f6\u95f4\u5dee\u5927\u4e8e1000L,\u5c06\u5176\u6302\u8d77\u76f4\u5230\u8d85\u65f6\u65f6\u95f4\u7ed3\u675f,\u518d\u81ea\u65cb\u5f00\u59cb\u6700\u540e\u83b7\u53d6\u4e00\u6b21\u9501 if (shouldParkAfterFailedAcquire(p, node) && nanosTimeout > spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); if (Thread.interrupted()) throw new InterruptedException(); } } finally { //\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25\u4e86,\u53d6\u6d88\u5f53\u524d\u7ebf\u7a0b\u5728\u961f\u5217\u4e2d\u7684\u8282\u70b9 if (failed) cancelAcquire(node); } } unlock(\u91ca\u653e\u9501) public void unlock() { sync.release(1); } public final boolean release(int arg) { //\u5c1d\u8bd5\u91ca\u653e\u9501,\u5982\u679c\u6210\u529f,\u5524\u9192\u4e0b\u4e00\u4e2a\u8282\u70b9 if (tryRelease(arg)) { Node h = head; if (h != null && h.waitStatus != 0) unparkSuccessor(h); return true; } return false; } protected final boolean tryRelease(int releases) { //\u5c06\u9501\u7684state\u91ca\u653e,\u5373\u51cf\u53bbrelease\u7684\u503c int c = getState() - releases; //\u91ca\u653e\u9501\u7684\u524d\u63d0\u662f\u5f53\u524d\u7ebf\u7a0b\u5fc5\u987b\u62e5\u6709\u9501 if (Thread.currentThread() != getExclusiveOwnerThread()) throw new IllegalMonitorStateException(); //\u7a7a\u95f2\u6807\u8bc6 boolean free = false; if (c == 0) { free = true; setExclusiveOwnerThread(null); } setState(c); return free; } \u4e0d\u516c\u5e73\u9501 lock(\u52a0\u9501) //\u9996\u5148\u76f4\u63a5\u53bb\u83b7\u53d6\u9501,\u8fd9\u91cc\u6ca1\u6709\u5c1d\u8bd5,\u5982\u679c\u5931\u8d25\u518d\u5c1d\u8bd5\u83b7\u53d6\u901a\u8fc7\u8c03\u7528tryAcquire final void lock() { if (compareAndSetState(0, 1)) setExclusiveOwnerThread(Thread.currentThread()); else acquire(1); } protected final boolean tryAcquire(int acquires) { //\u524d\u6587\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86,nonfairTryAcquire()\u65b9\u6cd5\u5982\u679c\u9501\u7a7a\u95f2,\u76f4\u63a5\u83b7\u53d6\u9501,\u800c\u516c\u5e73\u9501\u5219\u662f\u67e5\u770b\u524d\u9762\u662f\u5426\u6709\u6392\u961f\u7684\u7ebf\u7a0b return nonfairTryAcquire(acquires); } Condition(\u7ebf\u7a0b\u7684\u7b49\u5f85\u4e0e\u5524\u9192) //\u7ebf\u7a0b\u7b49\u5f85,\u53ef\u4e2d\u65ad void await() throws InterruptedException; //\u4e0d\u53ef\u4e2d\u65ad\u7684\u7b49\u5f85 void awaitUninterruptibly(); long awaitNanos(long nanosTimeout) throws InterruptedException; boolean await(long time, TimeUnit unit) throws InterruptedException; boolean awaitUntil(Date deadline) throws InterruptedException; void signal(); void signalAll(); await public final void await() throws InterruptedException { // \u9996\u5148\u7ebf\u7a0b\u5982\u679c\u662f\u4e2d\u65ad\u72b6\u6001, \u629b\u51faInterruptedException\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); //\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217 Node node = addConditionWaiter(); //\u91ca\u653e\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u7684\u9501 int savedState = fullyRelease(node); //\u4e2d\u65ad\u65b9\u5f0f:1.THROW_IE,\u629b\u51fa\u4e2d\u65ad\u5f02\u5e382.REINTERRUPT,\u8c03\u7528\u7ebf\u7a0b\u7684\u4e2d\u65ad\u65b9\u6cd5 int interruptMode = 0; //\u5224\u65ad\u662f\u5426\u5728\u540c\u6b65\u961f\u5217,\u5982\u679c\u4e0d\u5728\u540c\u6b65\u961f\u5217,\u7ebf\u7a0b\u6302\u8d77\u7b49\u5f85. //??? \u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u8282\u70b9\u4f1a\u5728\u540c\u6b65\u961f\u5217\u4e2d\u5462?\u6211\u82e6\u601d\u8fd9\u6bb5\u4ee3\u7801,\u7ec8\u4e8e\u518d\u540e\u9762\u77e5\u9053\u4e86(ps:\u5f53\u7136\u662f\u5728\u8c03\u7528\u5524\u9192\u65b9\u6cd5\u7684\u65f6\u5019\u5566) while (!isOnSyncQueue(node)) { LockSupport.park(this); //\u68c0\u67e5\u7ebf\u7a0b\u5728\u7b49\u5f85\u671f\u95f4\u662f\u5426\u4e2d\u65ad,\u4e0d\u4e3a0\u4ee3\u8868\u4e2d\u65ad if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; } // acquireQueued\u65b9\u6cd5\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230\u540c\u6b65\u961f\u5217\u4e2d,\u8fd4\u56detrue,\u4ee3\u8868\u7ebf\u7a0b\u4e2d\u65ad if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; if (node.nextWaiter != null) // clean up if cancelled unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); } private Node addConditionWaiter() { //\u83b7\u53d6\u6700\u540e\u4e00\u4e2a\u7b49\u5f85\u8005 Node t = lastWaiter; // If lastWaiter is cancelled, clean out. //\u5982\u679c\u6700\u540e\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u4e0d\u662fnull\u5e76\u4e14\u8282\u70b9\u7684\u72b6\u6001\u4e0d\u662fCONDITION,\u6e05\u7406\u5df2\u7ecf\u53d6\u6d88\u7684\u7b49\u5f85\u7ebf\u7a0b if (t != null && t.waitStatus != Node.CONDITION) { //\u5220\u9664\u975eCondition\u7684\u8282\u70b9 unlinkCancelledWaiters(); //\u91cd\u65b0\u8d4b\u503ct t = lastWaiter; } //\u521b\u5efa\u4e00\u4e2aCondition\u72b6\u6001\u7684\u8282\u70b9 Node node = new Node(Thread.currentThread(), Node.CONDITION); //\u5982\u679c\u961f\u5217\u4e3a\u7a7afirstWaiter = lastWaiter = node,\u5426\u5219t.nextWaiter = node if (t == null) firstWaiter = node; else t.nextWaiter = node; lastWaiter = node; return node; } //\u6e05\u7406\u5df2\u7ecf\u53d6\u6d88\u7684\u7b49\u5f85\u7ebf\u7a0b private void unlinkCancelledWaiters() { //\u961f\u5217\u7b2c\u4e00\u4e2a\u8282\u70b9 Node t = firstWaiter; //\u904d\u5386\u8fc7\u7684\u6700\u540e\u4e00\u4e2a\u975eCondition\u8282\u70b9,\u4e5f\u53ef\u4ee5\u8bf4\u662f\u5f53\u524d\u904d\u5386\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9,\u56e0\u4e3aCondition Queue\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868 Node trail = null; while (t != null) { //\u4e0b\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9 Node next = t.nextWaiter; //\u8282\u70b9\u7684\u7b49\u5f85\u72b6\u6001\u4e0d\u662fCONDITION if (t.waitStatus != Node.CONDITION) { //\u65ad\u5f00\u5f53\u524d\u8282\u70b9\u4e0e\u4e0b\u4e00\u8282\u70b9\u7684\u94fe\u63a5 t.nextWaiter = null; //\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u4e3anull,\u66f4\u65b0next\u4e3a\u7b2c\u4e00\u4e2a\u7b49\u5f85\u961f\u5217,\u5426\u5219next\u8282\u70b9\u4e3atrail\u7684nextWaiter if (trail == null) firstWaiter = next; else trail.nextWaiter = next; //\u5982\u679cnext\u4e3anull,\u4ee3\u8868\u5df2\u7ecf\u5230\u4e86\u6700\u540e,\u66f4\u65b0lastWaiter\u4e3atrail,\u56e0\u4e3at\u8282\u70b9\u7684\u72b6\u6001\u4e0d\u662fCONDITION if (next == null) lastWaiter = trail; } else trail = t; t = next; } } //\u7ebf\u7a0b\u7b49\u5f85\u671f\u95f4\u5c06\u7ebf\u7a0b\u6301\u6709\u7684\u91cd\u5165\u9501\u5168\u90e8\u91ca\u653e, \u5982\u679c\u5931\u8d25\u5c06\u8282\u70b9\u7684\u72b6\u6001waitStatus\u8bbe\u7f6e\u4e3aCANCELLED final int fullyRelease(Node node) { boolean failed = true; try { int savedState = getState(); if (release(savedState)) { failed = false; return savedState; } else { throw new IllegalMonitorStateException(); } } finally { if (failed) node.waitStatus = Node.CANCELLED; } } //\u5224\u65ad\u662f\u5426\u5728\u540c\u6b65\u961f\u5217 //1.\u8282\u70b9\u7684waitStatus\u7b49\u4e8eCONDITION, \u5e76\u4e14\u524d\u4e00\u8282\u70b9\u4e3anull,\u5219\u8fd4\u56defalse,\u56e0\u4e3a\u8fd9\u662fCondition Queue final boolean isOnSyncQueue(Node node) { if (node.waitStatus == Node.CONDITION || node.prev == null) return false; if (node.next != null) // If has successor, it must be on queue return true; //\u4ece\u961f\u5217\u6700\u540e\u5411\u524d\u67e5\u627e\u8be5\u8282\u70b9 return findNodeFromTail(node); } private int checkInterruptWhileWaiting(Node node) { //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u8fd4\u56detransferAfterCancelledWait(node) ? THROW_IE : REINTERRUPT,\u5426\u5219\u4e3a0 return Thread.interrupted() ? (transferAfterCancelledWait(node) ? THROW_IE : REINTERRUPT) : 0; } //\u7ebf\u7a0b\u4e2d\u65ad\u540e,\u4e0d\u5fc5\u518d\u7b49\u5f85,\u5c06\u8be5\u8282\u70b9\u8f6c\u5316\u4e3aSync Queue,\u5e76\u6dfb\u52a0\u5230\u961f\u5217\u672b\u5c3e final boolean transferAfterCancelledWait(Node node) { if (compareAndSetWaitStatus(node, Node.CONDITION, 0)) { enq(node); return true; } /* * If we lost out to a signal(), then we can't proceed * until it finishes its enq(). Cancelling during an * incomplete transfer is both rare and transient, so just * spin. */ //\u5982\u679c\u4e0d\u5728\u540c\u6b65\u961f\u5217\u4e2d,\u7ebf\u7a0b\u8ba9\u6b65 while (!isOnSyncQueue(node)) Thread.yield(); return false; } awaitUninterruptibly //\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u7ebf\u7a0b\u7b49\u5f85 public final void awaitUninterruptibly() { //\u6dfb\u52a0\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9\u5230Condition Queue Node node = addConditionWaiter(); //\u91ca\u653e\u9501 int savedState = fullyRelease(node); boolean interrupted = false; while (!isOnSyncQueue(node)) { LockSupport.park(this); if (Thread.interrupted()) interrupted = true; } //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad\u6062\u590d\u4e2d\u65ad\u72b6\u6001 if (acquireQueued(node, savedState) || interrupted) selfInterrupt(); } awaitNanos(nanosTimeout) // \u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u7684\u7b49\u5f85 public final long awaitNanos(long nanosTimeout) throws InterruptedException { //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u76f4\u63a5\u629b\u51fa\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); //\u6dfb\u52a0\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9\u5230Condition Queue\u4e2d Node node = addConditionWaiter(); //\u5148\u91ca\u653e\u9501 int savedState = fullyRelease(node); //\u7ebf\u7a0b\u7b49\u5f85\u7684\u7ed3\u675f\u65e5\u671f final long deadline = System.nanoTime() + nanosTimeout; int interruptMode = 0; //\u9996\u5148\u5224\u65ad\u662f\u5426\u5728\u540c\u6b65\u961f\u5217\u4e2d while (!isOnSyncQueue(node)) { //\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e0,\u53d6\u6d88\u7b49\u5f85,\u7136\u540e\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230Sync Deque\u4e2d if (nanosTimeout <= 0L) { transferAfterCancelledWait(node); break; } //\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u8d85\u8fc71000,\u7ebf\u7a0b\u6302\u8d77,\u76f4\u5230\u8d85\u65f6\u65f6\u95f4\u7ed3\u675f if (nanosTimeout >= spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u76f4\u63a5\u8df3\u51fa\u5faa\u73af if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; nanosTimeout = deadline - System.nanoTime(); } //\u83b7\u53d6\u9501,\u5982\u679c\u4e2d\u65ad,\u62a5\u544a if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; //\u6e05\u7406Condition Queue if (node.nextWaiter != null) unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); //\u8fd4\u56de\u7b49\u5f85\u5269\u4f59\u7684\u65f6\u95f4 return deadline - System.nanoTime(); } await(long time, TimeUnit unit) // \u6b64\u5904\u5b9e\u73b0\u4e0eawaitNanos\u5927\u81f4\u76f8\u540c,\u4e3b\u8981\u5728\u5176\u8fd4\u56de\u503c\u4ee3\u8868\u662f\u5426\u8d85\u65f6,\u5982\u679c\u63d0\u524d\u5524\u9192\u8fd4\u56detrue public final boolean await(long time, TimeUnit unit) throws InterruptedException { long nanosTimeout = unit.toNanos(time); if (Thread.interrupted()) throw new InterruptedException(); Node node = addConditionWaiter(); int savedState = fullyRelease(node); final long deadline = System.nanoTime() + nanosTimeout; boolean timedout = false; int interruptMode = 0; while (!isOnSyncQueue(node)) { if (nanosTimeout <= 0L) { //\u8fd9\u91cc\u53ef\u80fd\u7b49\u5f85\u8282\u70b9\u88ab\u63d0\u524d\u5524\u9192,\u5bfc\u81f4\u8282\u70b9\u8f6c\u5316\u5931\u8d25 timedout = transferAfterCancelledWait(node); break; } if (nanosTimeout >= spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; nanosTimeout = deadline - System.nanoTime(); } if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; if (node.nextWaiter != null) unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); return !timedout; } awaitUntil(Date deadline) public final boolean awaitUntil(Date deadline) throws InterruptedException { //\u7edd\u5bf9\u65e5\u671f \u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d long abstime = deadline.getTime(); if (Thread.interrupted()) throw new InterruptedException(); Node node = addConditionWaiter(); int savedState = fullyRelease(node); boolean timedout = false; int interruptMode = 0; while (!isOnSyncQueue(node)) { if (System.currentTimeMillis() > abstime) { timedout = transferAfterCancelledWait(node); break; } LockSupport.parkUntil(this, abstime); if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; } if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; if (node.nextWaiter != null) unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); return !timedout; } signal public final void signal() { //\u5fc5\u987b\u662f\u72ec\u5360\u6a21\u5f0f,\u5f53\u524d\u7ebf\u7a0b\u5fc5\u987b\u6301\u6709\u9501 if (!isHeldExclusively()) throw new IllegalMonitorStateException(); //\u5524\u9192\u7b2c\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9 Node first = firstWaiter; if (first != null) doSignal(first); } private void doSignal(Node first) { do { //\u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u66f4\u65b0\u4e3a\u7b2c\u4e8c\u4e2a\u8282\u70b9,\u5982\u679c\u7b2c\u4e8c\u4e2a\u8282\u70b9\u4e3anull,\u8bf4\u660eCondition Queue\u662f\u7a7a\u7684,\u9700\u8981\u66f4\u65b0 //lastWaiter\u4e3anull if ( (firstWaiter = first.nextWaiter) == null) lastWaiter = null; //\u65ad\u5f00\u4e0e\u5176\u4ed6\u8282\u70b9\u7684\u94fe\u63a5 first.nextWaiter = null; } while (!transferForSignal(first) && (first = firstWaiter) != null);//\u8f6c\u6362\u8282\u70b9\u72b6\u6001,\u5e76\u6dfb\u52a0\u5230\u540c\u6b65\u961f\u5217,\u5982\u679c\u5931\u8d25,\u8fd4\u56defalse,\u7ee7\u7eed\u5524\u9192\u4e0b\u4e00\u4e2a\u7b49\u5f85\u7684\u8282\u70b9 } //\u8f6c\u6362\u8fd9\u4e2a\u8282\u70b9\u5230Sync Queue final boolean transferForSignal(Node node) { /* * If cannot change waitStatus, the node has been cancelled. */ if (!compareAndSetWaitStatus(node, Node.CONDITION, 0)) return false; /* * Splice onto queue and try to set waitStatus of predecessor to * indicate that thread is (probably) waiting. If cancelled or * attempt to set waitStatus fails, wake up to resync (in which * case the waitStatus can be transiently and harmlessly wrong). */ //\u6dfb\u52a0\u5230\u540c\u6b65\u961f\u5217\u7684\u672b\u5c3e,\u5e76\u8fd4\u56de\u524d\u4e00\u8282\u70b9,\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u72b6\u6001\u662f\u53d6\u6d88\u7684\u6216\u8005\u66f4\u65b0\u72b6\u6001\u5931\u8d25,\u5524\u9192\u8be5\u7ebf\u7a0b\u6765\u91cd\u65b0\u540c\u6b65 Node p = enq(node); int ws = p.waitStatus; if (ws > 0 || !compareAndSetWaitStatus(p, ws, Node.SIGNAL)) LockSupport.unpark(node.thread); return true; } signalAll public final void signalAll() { //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u6301\u6709\u9501 if (!isHeldExclusively()) throw new IllegalMonitorStateException(); Node first = firstWaiter; //\u5524\u9192\u6240\u6709\u8282\u70b9 if (first != null) doSignalAll(first); } //\u5355\u5411\u961f\u5217\u4f9d\u6b21\u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u8282\u70b9 private void doSignalAll(Node first) { lastWaiter = firstWaiter = null; do { Node next = first.nextWaiter; first.nextWaiter = null; transferForSignal(first); first = next; } while (first != null); } \u5176\u4ed6API getHoldCount public int getHoldCount() { return sync.getHoldCount(); } final int getHoldCount() { //\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u9501,\u8fd4\u56destate\u7684\u503c,\u5426\u5219\u4e3a0 return isHeldExclusively() ? getState() : 0; } isHeldByCurrentThread public boolean isHeldByCurrentThread() { //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u6301\u6709\u9501 return sync.isHeldExclusively(); } isLocked \u9501\u662f\u5426\u7a7a\u95f2,\u4ee5state\u503c\u662f\u5426\u4e3a0\u5224\u65ad public boolean isLocked() { return sync.isLocked(); } isFair \u662f\u5426\u4e3a\u516c\u5e73\u9501 java public final boolean isFair() { return sync instanceof FairSync; } getOwner \u83b7\u53d6\u9501\u6301\u6709\u7684\u7ebf\u7a0b,\u5982\u679c\u9501\u7a7a\u95f2\u8fd4\u56denull java final Thread getOwner() { return getState() == 0 ? null : getExclusiveOwnerThread(); } hasQueuedThreads \u662f\u5426\u6709\u6392\u961f\u7684\u7ebf\u7a0b java public final boolean hasQueuedThreads() { return head != tail; } hasQueuedThread \u5224\u65ad\u8be5\u7ebf\u7a0b\u662f\u5426\u5728\u6392\u961f java public final boolean hasQueuedThread(Thread thread) { return sync.isQueued(thread); } java public final boolean isQueued(Thread thread) { if (thread == null) throw new NullPointerException(); for (Node p = tail; p != null; p = p.prev) if (p.thread == thread) return true; return false; } getQueueLength \u540c\u6b65\u961f\u5217\u7684\u957f\u5ea6 java public final int getQueueLength() { return sync.getQueueLength(); } java public final int getQueueLength() { int n = 0; for (Node p = tail; p != null; p = p.prev) { if (p.thread != null) ++n; } return n; } getQueuedThreads \u83b7\u53d6\u6240\u6709\u6392\u961f\u7684\u7ebf\u7a0b java protected Collection<Thread> getQueuedThreads() { return sync.getQueuedThreads(); } java public final Collection<Thread> getQueuedThreads() { ArrayList<Thread> list = new ArrayList<Thread>(); for (Node p = tail; p != null; p = p.prev) { Thread t = p.thread; if (t != null) list.add(t); } return list; } hasWaiters \u662f\u5426\u7531\u7ebf\u7a0b\u7b49\u5f85 java public boolean hasWaiters(Condition condition) { if (condition == null) throw new NullPointerException(); if (!(condition instanceof AbstractQueuedSynchronizer.ConditionObject)) throw new IllegalArgumentException(\"not owner\"); return sync.hasWaiters((AbstractQueuedSynchronizer.ConditionObject)condition); } java public final boolean hasWaiters(ConditionObject condition) { if (!owns(condition)) throw new IllegalArgumentException(\"Not owner\"); return condition.hasWaiters(); } java protected final boolean hasWaiters() { if (!isHeldExclusively()) throw new IllegalMonitorStateException(); for (Node w = firstWaiter; w != null; w = w.nextWaiter) { if (w.waitStatus == Node.CONDITION) return true; } return false; } getWaitQueueLength Condition Queue\u7684\u957f\u5ea6 getWaitingThreads Condition Queue\u4e2d\u6240\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b","title":"ReentrantLock"},{"location":"java/JUC/ReentrantLock/#reentrantlock","text":"\u200b ReentrantLock\u5b9e\u73b0\u4e86Lock\u63a5\u53e3 //\u52a0\u9501 void lock(); //\u53ef\u4e2d\u65ad\u7684\u9501 void lockInterruptibly() //\u5c1d\u8bd5\u52a0\u9501,\u6210\u529f\u8fd4\u56detrue,\u5426\u5219\u8fd4\u56defalse boolean tryLock(); //\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u83b7\u53d6\u9501,\u5982\u679c\u83b7\u53d6\u6210\u529f\u8fd4\u56detrue,\u5426\u5219\u8fd4\u56defalse,\u5982\u679c\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u5219\u629b\u51faInterruptedException boolean tryLock(long time, TimeUnit unit) throws InterruptedException; //\u91ca\u653e\u9501 void unlock(); //\u8fd4\u56de Condition\u5b9e\u4f8b,\u524d\u63d0\u662f\u5f53\u524d\u7ebf\u7a0b\u5fc5\u987b\u62e5\u6709\u9501,\u7528\u6237\u7ebf\u7a0b\u7b49\u5f85\u6216\u8005\u5524\u9192\u7684\u64cd\u4f5c Condition newCondition(); ReentrantLock\u540c\u6b65\u9501\u4e2d\u5305\u542b\u4e86\u516c\u5e73\u9501\u548c\u975e\u516c\u5e73\u9501,\u5176\u5e95\u5c42\u662f\u57fa\u4e8eAQS\u5b9e\u73b0\u7684,\u6211\u4eec\u5206\u522b\u7814\u7a76\u4e0b\u8fd9\u4e24\u79cd\u9501\u662f\u5982\u4f55\u5b9e\u73b0\u7684.\u5982\u4f55\u521b\u5efa\u516c\u5e73\u9501\u4e0e\u975e\u516c\u5e73\u9501, \u53ef\u4ee5\u901a\u8fc7\u5176\u6784\u9020\u5668\u5f97\u77e5. //\u9ed8\u8ba4\u662f\u975e\u516c\u5e73\u9501 public ReentrantLock() { sync = new NonfairSync(); } //true\u4e3a\u516c\u5e73\u9501,false\u4e3a\u975e\u516c\u5e73\u9501 public ReentrantLock(boolean fair) { sync = fair ? new FairSync() : new NonfairSync(); }","title":"ReentrantLock(\u53ef\u91cd\u5165\u540c\u6b65\u9501)"},{"location":"java/JUC/ReentrantLock/#_1","text":"","title":"\u516c\u5e73\u9501"},{"location":"java/JUC/ReentrantLock/#lock","text":"public void lock() { //\u540c\u6b65\u5bf9\u8c61\u52a0\u9501 sync.lock(); } final void lock() { //\u83b7\u53d6\u4e00\u628a\u9501 acquire(1); } public final void acquire(int arg) { // tryAcquire\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u4e00\u628a\u9501,\u5982\u679c\u8fd4\u56detrue\u4ee3\u8868\u83b7\u53d6\u9501\u6210\u529f,\u5982\u679c\u83b7\u53d6\u5931\u8d25,\u5c06\u5f53\u524d\u7ebf\u7a0b\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217,\u5e76\u6807 // \u8bb0\u72ec\u5360\u6a21\u5f0f,\u5982\u679cacquireQueued\u8fd4\u56detrue\u4ee3\u8868\u7ebf\u7a0b\u9700\u8981\u4e2d\u65ad if (!tryAcquire(arg) && acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad\u72b6\u6001\u4e3atrue,\u8c03\u7528\u7ebf\u7a0b\u4e2d\u65ad\u65b9\u6cd5,\u539f\u56e0\u662f\u83b7\u53d6\u4e2d\u65ad\u72b6\u6001\u540e,\u7ebf\u7a0b\u72b6\u6001\u4f1a\u88ab\u6e05\u7406 selfInterrupt(); } //\u5c1d\u8bd5\u83b7\u53d6\u9501 protected final boolean tryAcquire(int acquires) { //\u83b7\u53d6\u5f53\u524d\u7ade\u4e89\u9501\u7684\u7ebf\u7a0b final Thread current = Thread.currentThread(); //\u9501\u7684\u72b6\u6001,\u5982\u679c\u4e3a0,\u4ee3\u8868\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001,\u5927\u4e8e0,\u5176\u503c\u4ee3\u8868\u9501\u7684\u5904\u7406,\u5728\u4f7f\u7528\u9501\u7684\u9636\u6bb5,\u52a0\u9501\u548c\u91ca\u653e\u9501\u90fd\u9700\u8981\u6210\u5bf9\u51fa\u73b0, //\u5373\u8c03\u7528lock()\u540e\u9700\u8981\u8c03\u7528unlock()\u6765\u91ca\u653e,\u6bcf\u6b21\u52a0\u9501state+1,\u91ca\u653e\u9501\u65f6state-1 int c = getState(); //\u5982\u679c\u9501\u72b6\u6001\u4e3a0,\u4ee3\u8868\u7a7a\u95f2 if (c == 0) { //hasQueuedPredecessors()\u65b9\u6cd5\u5224\u65ad\u540c\u6b65\u961f\u5217\u4e2d\u662f\u5426\u6709\u6392\u5728\u5f53\u524d\u7ebf\u7a0b\u4e4b\u524d\u7684\u7ebf\u7a0b\u7ade\u4e89\u9501,\u8fd9\u662f\u516c\u5e73\u9501\u7684\u4f53\u73b0. //\u540c\u6b65\u961f\u5217\u662f\u4f7f\u7528FIFO\u7684\u8bbe\u8ba1,\u5373\u5148\u8fdb\u5148\u51fa //compareAndSetState()\u65b9\u6cd5\u4f7f\u7528CAS\u64cd\u4f5c\u8bbe\u7f6estate\u503c,\u8fd4\u56detrue\u4ee3\u8868\u8bbe\u7f6e\u6210\u529f,\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4f7f\u7528CAS\u64cd\u4f5c,\u4e2a\u4eba\u8ba4\u4e3a\u662f\u4e00\u79cd\u60b2\u89c2\u7684\u4f53\u73b0,\u5f53\u524d\u7ebf\u7a0b\u59cb\u7ec8\u8ba4\u4e3a\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u62a2\u9501,\u6240\u4ee5\u81ea\u8eab\u4e5f\u5c1d\u8bd5\u7ade\u4e89\u662f\u5426\u80fd\u591f\u6210\u529f //setExclusiveOwnerThread()\u65b9\u6cd5\u8bbe\u7f6e\u9501\u88ab\u72ec\u5360\u7684\u7ebf\u7a0b,\u6700\u7ec8\u8fd4\u56detrue\u4ee3\u8868\u53d6\u9501\u6210\u529f if (!hasQueuedPredecessors() && compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u4e0e\u72ec\u5360\u9501\u7684\u7ebf\u7a0b\u662f\u5426\u76f8\u7b49,\u5982\u679c\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b,\u5141\u8bb8\u83b7\u53d6\u9501,\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u91cd\u5165\u7684\u9501 else if (current == getExclusiveOwnerThread()) { //\u52a0\u9501\u7684\u6b21\u6570 int nextc = c + acquires; if (nextc < 0) throw new Error(\"Maximum lock count exceeded\"); //\u8bbe\u7f6estate,\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528CAS\u64cd\u4f5c?\u56e0\u4e3a\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u9501,\u4e0d\u4f1a\u6709\u5176\u4ed6\u7ebf\u7a0b\u7ade\u4e89 setState(nextc); return true; } return false; } public final boolean hasQueuedPredecessors() { // The correctness of this depends on head being initialized // before tail and on head.next being accurate if the current // thread is first in queue. //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u5728\u961f\u5217\u4e4b\u524d\u662f\u5426\u8fd8\u6709\u7ade\u4e89\u8005\u5728\u6392\u961f,FIFO\u961f\u5217,\u9996\u5148\u7684\u6761\u4ef6\u662fhead != tail \u56e0\u4e3ahead\u548ctail\u76f8\u7b49\u65f6\u961f\u5217\u662f\u7a7a\u7684,\u5176\u6b21\u5224\u65adhead\u7684next\u8282\u70b9\u7684\u7ebf\u7a0b\u4e0d\u7b49\u4e8e\u5f53\u524d\u7ebf\u7a0b,\u4ee3\u8868\u5f53\u524d\u7ebf\u7a0b\u4e0d\u662f\u6392\u5728\u7b2c\u4e00\u4e2a Node t = tail; // Read fields in reverse initialization order Node h = head; Node s; return h != t && ((s = h.next) == null || s.thread != Thread.currentThread()); } //\u524d\u9762\u8bb2\u5230\u5982\u679ctryAcquire(int)\u65b9\u6cd5\u83b7\u53d6\u5931\u8d25,\u4f1a\u5c06\u5f53\u524d\u7ebf\u7a0b\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u7b49\u5f85,\u6211\u4eec\u6765\u770b\u4e00\u770b\u662f\u5982\u4f55\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u7684? final boolean acquireQueued(final Node node, int arg) { //failed \u5c5e\u6027\u662f\u4e00\u4e2a\u5931\u8d25\u7684\u6807\u8bc6,\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25,\u53d6\u6d88\u5f53\u524d\u7ebf\u7a0b\u53bb\u7ade\u4e89\u9501,\u5982\u679c\u53d6\u6d88\u7a0d\u540e\u89e3\u91ca boolean failed = true; try { //\u7ebf\u7a0b\u4e2d\u65ad\u6807\u8bc6,\u5982\u679c\u4e3atrue,\u4ee3\u8868\u7ebf\u7a0b\u9700\u8981\u4e2d\u65ad,\u5728\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u540e\u8c03\u7528 boolean interrupted = false; //\u8fd9\u91cc\u662f\u81ea\u65cb for (;;) { //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9 final Node p = node.predecessor(); //\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u662f\u5934\u8282\u70b9,\u5219\u5c1d\u8bd5\u83b7\u53d6\u9501,\u83b7\u53d6\u9501\u7684\u7ed3\u679c\u51b3\u5b9a\u5f53\u524d\u7ebf\u7a0b\u7684\u8d70\u5411 //1.\u83b7\u53d6\u9501\u6210\u529f,\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9,\u5e76\u8fd4\u56de if (p == head && tryAcquire(arg)) { // head = node; node.thread = null; node.prev = null; setHead(node); p.next = null; // help GC \u539f\u6765\u7684head\u8282\u70b9\u7684next\u8bbe\u7f6e\u4e3anull,\u53d6\u6d88\u4e0enode\u7684\u5f15\u7528\u5173\u7cfb failed = false;// \u53d6\u9501\u6210\u529f,failed\u8bbe\u7f6e\u4e3afalse return interrupted;//\u8fd4\u56deinterrupted\u4e2d\u65ad\u6807\u8bc6 } //2.\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25,\u5224\u65ad\u5f53\u524d\u662f\u5426\u5e94\u8be5\u6302\u8d77,\u5982\u679c\u5e94\u8be5\u6302\u8d77,\u5219\u6267\u884c\u6302\u8d77,\u5e76\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) interrupted = true; } } finally { //\u5982\u679c\u5931\u8d25,\u53d6\u6d88\u9501\u7684\u7ade\u4e89 if (failed) cancelAcquire(node); } } //\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\u5230\u7b49\u5f85\u961f\u5217, mode\u5305\u542b\u72ec\u5360\u6a21\u5f0f\u548c\u5171\u4eab\u6a21\u5f0f private Node addWaiter(Node mode) { //\u4ee5\u6307\u5b9a\u6a21\u5f0f\u521b\u5efa\u5f53\u524d\u7684\u8282\u70b9 Node node = new Node(Thread.currentThread(), mode); // Try the fast path of enq; backup to full enq on failure //\u5c1d\u8bd5\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230\u961f\u5217\u672b\u5c3e Node pred = tail; if (pred != null) { node.prev = pred; if (compareAndSetTail(pred, node)) { pred.next = node; //\u5982\u679c\u6dfb\u52a0\u6210\u529f,\u8fd4\u56de\u5f53\u524d\u8282\u70b9 return node; } } // compareAndSetTail() CAS\u64cd\u4f5c\u8bbe\u7f6etail\u8282\u70b9\u5931\u8d25\u540e,\u901a\u8fc7enq()\u65b9\u6cd5\u6dfb\u52a0\u5230tail\u8282\u70b9,\u8be5\u65b9\u6cd5\u662f\u4ee5\u81ea\u65cb\u7684\u65b9\u5f0f\u76f4\u5230\u6dfb\u52a0\u6210\u529f\u4e3a\u6b62 enq(node); return node; } //\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230\u961f\u5217\u7684\u672b\u5c3e private Node enq(final Node node) { for (;;) { Node t = tail; if (t == null) { // Must initialize //\u5982\u679ctail\u8282\u70b9\u672a\u521d\u59cb\u5316,\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7a7a\u8282\u70b9\u6765\u521d\u59cb\u5316\u961f\u5217 if (compareAndSetHead(new Node())) tail = head; } else { node.prev = t; if (compareAndSetTail(t, node)) { t.next = node; return t; } } } } //\u5224\u65adnode\u8282\u70b9\u662f\u5426\u5e94\u8be5\u6302\u8d77 private static boolean shouldParkAfterFailedAcquire(Node pred, Node node) { //\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u7b49\u5f85\u72b6\u6001 int ws = pred.waitStatus; //\u5982\u679c\u662fSIGNAL\u72b6\u6001,\u8fd4\u56detrue if (ws == Node.SIGNAL) /* * This node has already set status asking a release * to signal it, so it can safely park. */ return true; if (ws > 0) { /* * Predecessor was cancelled. Skip over predecessors and * indicate retry. */ //ws > 0 \u4ee3\u8868\u8be5\u8282\u70b9\u5df2\u7ecf\u53d6\u6d88,\u5411\u524d\u67e5\u627e\u672a\u53d6\u6d88\u7684\u8282\u70b9,\u5c06\u961f\u5217\u62fc\u63a5\u4e0a,\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u7591\u95ee,\u53d6\u6d88\u7684\u8282\u70b9\u5df2\u7ecf\u79bb\u5f00\u961f\u5217,\u662f\u5426\u5e94\u8be5help GC\u4e00\u4e0b\u5462? do { node.prev = pred = pred.prev; } while (pred.waitStatus > 0); pred.next = node; } else { /* * waitStatus must be 0 or PROPAGATE. Indicate that we * need a signal, but don't park yet. Caller will need to * retry to make sure it cannot acquire before parking. */ //\u8fd9\u91cc\u66f4\u65b0\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u4e3aSIGNAL,\u800c\u6ca1\u6709\u8fd4\u56detrue\u6765\u6302\u8d77\u7ebf\u7a0b,\u4e3a\u4e86\u91cd\u8bd5\u83b7\u53d6\u9501\u786e\u4fdd\u5f53\u524d\u7ebf\u7a0b\u6ca1\u6709\u6210\u529f\u624d\u6267\u884c\u6302\u8d77 compareAndSetWaitStatus(pred, ws, Node.SIGNAL); } return false; } private final boolean parkAndCheckInterrupt() { //\u7ebf\u7a0b\u6302\u8d77 LockSupport.park(this); //\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad return Thread.interrupted(); } private void cancelAcquire(Node node) { // Ignore if node doesn't exist //\u5982\u679c\u8282\u70b9\u4e3anull,\u76f4\u63a5\u8fd4\u56de if (node == null) return; node.thread = null;//\u5c06\u5f53\u524d\u8282\u70b9\u7684\u7ebf\u7a0b\u8bbe\u7f6e\u4e3anull // Skip cancelled predecessors //\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9,\u5982\u679c\u524d\u4e00\u8282\u70b9\u72b6\u6001\u4e3a\u662f\u53d6\u6d88\u7684,\u7ee7\u7eed\u5411\u524d\u67e5\u627e Node pred = node.prev; while (pred.waitStatus > 0) node.prev = pred = pred.prev; // predNext is the apparent node to unsplice. CASes below will // fail if not, in which case, we lost race vs another cancel // or signal, so no further action is necessary. //\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 Node predNext = pred.next; // Can use unconditional write instead of CAS here. // After this atomic step, other Nodes can skip past us. // Before, we are free of interference from other threads. //\u6807\u8bb0\u5f53\u524d\u8282\u70b9\u7684\u72b6\u6001 node.waitStatus = Node.CANCELLED; // If we are the tail, remove ourselves. //\u5982\u679c\u5f53\u524d\u8282\u70b9\u662ftail\u8282\u70b9,\u5219\u66f4\u65b0\u524d\u4e00\u8282\u70b9\u4e3atail,\u5e76\u5c06\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u8bbe\u7f6e\u4e3anull if (node == tail && compareAndSetTail(node, pred)) { compareAndSetNext(pred, predNext, null); } else { // If successor needs signal, try to set pred's next-link // so it will get one. Otherwise wake it up to propagate. int ws; //1.\u524d\u4e00\u8282\u70b9\u4e0d\u662fhead\u8282\u70b9 //2.\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u72b6\u6001SIGNAL\u6216\u8005\u72b6\u6001\u5c0f\u4e8e\u7b49\u4e8e0\u7136\u540eCAS\u66f4\u65b0\u4e3aSIGNAL\u6210\u529f //3.\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u7ebf\u7a0b\u4e0d\u662f\u7a7a //\u4ee5\u4e0a\u6761\u4ef6\u6ee1\u8db3,\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9,\u6b64\u8282\u70b9\u4e0d\u662f\u7a7a\u5e76\u4e14\u72b6\u6001\u5c0f\u4e8e\u7b49\u4e8e0,\u5c06\u524d\u4e00\u4e2a\u8282\u70b9\u4e0e\u4e0b\u4e00\u4e2a\u8282\u70b9\u62fc\u8d77\u6765 if (pred != head && ((ws = pred.waitStatus) == Node.SIGNAL || (ws <= 0 && compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) && pred.thread != null) { Node next = node.next; if (next != null && next.waitStatus <= 0) compareAndSetNext(pred, predNext, next); } else { //\u5426\u5219\u5524\u9192\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9? unparkSuccessor(node); } node.next = node; // help GC } } private void unparkSuccessor(Node node) { /* * If status is negative (i.e., possibly needing signal) try * to clear in anticipation of signalling. It is OK if this * fails or if status is changed by waiting thread. */ int ws = node.waitStatus; if (ws < 0) compareAndSetWaitStatus(node, ws, 0); /* * Thread to unpark is held in successor, which is normally * just the next node. But if cancelled or apparently null, * traverse backwards from tail to find the actual * non-cancelled successor. */ Node s = node.next; if (s == null || s.waitStatus > 0) { s = null; for (Node t = tail; t != null && t != node; t = t.prev) if (t.waitStatus <= 0) s = t; } if (s != null) LockSupport.unpark(s.thread); }","title":"lock(\u52a0\u9501)"},{"location":"java/JUC/ReentrantLock/#lockinterruptibly","text":"public void lockInterruptibly() throws InterruptedException { sync.acquireInterruptibly(1); } public final void acquireInterruptibly(int arg) throws InterruptedException { //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); //\u5c1d\u8bd5\u83b7\u53d6\u9501.\u5982\u679c\u5931\u8d25,\u6267\u884cdoAcquireInterruptibly() if (!tryAcquire(arg)) doAcquireInterruptibly(arg); } private void doAcquireInterruptibly(int arg) throws InterruptedException { //\u9996\u5148\u6dfb\u52a0\u4e00\u4e2a\u72ec\u5360\u6a21\u5f0f\u7684\u7ebf\u7a0b\u8282\u70b9\u5230\u961f\u5217\u5c3e\u90e8 final Node node = addWaiter(Node.EXCLUSIVE); //\u4e0b\u9762\u8fd9\u4e9b\u5b9e\u73b0\u4e0eacquireQueued()\u65b9\u6cd5\u57fa\u672c\u76f8\u540c,\u552f\u4e00\u7684\u533a\u522b\u662f\u5982\u679c\u6302\u8d77\u7684\u7ebf\u7a0b\u88ab\u5524\u9192\u540e\u5982\u679c\u7ebf\u7a0b\u662f\u4e2d\u65ad\u72b6\u6001\u5219\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38 boolean failed = true; try { for (;;) { final Node p = node.predecessor(); if (p == head && tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return; } if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) throw new InterruptedException(); } } finally { if (failed) cancelAcquire(node); } }","title":"lockInterruptibly(\u53ef\u4e2d\u65ad\u52a0\u9501)"},{"location":"java/JUC/ReentrantLock/#trylock","text":"\u200b tryLock\u662f\u4e0d\u516c\u5e73\u9501\u7684\u4e00\u79cd\u4f53\u73b0,\u5b83\u83b7\u53d6\u9501\u7684\u65f6\u5019\u4e0d\u4f1a\u6392\u961f,\u5728\u5199\u5230\u4e0d\u516c\u5e73\u9501\u7684\u65f6\u5019\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b public boolean tryLock() { return sync.nonfairTryAcquire(1); } final boolean nonfairTryAcquire(int acquires) { //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b final Thread current = Thread.currentThread(); int c = getState(); //\u5982\u679c\u9501\u5904\u4e8e\u7a7a\u95f2,\u76f4\u63a5\u83b7\u53d6\u9501,\u5e76\u8fd9\u662f\u72ec\u5360\u9501\u7684\u7ebf\u7a0b\u4e3a\u5f53\u524d\u7ebf\u7a0b if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } //\u5982\u679c\u4e0d\u662f\u7a7a\u95f2,\u5224\u65ad\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u662f\u5f53\u524d\u7ebf\u7a0b,\u6dfb\u52a0\u9501\u7684\u6b21\u6570,\u83b7\u53d6\u9501\u6210\u529f,\u56e0\u4e3a\u8fd9\u662f\u53ef\u91cd\u5165\u9501 else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) // overflow throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } //\u5176\u4ed6\u60c5\u51b5\u90fd\u8868\u793a\u83b7\u53d6\u9501\u5931\u8d25 return false; }","title":"tryLock(\u5c1d\u8bd5\u52a0\u9501)"},{"location":"java/JUC/ReentrantLock/#trylock_1","text":"public boolean tryLock(long timeout, TimeUnit unit) throws InterruptedException { //\u5c06\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u7eb3\u79d2 return sync.tryAcquireNanos(1, unit.toNanos(timeout)); } public final boolean tryAcquireNanos(int arg, long nanosTimeout) throws InterruptedException { //\u5982\u679c\u7ebf\u7a0b\u662f\u4e2d\u65ad\u72b6\u6001,\u76f4\u63a5\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); // \u9996\u5148\u5c1d\u8bd5\u83b7\u53d6\u9501,\u5982\u679c\u5931\u8d25\u8c03\u7528doAcquireNanos() return tryAcquire(arg) || doAcquireNanos(arg, nanosTimeout); } private boolean doAcquireNanos(int arg, long nanosTimeout) throws InterruptedException { //\u8d85\u65f6\u65f6\u95f4\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e0,\u76f4\u63a5\u83b7\u53d6\u9501\u5931\u8d25 if (nanosTimeout <= 0L) return false; //\u7ed3\u675f\u65f6\u95f4 final long deadline = System.nanoTime() + nanosTimeout; //\u6dfb\u52a0\u4e00\u4e2a\u72ec\u5360\u7684\u8282\u70b9\u5230\u961f\u5217\u7684\u672b\u5c3e final Node node = addWaiter(Node.EXCLUSIVE); boolean failed = true; try { //\u81ea\u65cb for (;;) { //\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9 final Node p = node.predecessor(); //\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u662fhead\u8282\u70b9,\u5c1d\u8bd5\u83b7\u53d6\u9501,\u6210\u529f\u8fd4\u56detrue if (p == head && tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return true; } //\u8d85\u65f6\u7684\u7ed3\u675f\u65f6\u95f4\u4e0e\u5f53\u524d\u65f6\u95f4\u5dee,\u5982\u679c\u5927\u4e8e0\u4ee3\u8868\u8fd8\u6ca1\u6709\u8d85\u65f6,\u7ee7\u7eed\u81ea\u65cb nanosTimeout = deadline - System.nanoTime(); if (nanosTimeout <= 0L) return false; //\u5224\u65ad\u662f\u5426\u5e94\u8be5\u6302\u8d77\u7ebf\u7a0b,\u5982\u679c\u65f6\u95f4\u5dee\u5927\u4e8e1000L,\u5c06\u5176\u6302\u8d77\u76f4\u5230\u8d85\u65f6\u65f6\u95f4\u7ed3\u675f,\u518d\u81ea\u65cb\u5f00\u59cb\u6700\u540e\u83b7\u53d6\u4e00\u6b21\u9501 if (shouldParkAfterFailedAcquire(p, node) && nanosTimeout > spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); if (Thread.interrupted()) throw new InterruptedException(); } } finally { //\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25\u4e86,\u53d6\u6d88\u5f53\u524d\u7ebf\u7a0b\u5728\u961f\u5217\u4e2d\u7684\u8282\u70b9 if (failed) cancelAcquire(node); } }","title":"tryLock(\u6307\u5b9a\u65f6\u95f4\u5185\u5c1d\u8bd5\u83b7\u53d6\u9501)"},{"location":"java/JUC/ReentrantLock/#unlock","text":"public void unlock() { sync.release(1); } public final boolean release(int arg) { //\u5c1d\u8bd5\u91ca\u653e\u9501,\u5982\u679c\u6210\u529f,\u5524\u9192\u4e0b\u4e00\u4e2a\u8282\u70b9 if (tryRelease(arg)) { Node h = head; if (h != null && h.waitStatus != 0) unparkSuccessor(h); return true; } return false; } protected final boolean tryRelease(int releases) { //\u5c06\u9501\u7684state\u91ca\u653e,\u5373\u51cf\u53bbrelease\u7684\u503c int c = getState() - releases; //\u91ca\u653e\u9501\u7684\u524d\u63d0\u662f\u5f53\u524d\u7ebf\u7a0b\u5fc5\u987b\u62e5\u6709\u9501 if (Thread.currentThread() != getExclusiveOwnerThread()) throw new IllegalMonitorStateException(); //\u7a7a\u95f2\u6807\u8bc6 boolean free = false; if (c == 0) { free = true; setExclusiveOwnerThread(null); } setState(c); return free; }","title":"unlock(\u91ca\u653e\u9501)"},{"location":"java/JUC/ReentrantLock/#_2","text":"","title":"\u4e0d\u516c\u5e73\u9501"},{"location":"java/JUC/ReentrantLock/#lock_1","text":"//\u9996\u5148\u76f4\u63a5\u53bb\u83b7\u53d6\u9501,\u8fd9\u91cc\u6ca1\u6709\u5c1d\u8bd5,\u5982\u679c\u5931\u8d25\u518d\u5c1d\u8bd5\u83b7\u53d6\u901a\u8fc7\u8c03\u7528tryAcquire final void lock() { if (compareAndSetState(0, 1)) setExclusiveOwnerThread(Thread.currentThread()); else acquire(1); } protected final boolean tryAcquire(int acquires) { //\u524d\u6587\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86,nonfairTryAcquire()\u65b9\u6cd5\u5982\u679c\u9501\u7a7a\u95f2,\u76f4\u63a5\u83b7\u53d6\u9501,\u800c\u516c\u5e73\u9501\u5219\u662f\u67e5\u770b\u524d\u9762\u662f\u5426\u6709\u6392\u961f\u7684\u7ebf\u7a0b return nonfairTryAcquire(acquires); }","title":"lock(\u52a0\u9501)"},{"location":"java/JUC/ReentrantLock/#condition","text":"//\u7ebf\u7a0b\u7b49\u5f85,\u53ef\u4e2d\u65ad void await() throws InterruptedException; //\u4e0d\u53ef\u4e2d\u65ad\u7684\u7b49\u5f85 void awaitUninterruptibly(); long awaitNanos(long nanosTimeout) throws InterruptedException; boolean await(long time, TimeUnit unit) throws InterruptedException; boolean awaitUntil(Date deadline) throws InterruptedException; void signal(); void signalAll();","title":"Condition(\u7ebf\u7a0b\u7684\u7b49\u5f85\u4e0e\u5524\u9192)"},{"location":"java/JUC/ReentrantLock/#await","text":"public final void await() throws InterruptedException { // \u9996\u5148\u7ebf\u7a0b\u5982\u679c\u662f\u4e2d\u65ad\u72b6\u6001, \u629b\u51faInterruptedException\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); //\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217 Node node = addConditionWaiter(); //\u91ca\u653e\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u7684\u9501 int savedState = fullyRelease(node); //\u4e2d\u65ad\u65b9\u5f0f:1.THROW_IE,\u629b\u51fa\u4e2d\u65ad\u5f02\u5e382.REINTERRUPT,\u8c03\u7528\u7ebf\u7a0b\u7684\u4e2d\u65ad\u65b9\u6cd5 int interruptMode = 0; //\u5224\u65ad\u662f\u5426\u5728\u540c\u6b65\u961f\u5217,\u5982\u679c\u4e0d\u5728\u540c\u6b65\u961f\u5217,\u7ebf\u7a0b\u6302\u8d77\u7b49\u5f85. //??? \u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u8282\u70b9\u4f1a\u5728\u540c\u6b65\u961f\u5217\u4e2d\u5462?\u6211\u82e6\u601d\u8fd9\u6bb5\u4ee3\u7801,\u7ec8\u4e8e\u518d\u540e\u9762\u77e5\u9053\u4e86(ps:\u5f53\u7136\u662f\u5728\u8c03\u7528\u5524\u9192\u65b9\u6cd5\u7684\u65f6\u5019\u5566) while (!isOnSyncQueue(node)) { LockSupport.park(this); //\u68c0\u67e5\u7ebf\u7a0b\u5728\u7b49\u5f85\u671f\u95f4\u662f\u5426\u4e2d\u65ad,\u4e0d\u4e3a0\u4ee3\u8868\u4e2d\u65ad if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; } // acquireQueued\u65b9\u6cd5\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230\u540c\u6b65\u961f\u5217\u4e2d,\u8fd4\u56detrue,\u4ee3\u8868\u7ebf\u7a0b\u4e2d\u65ad if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; if (node.nextWaiter != null) // clean up if cancelled unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); } private Node addConditionWaiter() { //\u83b7\u53d6\u6700\u540e\u4e00\u4e2a\u7b49\u5f85\u8005 Node t = lastWaiter; // If lastWaiter is cancelled, clean out. //\u5982\u679c\u6700\u540e\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u4e0d\u662fnull\u5e76\u4e14\u8282\u70b9\u7684\u72b6\u6001\u4e0d\u662fCONDITION,\u6e05\u7406\u5df2\u7ecf\u53d6\u6d88\u7684\u7b49\u5f85\u7ebf\u7a0b if (t != null && t.waitStatus != Node.CONDITION) { //\u5220\u9664\u975eCondition\u7684\u8282\u70b9 unlinkCancelledWaiters(); //\u91cd\u65b0\u8d4b\u503ct t = lastWaiter; } //\u521b\u5efa\u4e00\u4e2aCondition\u72b6\u6001\u7684\u8282\u70b9 Node node = new Node(Thread.currentThread(), Node.CONDITION); //\u5982\u679c\u961f\u5217\u4e3a\u7a7afirstWaiter = lastWaiter = node,\u5426\u5219t.nextWaiter = node if (t == null) firstWaiter = node; else t.nextWaiter = node; lastWaiter = node; return node; } //\u6e05\u7406\u5df2\u7ecf\u53d6\u6d88\u7684\u7b49\u5f85\u7ebf\u7a0b private void unlinkCancelledWaiters() { //\u961f\u5217\u7b2c\u4e00\u4e2a\u8282\u70b9 Node t = firstWaiter; //\u904d\u5386\u8fc7\u7684\u6700\u540e\u4e00\u4e2a\u975eCondition\u8282\u70b9,\u4e5f\u53ef\u4ee5\u8bf4\u662f\u5f53\u524d\u904d\u5386\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9,\u56e0\u4e3aCondition Queue\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868 Node trail = null; while (t != null) { //\u4e0b\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9 Node next = t.nextWaiter; //\u8282\u70b9\u7684\u7b49\u5f85\u72b6\u6001\u4e0d\u662fCONDITION if (t.waitStatus != Node.CONDITION) { //\u65ad\u5f00\u5f53\u524d\u8282\u70b9\u4e0e\u4e0b\u4e00\u8282\u70b9\u7684\u94fe\u63a5 t.nextWaiter = null; //\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u4e3anull,\u66f4\u65b0next\u4e3a\u7b2c\u4e00\u4e2a\u7b49\u5f85\u961f\u5217,\u5426\u5219next\u8282\u70b9\u4e3atrail\u7684nextWaiter if (trail == null) firstWaiter = next; else trail.nextWaiter = next; //\u5982\u679cnext\u4e3anull,\u4ee3\u8868\u5df2\u7ecf\u5230\u4e86\u6700\u540e,\u66f4\u65b0lastWaiter\u4e3atrail,\u56e0\u4e3at\u8282\u70b9\u7684\u72b6\u6001\u4e0d\u662fCONDITION if (next == null) lastWaiter = trail; } else trail = t; t = next; } } //\u7ebf\u7a0b\u7b49\u5f85\u671f\u95f4\u5c06\u7ebf\u7a0b\u6301\u6709\u7684\u91cd\u5165\u9501\u5168\u90e8\u91ca\u653e, \u5982\u679c\u5931\u8d25\u5c06\u8282\u70b9\u7684\u72b6\u6001waitStatus\u8bbe\u7f6e\u4e3aCANCELLED final int fullyRelease(Node node) { boolean failed = true; try { int savedState = getState(); if (release(savedState)) { failed = false; return savedState; } else { throw new IllegalMonitorStateException(); } } finally { if (failed) node.waitStatus = Node.CANCELLED; } } //\u5224\u65ad\u662f\u5426\u5728\u540c\u6b65\u961f\u5217 //1.\u8282\u70b9\u7684waitStatus\u7b49\u4e8eCONDITION, \u5e76\u4e14\u524d\u4e00\u8282\u70b9\u4e3anull,\u5219\u8fd4\u56defalse,\u56e0\u4e3a\u8fd9\u662fCondition Queue final boolean isOnSyncQueue(Node node) { if (node.waitStatus == Node.CONDITION || node.prev == null) return false; if (node.next != null) // If has successor, it must be on queue return true; //\u4ece\u961f\u5217\u6700\u540e\u5411\u524d\u67e5\u627e\u8be5\u8282\u70b9 return findNodeFromTail(node); } private int checkInterruptWhileWaiting(Node node) { //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u8fd4\u56detransferAfterCancelledWait(node) ? THROW_IE : REINTERRUPT,\u5426\u5219\u4e3a0 return Thread.interrupted() ? (transferAfterCancelledWait(node) ? THROW_IE : REINTERRUPT) : 0; } //\u7ebf\u7a0b\u4e2d\u65ad\u540e,\u4e0d\u5fc5\u518d\u7b49\u5f85,\u5c06\u8be5\u8282\u70b9\u8f6c\u5316\u4e3aSync Queue,\u5e76\u6dfb\u52a0\u5230\u961f\u5217\u672b\u5c3e final boolean transferAfterCancelledWait(Node node) { if (compareAndSetWaitStatus(node, Node.CONDITION, 0)) { enq(node); return true; } /* * If we lost out to a signal(), then we can't proceed * until it finishes its enq(). Cancelling during an * incomplete transfer is both rare and transient, so just * spin. */ //\u5982\u679c\u4e0d\u5728\u540c\u6b65\u961f\u5217\u4e2d,\u7ebf\u7a0b\u8ba9\u6b65 while (!isOnSyncQueue(node)) Thread.yield(); return false; }","title":"await"},{"location":"java/JUC/ReentrantLock/#awaituninterruptibly","text":"//\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u7ebf\u7a0b\u7b49\u5f85 public final void awaitUninterruptibly() { //\u6dfb\u52a0\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9\u5230Condition Queue Node node = addConditionWaiter(); //\u91ca\u653e\u9501 int savedState = fullyRelease(node); boolean interrupted = false; while (!isOnSyncQueue(node)) { LockSupport.park(this); if (Thread.interrupted()) interrupted = true; } //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad\u6062\u590d\u4e2d\u65ad\u72b6\u6001 if (acquireQueued(node, savedState) || interrupted) selfInterrupt(); }","title":"awaitUninterruptibly"},{"location":"java/JUC/ReentrantLock/#awaitnanosnanostimeout","text":"// \u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u7684\u7b49\u5f85 public final long awaitNanos(long nanosTimeout) throws InterruptedException { //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u76f4\u63a5\u629b\u51fa\u5f02\u5e38 if (Thread.interrupted()) throw new InterruptedException(); //\u6dfb\u52a0\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9\u5230Condition Queue\u4e2d Node node = addConditionWaiter(); //\u5148\u91ca\u653e\u9501 int savedState = fullyRelease(node); //\u7ebf\u7a0b\u7b49\u5f85\u7684\u7ed3\u675f\u65e5\u671f final long deadline = System.nanoTime() + nanosTimeout; int interruptMode = 0; //\u9996\u5148\u5224\u65ad\u662f\u5426\u5728\u540c\u6b65\u961f\u5217\u4e2d while (!isOnSyncQueue(node)) { //\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e0,\u53d6\u6d88\u7b49\u5f85,\u7136\u540e\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u5230Sync Deque\u4e2d if (nanosTimeout <= 0L) { transferAfterCancelledWait(node); break; } //\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u8d85\u8fc71000,\u7ebf\u7a0b\u6302\u8d77,\u76f4\u5230\u8d85\u65f6\u65f6\u95f4\u7ed3\u675f if (nanosTimeout >= spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); //\u5982\u679c\u7ebf\u7a0b\u4e2d\u65ad,\u76f4\u63a5\u8df3\u51fa\u5faa\u73af if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; nanosTimeout = deadline - System.nanoTime(); } //\u83b7\u53d6\u9501,\u5982\u679c\u4e2d\u65ad,\u62a5\u544a if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; //\u6e05\u7406Condition Queue if (node.nextWaiter != null) unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); //\u8fd4\u56de\u7b49\u5f85\u5269\u4f59\u7684\u65f6\u95f4 return deadline - System.nanoTime(); }","title":"awaitNanos(nanosTimeout)"},{"location":"java/JUC/ReentrantLock/#awaitlong-time-timeunit-unit","text":"// \u6b64\u5904\u5b9e\u73b0\u4e0eawaitNanos\u5927\u81f4\u76f8\u540c,\u4e3b\u8981\u5728\u5176\u8fd4\u56de\u503c\u4ee3\u8868\u662f\u5426\u8d85\u65f6,\u5982\u679c\u63d0\u524d\u5524\u9192\u8fd4\u56detrue public final boolean await(long time, TimeUnit unit) throws InterruptedException { long nanosTimeout = unit.toNanos(time); if (Thread.interrupted()) throw new InterruptedException(); Node node = addConditionWaiter(); int savedState = fullyRelease(node); final long deadline = System.nanoTime() + nanosTimeout; boolean timedout = false; int interruptMode = 0; while (!isOnSyncQueue(node)) { if (nanosTimeout <= 0L) { //\u8fd9\u91cc\u53ef\u80fd\u7b49\u5f85\u8282\u70b9\u88ab\u63d0\u524d\u5524\u9192,\u5bfc\u81f4\u8282\u70b9\u8f6c\u5316\u5931\u8d25 timedout = transferAfterCancelledWait(node); break; } if (nanosTimeout >= spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; nanosTimeout = deadline - System.nanoTime(); } if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; if (node.nextWaiter != null) unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); return !timedout; }","title":"await(long time, TimeUnit unit)"},{"location":"java/JUC/ReentrantLock/#awaituntildate-deadline","text":"public final boolean awaitUntil(Date deadline) throws InterruptedException { //\u7edd\u5bf9\u65e5\u671f \u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d long abstime = deadline.getTime(); if (Thread.interrupted()) throw new InterruptedException(); Node node = addConditionWaiter(); int savedState = fullyRelease(node); boolean timedout = false; int interruptMode = 0; while (!isOnSyncQueue(node)) { if (System.currentTimeMillis() > abstime) { timedout = transferAfterCancelledWait(node); break; } LockSupport.parkUntil(this, abstime); if ((interruptMode = checkInterruptWhileWaiting(node)) != 0) break; } if (acquireQueued(node, savedState) && interruptMode != THROW_IE) interruptMode = REINTERRUPT; if (node.nextWaiter != null) unlinkCancelledWaiters(); if (interruptMode != 0) reportInterruptAfterWait(interruptMode); return !timedout; }","title":"awaitUntil(Date deadline)"},{"location":"java/JUC/ReentrantLock/#signal","text":"public final void signal() { //\u5fc5\u987b\u662f\u72ec\u5360\u6a21\u5f0f,\u5f53\u524d\u7ebf\u7a0b\u5fc5\u987b\u6301\u6709\u9501 if (!isHeldExclusively()) throw new IllegalMonitorStateException(); //\u5524\u9192\u7b2c\u4e00\u4e2a\u7b49\u5f85\u8282\u70b9 Node first = firstWaiter; if (first != null) doSignal(first); } private void doSignal(Node first) { do { //\u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u66f4\u65b0\u4e3a\u7b2c\u4e8c\u4e2a\u8282\u70b9,\u5982\u679c\u7b2c\u4e8c\u4e2a\u8282\u70b9\u4e3anull,\u8bf4\u660eCondition Queue\u662f\u7a7a\u7684,\u9700\u8981\u66f4\u65b0 //lastWaiter\u4e3anull if ( (firstWaiter = first.nextWaiter) == null) lastWaiter = null; //\u65ad\u5f00\u4e0e\u5176\u4ed6\u8282\u70b9\u7684\u94fe\u63a5 first.nextWaiter = null; } while (!transferForSignal(first) && (first = firstWaiter) != null);//\u8f6c\u6362\u8282\u70b9\u72b6\u6001,\u5e76\u6dfb\u52a0\u5230\u540c\u6b65\u961f\u5217,\u5982\u679c\u5931\u8d25,\u8fd4\u56defalse,\u7ee7\u7eed\u5524\u9192\u4e0b\u4e00\u4e2a\u7b49\u5f85\u7684\u8282\u70b9 } //\u8f6c\u6362\u8fd9\u4e2a\u8282\u70b9\u5230Sync Queue final boolean transferForSignal(Node node) { /* * If cannot change waitStatus, the node has been cancelled. */ if (!compareAndSetWaitStatus(node, Node.CONDITION, 0)) return false; /* * Splice onto queue and try to set waitStatus of predecessor to * indicate that thread is (probably) waiting. If cancelled or * attempt to set waitStatus fails, wake up to resync (in which * case the waitStatus can be transiently and harmlessly wrong). */ //\u6dfb\u52a0\u5230\u540c\u6b65\u961f\u5217\u7684\u672b\u5c3e,\u5e76\u8fd4\u56de\u524d\u4e00\u8282\u70b9,\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u72b6\u6001\u662f\u53d6\u6d88\u7684\u6216\u8005\u66f4\u65b0\u72b6\u6001\u5931\u8d25,\u5524\u9192\u8be5\u7ebf\u7a0b\u6765\u91cd\u65b0\u540c\u6b65 Node p = enq(node); int ws = p.waitStatus; if (ws > 0 || !compareAndSetWaitStatus(p, ws, Node.SIGNAL)) LockSupport.unpark(node.thread); return true; }","title":"signal"},{"location":"java/JUC/ReentrantLock/#signalall","text":"public final void signalAll() { //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u6301\u6709\u9501 if (!isHeldExclusively()) throw new IllegalMonitorStateException(); Node first = firstWaiter; //\u5524\u9192\u6240\u6709\u8282\u70b9 if (first != null) doSignalAll(first); } //\u5355\u5411\u961f\u5217\u4f9d\u6b21\u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u8282\u70b9 private void doSignalAll(Node first) { lastWaiter = firstWaiter = null; do { Node next = first.nextWaiter; first.nextWaiter = null; transferForSignal(first); first = next; } while (first != null); }","title":"signalAll"},{"location":"java/JUC/ReentrantLock/#api","text":"","title":"\u5176\u4ed6API"},{"location":"java/JUC/ReentrantLock/#getholdcount","text":"public int getHoldCount() { return sync.getHoldCount(); } final int getHoldCount() { //\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u9501,\u8fd4\u56destate\u7684\u503c,\u5426\u5219\u4e3a0 return isHeldExclusively() ? getState() : 0; }","title":"getHoldCount"},{"location":"java/JUC/ReentrantLock/#isheldbycurrentthread","text":"public boolean isHeldByCurrentThread() { //\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u6301\u6709\u9501 return sync.isHeldExclusively(); }","title":"isHeldByCurrentThread"},{"location":"java/JUC/ReentrantLock/#islocked","text":"\u9501\u662f\u5426\u7a7a\u95f2,\u4ee5state\u503c\u662f\u5426\u4e3a0\u5224\u65ad public boolean isLocked() { return sync.isLocked(); }","title":"isLocked"},{"location":"java/JUC/ReentrantLock/#isfair","text":"\u662f\u5426\u4e3a\u516c\u5e73\u9501 java public final boolean isFair() { return sync instanceof FairSync; }","title":"isFair"},{"location":"java/JUC/ReentrantLock/#getowner","text":"\u83b7\u53d6\u9501\u6301\u6709\u7684\u7ebf\u7a0b,\u5982\u679c\u9501\u7a7a\u95f2\u8fd4\u56denull java final Thread getOwner() { return getState() == 0 ? null : getExclusiveOwnerThread(); }","title":"getOwner"},{"location":"java/JUC/ReentrantLock/#hasqueuedthreads","text":"\u662f\u5426\u6709\u6392\u961f\u7684\u7ebf\u7a0b java public final boolean hasQueuedThreads() { return head != tail; }","title":"hasQueuedThreads"},{"location":"java/JUC/ReentrantLock/#hasqueuedthread","text":"\u5224\u65ad\u8be5\u7ebf\u7a0b\u662f\u5426\u5728\u6392\u961f java public final boolean hasQueuedThread(Thread thread) { return sync.isQueued(thread); } java public final boolean isQueued(Thread thread) { if (thread == null) throw new NullPointerException(); for (Node p = tail; p != null; p = p.prev) if (p.thread == thread) return true; return false; }","title":"hasQueuedThread"},{"location":"java/JUC/ReentrantLock/#getqueuelength","text":"\u540c\u6b65\u961f\u5217\u7684\u957f\u5ea6 java public final int getQueueLength() { return sync.getQueueLength(); } java public final int getQueueLength() { int n = 0; for (Node p = tail; p != null; p = p.prev) { if (p.thread != null) ++n; } return n; }","title":"getQueueLength"},{"location":"java/JUC/ReentrantLock/#getqueuedthreads","text":"\u83b7\u53d6\u6240\u6709\u6392\u961f\u7684\u7ebf\u7a0b java protected Collection<Thread> getQueuedThreads() { return sync.getQueuedThreads(); } java public final Collection<Thread> getQueuedThreads() { ArrayList<Thread> list = new ArrayList<Thread>(); for (Node p = tail; p != null; p = p.prev) { Thread t = p.thread; if (t != null) list.add(t); } return list; }","title":"getQueuedThreads"},{"location":"java/JUC/ReentrantLock/#haswaiters","text":"\u662f\u5426\u7531\u7ebf\u7a0b\u7b49\u5f85 java public boolean hasWaiters(Condition condition) { if (condition == null) throw new NullPointerException(); if (!(condition instanceof AbstractQueuedSynchronizer.ConditionObject)) throw new IllegalArgumentException(\"not owner\"); return sync.hasWaiters((AbstractQueuedSynchronizer.ConditionObject)condition); } java public final boolean hasWaiters(ConditionObject condition) { if (!owns(condition)) throw new IllegalArgumentException(\"Not owner\"); return condition.hasWaiters(); } java protected final boolean hasWaiters() { if (!isHeldExclusively()) throw new IllegalMonitorStateException(); for (Node w = firstWaiter; w != null; w = w.nextWaiter) { if (w.waitStatus == Node.CONDITION) return true; } return false; }","title":"hasWaiters"},{"location":"java/JUC/ReentrantLock/#getwaitqueuelength","text":"Condition Queue\u7684\u957f\u5ea6","title":"getWaitQueueLength"},{"location":"java/JUC/ReentrantLock/#getwaitingthreads","text":"Condition Queue\u4e2d\u6240\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b","title":"getWaitingThreads"},{"location":"java/JVMS/ClassFormat/","text":"Class Format \u672c\u6587\u4e3a\u5b57\u8282\u7801\u6587\u4ef6\u89c4\u8303,\u4ee5\u4e00\u4e2a\u5b9e\u4f8b\u6765\u7814\u7a76java\u7f16\u8bd1\u7684class\u6587\u4ef6\u4e2d\u6bcf\u4e00\u4e2a\u5b57\u8282\u7801\u8fdb\u884c\u5206\u6790\u5176\u5177\u4f53\u5185\u5bb9\u662f\u4ec0\u4e48!!!\u53c2\u8003Oracle\u5b98\u7f51\u7684Java\u865a\u62df\u673a\u89c4\u8303 \u6e90\u6587\u4ef6 public class Student implements Serializable, Cloneable { private long id; private String name; public long getId() { return id; } public void setId(long id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } public Student() { } public Student(long id, String name) { this.id = id; this.name = name; } } \u5b57\u8282\u7801\u6587\u4ef6 CA FE BA BE 00 00 00 34 00 21 09 00 04 00 1C 09 00 04 00 1D 0A 00 05 00 1E 07 00 1F 07 00 20 01 00 02 69 64 01 00 01 4A 01 00 04 6E 61 6D 65 01 00 12 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 01 00 05 67 65 74 49 64 01 00 03 28 29 4A 01 00 04 43 6F 64 65 01 00 0F 4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65 01 00 12 4C 6F 63 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65 01 00 04 74 68 69 73 01 00 16 4C 63 6F 6D 2F 61 73 6D 2F 74 65 73 74 2F 53 74 75 64 65 6E 74 3B 01 00 05 73 65 74 49 64 01 00 04 28 4A 29 56 01 00 07 67 65 74 4E 61 6D 65 01 00 14 28 29 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 01 00 07 73 65 74 4E 61 6D 65 01 00 15 28 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01 00 06 3C 69 6E 69 74 3E 01 00 03 28 29 56 01 00 16 28 4A 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01 00 0A 53 6F 75 72 63 65 46 69 6C 65 01 00 0C 53 74 75 64 65 6E 74 2E 6A 61 76 61 0C 00 06 00 07 0C 00 08 00 09 0C 00 17 00 18 01 00 14 63 6F 6D 2F 61 73 6D 2F 74 65 73 74 2F 53 74 75 64 65 6E 74 01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74 00 21 00 04 00 05 00 00 00 02 00 02 00 06 00 07 00 00 00 02 00 08 00 09 00 00 00 06 00 01 00 0A 00 0B 00 01 00 0C 00 00 00 2F 00 02 00 01 00 00 00 05 2A B4 00 01 AD 00 00 00 02 00 0D 00 00 00 06 00 01 00 00 00 09 00 0E 00 00 00 0C 00 01 00 00 00 05 00 0F 00 10 00 00 00 01 00 11 00 12 00 01 00 0C 00 00 00 3E 00 03 00 03 00 00 00 06 2A 1F B5 00 01 B1 00 00 00 02 00 0D 00 00 00 0A 00 02 00 00 00 0D 00 05 00 0E 00 0E 00 00 00 16 00 02 00 00 00 06 00 0F 00 10 00 00 00 00 00 06 00 06 00 07 00 01 00 01 00 13 00 14 00 01 00 0C 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0D 00 00 00 06 00 01 00 00 00 11 00 0E 00 00 00 0C 00 01 00 00 00 05 00 0F 00 10 00 00 00 01 00 15 00 16 00 01 00 0C 00 00 00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1 00 00 00 02 00 0D 00 00 00 0A 00 02 00 00 00 15 00 05 00 16 00 0E 00 00 00 16 00 02 00 00 00 06 00 0F 00 10 00 00 00 00 00 06 00 08 00 09 00 01 00 01 00 17 00 18 00 01 00 0C 00 00 00 33 00 01 00 01 00 00 00 05 2A B7 00 03 B1 00 00 00 02 00 0D 00 00 00 0A 00 02 00 00 00 18 00 04 00 19 00 0E 00 00 00 0C 00 01 00 00 00 05 00 0F 00 10 00 00 00 01 00 17 00 19 00 01 00 0C 00 00 00 59 00 03 00 04 00 00 00 0F 2A B7 00 03 2A 1F B5 00 01 2A 2D B5 00 02 B1 00 00 00 02 00 0D 00 00 00 12 00 04 00 00 00 1B 00 04 00 1C 00 09 00 1D 00 0E 00 1E 00 0E 00 00 00 20 00 03 00 00 00 0F 00 0F 00 10 00 00 00 00 00 0F 00 06 00 07 00 01 00 00 00 0F 00 08 00 09 00 03 00 01 00 1A 00 00 00 02 00 1B \u53cd\u7f16\u8bd1\u6587\u4ef6 Classfile /home/amarsoft/workspace/app/asm-test/target/classes/com/asm/test/Student.class Last modified 2020-8-26; size 847 bytes MD5 checksum 7fd5f26737b6e1effb65d05864328b9c Compiled from \"Student.java\" public class com.asm.test.Student minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPER Constant pool: #1 = Fieldref #4.#28 // com/asm/test/Student.id:J #2 = Fieldref #4.#29 // com/asm/test/Student.name:Ljava/lang/String; #3 = Methodref #5.#30 // java/lang/Object.\"<init>\":()V #4 = Class #31 // com/asm/test/Student #5 = Class #32 // java/lang/Object #6 = Utf8 id #7 = Utf8 J #8 = Utf8 name #9 = Utf8 Ljava/lang/String; #10 = Utf8 getId #11 = Utf8 ()J #12 = Utf8 Code #13 = Utf8 LineNumberTable #14 = Utf8 LocalVariableTable #15 = Utf8 this #16 = Utf8 Lcom/asm/test/Student; #17 = Utf8 setId #18 = Utf8 (J)V #19 = Utf8 getName #20 = Utf8 ()Ljava/lang/String; #21 = Utf8 setName #22 = Utf8 (Ljava/lang/String;)V #23 = Utf8 <init> #24 = Utf8 ()V #25 = Utf8 (JLjava/lang/String;)V #26 = Utf8 SourceFile #27 = Utf8 Student.java #28 = NameAndType #6:#7 // id:J #29 = NameAndType #8:#9 // name:Ljava/lang/String; #30 = NameAndType #23:#24 // \"<init>\":()V #31 = Utf8 com/asm/test/Student #32 = Utf8 java/lang/Object { public long getId(); descriptor: ()J flags: ACC_PUBLIC Code: stack=2, locals=1, args_size=1 0: aload_0 1: getfield #1 // Field id:J 4: lreturn LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/asm/test/Student; public void setId(long); descriptor: (J)V flags: ACC_PUBLIC Code: stack=3, locals=3, args_size=2 0: aload_0 1: lload_1 2: putfield #1 // Field id:J 5: return LineNumberTable: line 13: 0 line 14: 5 LocalVariableTable: Start Length Slot Name Signature 0 6 0 this Lcom/asm/test/Student; 0 6 1 id J public java.lang.String getName(); descriptor: ()Ljava/lang/String; flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: getfield #2 // Field name:Ljava/lang/String; 4: areturn LineNumberTable: line 17: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/asm/test/Student; public void setName(java.lang.String); descriptor: (Ljava/lang/String;)V flags: ACC_PUBLIC Code: stack=2, locals=2, args_size=2 0: aload_0 1: aload_1 2: putfield #2 // Field name:Ljava/lang/String; 5: return LineNumberTable: line 21: 0 line 22: 5 LocalVariableTable: Start Length Slot Name Signature 0 6 0 this Lcom/asm/test/Student; 0 6 1 name Ljava/lang/String; public com.asm.test.Student(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #3 // Method java/lang/Object.\"<init>\":()V 4: return LineNumberTable: line 24: 0 line 25: 4 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/asm/test/Student; public com.asm.test.Student(long, java.lang.String); descriptor: (JLjava/lang/String;)V flags: ACC_PUBLIC Code: stack=3, locals=4, args_size=3 0: aload_0 1: invokespecial #3 // Method java/lang/Object.\"<init>\":()V 4: aload_0 5: lload_1 6: putfield #1 // Field id:J 9: aload_0 10: aload_3 11: putfield #2 // Field name:Ljava/lang/String; 14: return LineNumberTable: line 27: 0 line 28: 4 line 29: 9 line 30: 14 LocalVariableTable: Start Length Slot Name Signature 0 15 0 this Lcom/asm/test/Student; 0 15 1 id J 0 15 3 name Ljava/lang/String; } SourceFile: \"Student.java\" \u5b57\u8282\u7801\u6587\u4ef6\u7ed3\u6784 ClassFile { u4 magic; u2 minor_version; u2 major_version; u2 constant_pool_count; cp_info constant_pool[constant_pool_count-1]; u2 access_flags; u2 this_class; u2 super_class; u2 interfaces_count; u2 interfaces[interfaces_count]; u2 fields_count; field_info fields[fields_count]; u2 methods_count; method_info methods[methods_count]; u2 attributes_count; attribute_info attributes[attributes_count]; } \u5176\u4e2du1,u2,u4\u5206\u522b\u4ee3\u88681,2,4\u4e2a\u5b57\u8282 magic magic\u662f\u5b57\u8282\u7801\u6587\u4ef6\u7684\u9b54\u6cd5\u6570,\u5171\u6709\u56db\u4e2a\u5b57\u8282, CA FE BA BE ,\u8fd9\u662fJava\u5b57\u8282\u7801\u6587\u4ef6\u7684\u56fa\u5b9a\u503c minor_version \u5360\u7528\u4e24\u4e2a\u5b57\u8282, \u503c\u4e3a 00 00 ,\u4ee3\u8868\u4e3b\u7248\u672c\u53f7,\u76ee\u524d\u7684java\u7248\u672c\u76f4\u5230jdk11\u90fd\u662f0 major_version \u6b21\u7248\u672c\u53f7 00 34 ,\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u4e3a52,\u4ee3\u8868jdk1.8\u7248\u672c constant_pool_count \u5e38\u91cf\u6c60\u6570\u91cf,\u5360\u7528\u4e24\u4e2a\u5b57\u8282,\u503c\u4e3a 00 21 ,\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u4e3a33,\u4ee3\u8868\u5e38\u91cf\u6c60\u7684\u6570\u91cf\u662f32 + 1 cp_info(constant_pool_info) \u5e38\u91cf\u6c60\u4fe1\u606f\u5b57\u8282\u662f\u4e0d\u56fa\u5b9a\u7684,\u4f46\u4e5f\u6709\u5176\u89c4\u5f8b\u53ef\u5faa,\u603b\u4f53\u7ed3\u6784\u4e3a cp_info { u1 tag; u1 info[]; } 1\u4e2a\u5b57\u8282\u7684tag, info\u6570\u7ec4\u968f\u7740tag\u7684\u4e0d\u540c\u5176\u4fe1\u606f\u4e5f\u4e0d\u540c,\u4e0b\u9762\u4f1a\u4e00\u4e00\u4ecb\u7ecd,\u9996\u5148\u6765\u63a5\u6536tag\u7684\u7c7b\u578b Constant Type Value CONSTANT_Class 7 CONSTANT_Fieldref 9 CONSTANT_Methodref 10 CONSTANT_InterfaceMethodref 11 CONSTANT_String 8 CONSTANT_Integer 3 CONSTANT_Float 4 CONSTANT_Long 5 CONSTANT_Double 6 CONSTANT_NameAndType 12 CONSTANT_Utf8 1 CONSTANT_MethodHandle 15 CONSTANT_MethodType 16 CONSTANT_InvokeDynamic 18 \u4e0b\u9762\u4ecb\u7ecd\u6bcf\u4e00\u4e2atag\u5bf9\u5e94\u7684info\u6570\u7ec4 CONSTANT_Class_info { u1 tag; u2 name_index; # \u6307\u5411\u5e38\u91cf\u6c60\u8868\u4e2d\u7684\u7d22\u5f15 } CONSTANT_Fieldref_info { u1 tag; u2 class_index; //\u6240\u5c5e\u7c7b\u7684\u7d22\u5f15 u2 name_and_type_index; \u540d\u5b57\u548c\u7c7b\u578b\u7684\u7d22\u5f15 } CONSTANT_Methodref_info { u1 tag; u2 class_index; u2 name_and_type_index; } CONSTANT_InterfaceMethodref_info { u1 tag; u2 class_index; u2 name_and_type_index; } CONSTANT_String_info { u1 tag; u2 string_index; //\u5b57\u7b26\u4e32\u7d22\u5f15 } CONSTANT_Integer_info { u1 tag; u4 bytes; } CONSTANT_Float_info { u1 tag; u4 bytes; //\u5360\u7528\u56db\u4e2a\u5b57\u8282\u7684byte\u6570\u7ec4, \u4ee3\u8868\u5176\u771f\u5b9e\u503c } CONSTANT_NameAndType_info { u1 tag; u2 name_index; // \u540d\u79f0\u7d22\u5f15 u2 descriptor_index; // \u63cf\u8ff0\u7b26\u7d22\u5f15 } CONSTANT_Utf8_info { u1 tag; u2 length; u1 bytes[length]; } CONSTANT_MethodHandle_info { u1 tag; u1 reference_kind; u2 reference_index; } CONSTANT_MethodType_info { u1 tag; u2 descriptor_index; } CONSTANT_InvokeDynamic_info { u1 tag; u2 bootstrap_method_attr_index; u2 name_and_type_index; } \u7d27\u968f\u5e38\u91cf\u6c60\u6570\u91cf\u540e\u9762\u7684\u5b57\u8282\u662f 09 , \u4ee3\u8868\u662f\u4e00\u4e2a CONSTANT_Fieldref ,\u5176\u683c\u5f0f\u5305\u542b1\u4e2a\u5b57\u8282\u7684tag, 2\u4e2a\u5b57\u8282\u7684 class_index ( 00 04 )\u548c2\u4e2a\u5b57\u8282\u7684 name_and_type_index ( 00 1C ),\u6240\u4ee5\u5e38\u91cf\u6c60\u8868\u7684\u7b2c\u4e00\u4e2a\u5e38\u91cf\u5206\u6790\u5b8c\u6bd5,\u6b63\u597d\u4e0e\u53cd\u7f16\u8bd1\u6587\u4ef6\u5bf9\u5e94 1 = Fieldref #4.#28 // #1 \u4ee3\u8868\u7b2c\u4e00\u4e2a\u7d22\u5f15,#4,#28\u73b0\u5728\u8fd8\u4e0d\u6e05\u695a,\u5148\u4e0d\u8981\u7740\u6025,\u6162\u6162\u7684\u5206\u6790","title":"Class Format"},{"location":"java/JVMS/ClassFormat/#class-format","text":"\u672c\u6587\u4e3a\u5b57\u8282\u7801\u6587\u4ef6\u89c4\u8303,\u4ee5\u4e00\u4e2a\u5b9e\u4f8b\u6765\u7814\u7a76java\u7f16\u8bd1\u7684class\u6587\u4ef6\u4e2d\u6bcf\u4e00\u4e2a\u5b57\u8282\u7801\u8fdb\u884c\u5206\u6790\u5176\u5177\u4f53\u5185\u5bb9\u662f\u4ec0\u4e48!!!\u53c2\u8003Oracle\u5b98\u7f51\u7684Java\u865a\u62df\u673a\u89c4\u8303","title":"Class Format"},{"location":"java/JVMS/ClassFormat/#_1","text":"public class Student implements Serializable, Cloneable { private long id; private String name; public long getId() { return id; } public void setId(long id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } public Student() { } public Student(long id, String name) { this.id = id; this.name = name; } }","title":"\u6e90\u6587\u4ef6"},{"location":"java/JVMS/ClassFormat/#_2","text":"CA FE BA BE 00 00 00 34 00 21 09 00 04 00 1C 09 00 04 00 1D 0A 00 05 00 1E 07 00 1F 07 00 20 01 00 02 69 64 01 00 01 4A 01 00 04 6E 61 6D 65 01 00 12 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 01 00 05 67 65 74 49 64 01 00 03 28 29 4A 01 00 04 43 6F 64 65 01 00 0F 4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65 01 00 12 4C 6F 63 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65 01 00 04 74 68 69 73 01 00 16 4C 63 6F 6D 2F 61 73 6D 2F 74 65 73 74 2F 53 74 75 64 65 6E 74 3B 01 00 05 73 65 74 49 64 01 00 04 28 4A 29 56 01 00 07 67 65 74 4E 61 6D 65 01 00 14 28 29 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 01 00 07 73 65 74 4E 61 6D 65 01 00 15 28 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01 00 06 3C 69 6E 69 74 3E 01 00 03 28 29 56 01 00 16 28 4A 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01 00 0A 53 6F 75 72 63 65 46 69 6C 65 01 00 0C 53 74 75 64 65 6E 74 2E 6A 61 76 61 0C 00 06 00 07 0C 00 08 00 09 0C 00 17 00 18 01 00 14 63 6F 6D 2F 61 73 6D 2F 74 65 73 74 2F 53 74 75 64 65 6E 74 01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74 00 21 00 04 00 05 00 00 00 02 00 02 00 06 00 07 00 00 00 02 00 08 00 09 00 00 00 06 00 01 00 0A 00 0B 00 01 00 0C 00 00 00 2F 00 02 00 01 00 00 00 05 2A B4 00 01 AD 00 00 00 02 00 0D 00 00 00 06 00 01 00 00 00 09 00 0E 00 00 00 0C 00 01 00 00 00 05 00 0F 00 10 00 00 00 01 00 11 00 12 00 01 00 0C 00 00 00 3E 00 03 00 03 00 00 00 06 2A 1F B5 00 01 B1 00 00 00 02 00 0D 00 00 00 0A 00 02 00 00 00 0D 00 05 00 0E 00 0E 00 00 00 16 00 02 00 00 00 06 00 0F 00 10 00 00 00 00 00 06 00 06 00 07 00 01 00 01 00 13 00 14 00 01 00 0C 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0D 00 00 00 06 00 01 00 00 00 11 00 0E 00 00 00 0C 00 01 00 00 00 05 00 0F 00 10 00 00 00 01 00 15 00 16 00 01 00 0C 00 00 00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1 00 00 00 02 00 0D 00 00 00 0A 00 02 00 00 00 15 00 05 00 16 00 0E 00 00 00 16 00 02 00 00 00 06 00 0F 00 10 00 00 00 00 00 06 00 08 00 09 00 01 00 01 00 17 00 18 00 01 00 0C 00 00 00 33 00 01 00 01 00 00 00 05 2A B7 00 03 B1 00 00 00 02 00 0D 00 00 00 0A 00 02 00 00 00 18 00 04 00 19 00 0E 00 00 00 0C 00 01 00 00 00 05 00 0F 00 10 00 00 00 01 00 17 00 19 00 01 00 0C 00 00 00 59 00 03 00 04 00 00 00 0F 2A B7 00 03 2A 1F B5 00 01 2A 2D B5 00 02 B1 00 00 00 02 00 0D 00 00 00 12 00 04 00 00 00 1B 00 04 00 1C 00 09 00 1D 00 0E 00 1E 00 0E 00 00 00 20 00 03 00 00 00 0F 00 0F 00 10 00 00 00 00 00 0F 00 06 00 07 00 01 00 00 00 0F 00 08 00 09 00 03 00 01 00 1A 00 00 00 02 00 1B","title":"\u5b57\u8282\u7801\u6587\u4ef6"},{"location":"java/JVMS/ClassFormat/#_3","text":"Classfile /home/amarsoft/workspace/app/asm-test/target/classes/com/asm/test/Student.class Last modified 2020-8-26; size 847 bytes MD5 checksum 7fd5f26737b6e1effb65d05864328b9c Compiled from \"Student.java\" public class com.asm.test.Student minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPER Constant pool: #1 = Fieldref #4.#28 // com/asm/test/Student.id:J #2 = Fieldref #4.#29 // com/asm/test/Student.name:Ljava/lang/String; #3 = Methodref #5.#30 // java/lang/Object.\"<init>\":()V #4 = Class #31 // com/asm/test/Student #5 = Class #32 // java/lang/Object #6 = Utf8 id #7 = Utf8 J #8 = Utf8 name #9 = Utf8 Ljava/lang/String; #10 = Utf8 getId #11 = Utf8 ()J #12 = Utf8 Code #13 = Utf8 LineNumberTable #14 = Utf8 LocalVariableTable #15 = Utf8 this #16 = Utf8 Lcom/asm/test/Student; #17 = Utf8 setId #18 = Utf8 (J)V #19 = Utf8 getName #20 = Utf8 ()Ljava/lang/String; #21 = Utf8 setName #22 = Utf8 (Ljava/lang/String;)V #23 = Utf8 <init> #24 = Utf8 ()V #25 = Utf8 (JLjava/lang/String;)V #26 = Utf8 SourceFile #27 = Utf8 Student.java #28 = NameAndType #6:#7 // id:J #29 = NameAndType #8:#9 // name:Ljava/lang/String; #30 = NameAndType #23:#24 // \"<init>\":()V #31 = Utf8 com/asm/test/Student #32 = Utf8 java/lang/Object { public long getId(); descriptor: ()J flags: ACC_PUBLIC Code: stack=2, locals=1, args_size=1 0: aload_0 1: getfield #1 // Field id:J 4: lreturn LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/asm/test/Student; public void setId(long); descriptor: (J)V flags: ACC_PUBLIC Code: stack=3, locals=3, args_size=2 0: aload_0 1: lload_1 2: putfield #1 // Field id:J 5: return LineNumberTable: line 13: 0 line 14: 5 LocalVariableTable: Start Length Slot Name Signature 0 6 0 this Lcom/asm/test/Student; 0 6 1 id J public java.lang.String getName(); descriptor: ()Ljava/lang/String; flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: getfield #2 // Field name:Ljava/lang/String; 4: areturn LineNumberTable: line 17: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/asm/test/Student; public void setName(java.lang.String); descriptor: (Ljava/lang/String;)V flags: ACC_PUBLIC Code: stack=2, locals=2, args_size=2 0: aload_0 1: aload_1 2: putfield #2 // Field name:Ljava/lang/String; 5: return LineNumberTable: line 21: 0 line 22: 5 LocalVariableTable: Start Length Slot Name Signature 0 6 0 this Lcom/asm/test/Student; 0 6 1 name Ljava/lang/String; public com.asm.test.Student(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #3 // Method java/lang/Object.\"<init>\":()V 4: return LineNumberTable: line 24: 0 line 25: 4 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lcom/asm/test/Student; public com.asm.test.Student(long, java.lang.String); descriptor: (JLjava/lang/String;)V flags: ACC_PUBLIC Code: stack=3, locals=4, args_size=3 0: aload_0 1: invokespecial #3 // Method java/lang/Object.\"<init>\":()V 4: aload_0 5: lload_1 6: putfield #1 // Field id:J 9: aload_0 10: aload_3 11: putfield #2 // Field name:Ljava/lang/String; 14: return LineNumberTable: line 27: 0 line 28: 4 line 29: 9 line 30: 14 LocalVariableTable: Start Length Slot Name Signature 0 15 0 this Lcom/asm/test/Student; 0 15 1 id J 0 15 3 name Ljava/lang/String; } SourceFile: \"Student.java\"","title":"\u53cd\u7f16\u8bd1\u6587\u4ef6"},{"location":"java/JVMS/ClassFormat/#_4","text":"ClassFile { u4 magic; u2 minor_version; u2 major_version; u2 constant_pool_count; cp_info constant_pool[constant_pool_count-1]; u2 access_flags; u2 this_class; u2 super_class; u2 interfaces_count; u2 interfaces[interfaces_count]; u2 fields_count; field_info fields[fields_count]; u2 methods_count; method_info methods[methods_count]; u2 attributes_count; attribute_info attributes[attributes_count]; } \u5176\u4e2du1,u2,u4\u5206\u522b\u4ee3\u88681,2,4\u4e2a\u5b57\u8282","title":"\u5b57\u8282\u7801\u6587\u4ef6\u7ed3\u6784"},{"location":"java/JVMS/ClassFormat/#magic","text":"magic\u662f\u5b57\u8282\u7801\u6587\u4ef6\u7684\u9b54\u6cd5\u6570,\u5171\u6709\u56db\u4e2a\u5b57\u8282, CA FE BA BE ,\u8fd9\u662fJava\u5b57\u8282\u7801\u6587\u4ef6\u7684\u56fa\u5b9a\u503c","title":"magic"},{"location":"java/JVMS/ClassFormat/#minor_version","text":"\u5360\u7528\u4e24\u4e2a\u5b57\u8282, \u503c\u4e3a 00 00 ,\u4ee3\u8868\u4e3b\u7248\u672c\u53f7,\u76ee\u524d\u7684java\u7248\u672c\u76f4\u5230jdk11\u90fd\u662f0","title":"minor_version"},{"location":"java/JVMS/ClassFormat/#major_version","text":"\u6b21\u7248\u672c\u53f7 00 34 ,\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u4e3a52,\u4ee3\u8868jdk1.8\u7248\u672c","title":"major_version"},{"location":"java/JVMS/ClassFormat/#constant_pool_count","text":"\u5e38\u91cf\u6c60\u6570\u91cf,\u5360\u7528\u4e24\u4e2a\u5b57\u8282,\u503c\u4e3a 00 21 ,\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u4e3a33,\u4ee3\u8868\u5e38\u91cf\u6c60\u7684\u6570\u91cf\u662f32 + 1","title":"constant_pool_count"},{"location":"java/JVMS/ClassFormat/#cp_infoconstant_pool_info","text":"\u5e38\u91cf\u6c60\u4fe1\u606f\u5b57\u8282\u662f\u4e0d\u56fa\u5b9a\u7684,\u4f46\u4e5f\u6709\u5176\u89c4\u5f8b\u53ef\u5faa,\u603b\u4f53\u7ed3\u6784\u4e3a cp_info { u1 tag; u1 info[]; } 1\u4e2a\u5b57\u8282\u7684tag, info\u6570\u7ec4\u968f\u7740tag\u7684\u4e0d\u540c\u5176\u4fe1\u606f\u4e5f\u4e0d\u540c,\u4e0b\u9762\u4f1a\u4e00\u4e00\u4ecb\u7ecd,\u9996\u5148\u6765\u63a5\u6536tag\u7684\u7c7b\u578b Constant Type Value CONSTANT_Class 7 CONSTANT_Fieldref 9 CONSTANT_Methodref 10 CONSTANT_InterfaceMethodref 11 CONSTANT_String 8 CONSTANT_Integer 3 CONSTANT_Float 4 CONSTANT_Long 5 CONSTANT_Double 6 CONSTANT_NameAndType 12 CONSTANT_Utf8 1 CONSTANT_MethodHandle 15 CONSTANT_MethodType 16 CONSTANT_InvokeDynamic 18 \u4e0b\u9762\u4ecb\u7ecd\u6bcf\u4e00\u4e2atag\u5bf9\u5e94\u7684info\u6570\u7ec4 CONSTANT_Class_info { u1 tag; u2 name_index; # \u6307\u5411\u5e38\u91cf\u6c60\u8868\u4e2d\u7684\u7d22\u5f15 } CONSTANT_Fieldref_info { u1 tag; u2 class_index; //\u6240\u5c5e\u7c7b\u7684\u7d22\u5f15 u2 name_and_type_index; \u540d\u5b57\u548c\u7c7b\u578b\u7684\u7d22\u5f15 } CONSTANT_Methodref_info { u1 tag; u2 class_index; u2 name_and_type_index; } CONSTANT_InterfaceMethodref_info { u1 tag; u2 class_index; u2 name_and_type_index; } CONSTANT_String_info { u1 tag; u2 string_index; //\u5b57\u7b26\u4e32\u7d22\u5f15 } CONSTANT_Integer_info { u1 tag; u4 bytes; } CONSTANT_Float_info { u1 tag; u4 bytes; //\u5360\u7528\u56db\u4e2a\u5b57\u8282\u7684byte\u6570\u7ec4, \u4ee3\u8868\u5176\u771f\u5b9e\u503c } CONSTANT_NameAndType_info { u1 tag; u2 name_index; // \u540d\u79f0\u7d22\u5f15 u2 descriptor_index; // \u63cf\u8ff0\u7b26\u7d22\u5f15 } CONSTANT_Utf8_info { u1 tag; u2 length; u1 bytes[length]; } CONSTANT_MethodHandle_info { u1 tag; u1 reference_kind; u2 reference_index; } CONSTANT_MethodType_info { u1 tag; u2 descriptor_index; } CONSTANT_InvokeDynamic_info { u1 tag; u2 bootstrap_method_attr_index; u2 name_and_type_index; } \u7d27\u968f\u5e38\u91cf\u6c60\u6570\u91cf\u540e\u9762\u7684\u5b57\u8282\u662f 09 , \u4ee3\u8868\u662f\u4e00\u4e2a CONSTANT_Fieldref ,\u5176\u683c\u5f0f\u5305\u542b1\u4e2a\u5b57\u8282\u7684tag, 2\u4e2a\u5b57\u8282\u7684 class_index ( 00 04 )\u548c2\u4e2a\u5b57\u8282\u7684 name_and_type_index ( 00 1C ),\u6240\u4ee5\u5e38\u91cf\u6c60\u8868\u7684\u7b2c\u4e00\u4e2a\u5e38\u91cf\u5206\u6790\u5b8c\u6bd5,\u6b63\u597d\u4e0e\u53cd\u7f16\u8bd1\u6587\u4ef6\u5bf9\u5e94","title":"cp_info(constant_pool_info)"},{"location":"java/JVMS/ClassFormat/#1-fieldref-428-1-428","text":"","title":"1 = Fieldref           #4.#28 // #1 \u4ee3\u8868\u7b2c\u4e00\u4e2a\u7d22\u5f15,#4,#28\u73b0\u5728\u8fd8\u4e0d\u6e05\u695a,\u5148\u4e0d\u8981\u7740\u6025,\u6162\u6162\u7684\u5206\u6790"},{"location":"java/Shiro/Shiro/","text":"Filter\u7b80\u4ecb \u5728\u63a5\u6536Shiro\u4e4b\u524d\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bFilter.\u56e0\u4e3aShiro\u662f\u57fa\u4e8eFilter\u6765\u5b9e\u73b0\u8ba4\u8bc1\u548c\u6743\u9650\u6280\u672f\u3002Filter\u662fJava Web\u4e09\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u53ef\u4ee5\u52a8\u6001\u7684\u62e6\u622a\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u4ee5\u53d8\u6362\u6216\u4f7f\u7528\u5305\u542b\u5728\u8bf7\u6c42\u6216\u54cd\u5e94\u4e2d\u7684\u4fe1\u606f\u3002 graph LR client(\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668) Filter1(\u62e6\u622a\u56681) Filter2(\u62e6\u622a\u56682) Filter3(\u62e6\u622a\u56683) Servlet[\"\u670d\u52a1\u5668\u7aefServlet service(request,response)\"] client-- \u53d1\u9001Http\u8bf7\u6c42!---Filter1 subgraph FilterChain Filter1--> Filter2 --> Filter3 end Filter3 ---|\u5904\u7406Http\u8bf7\u6c42| Servlet web.xml\u914d\u7f6eFilter <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"> <filter> <filter-name>CharsetEncodingFilter</filter-name> <filter-class>com.drp.filter.CharsetEncodingFilter</filter-class> </filter> <filter-mapping><!-- \u6b64filter\u5bf9\u6240\u6709\u7684jsp\u9875\u9762\u90fd\u6709\u8fc7\u6ee4\u6548\u679c --> <filter-name>CharsetEncodingFilter</filter-name> <url-pattern>*.jsp</url-pattern> </filter-mapping> Springboot\u6ce8\u518cFilter @Bean public FilterRegistrationBean filterRegistrationBean() { FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean(); filterRegistrationBean.setFilter(new WebStatFilter()); filterRegistrationBean.addUrlPatterns(\"/*\"); filterRegistrationBean.addInitParameter(\"exclusions\", \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"); filterRegistrationBean.addInitParameter(\"profileEnable\", \"true\"); filterRegistrationBean.addInitParameter(\"principalCookieName\", \"USER_COOKIE\"); filterRegistrationBean.addInitParameter(\"principalSessionName\", \"USER_SESSION\"); return filterRegistrationBean; } Shiro\u7b80\u4ecb Shiro\u662f\u4e00\u4e2a\u5f00\u6e90\u7684java\u5b89\u5168\uff08\u6743\u9650\uff09\u6846\u67b6\uff0c\u5b83\u80fd\u591f\u5b9e\u73b0\u8eab\u4efd\u9a8c\u8bc1\u3001\u6388\u6743\u3001\u52a0\u5bc6\u548c\u4f1a\u8bdd\u7ba1\u7406\u7b49\u529f\u80fd\u3002 Authentication Authorization Cryptography Session Management Authentication(\u8ba4\u8bc1) \u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u4f7f\u7528\u7684\u662fFormAuthenticationFilter\u62e6\u622a\u5668\uff0c\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a classDiagram AuthenticatingFilter <|--FormAuthenticationFilter AuthenticationFilter <|-- AuthenticatingFilter AccessControlFilter <|-- AuthenticationFilter PathMatchingFilter <|-- AccessControlFilter AdviceFilter <|-- PathMatchingFilter OncePerRequestFilter <|-- AdviceFilter NameableFilter <|-- OncePerRequestFilter AbstractFilter <|-- NameableFilter Filter <|-- AbstractFilter class FormAuthenticationFilter { private String usernameParam private passwordParam private rememberMeParam public void setLoginUrl(loginUrl) protected boolean onAccessDenied(req,res) } class AccessControlFilter { +String loginUrl boolean onPreHandle(request, response,mappedValue) abstract boolean isAccessAllowed(request, response, mappedValue) abstract boolean onAccessDenied(request, response) } class PathMatchingFilter { #PatternMatcher pathMatcher #Map<String, Object> appliedPaths boolean preHandle(request, response) boolean isFilterChainContinued(request, response, path, pathConfig) boolean onPreHandle(request, response, mappedValue) } class AuthenticatingFilter { protected boolean executeLogin(req, res) protected abstract AuthenticationToken createToken(req, res) } class AuthenticationFilter { -String successUrl boolean isAccessAllowed(request, response, mappedValue) boolean executeLogin(request, response) } class AbstractFilter { #FilterConfig filterConfig } class NameableFilter { +String name } class OncePerRequestFilter { -boolean enable +void doFilter(request, response, filterChain) } class AdviceFilter { #boolean preHandle(req, res) #void postHandle(req, res) +void doFilterInternal(req, res, chain) } \u767b\u5f55 subject.login(token) org.apache.shiro.subject.support.DelegatingSubject public void login(AuthenticationToken token) throws AuthenticationException { clearRunAsIdentitiesInternal(); Subject subject = securityManager.login(this, token); PrincipalCollection principals; String host = null; if (subject instanceof DelegatingSubject) { DelegatingSubject delegating = (DelegatingSubject) subject; //we have to do this in case there are assumed identities - we don't want to lose the 'real' principals: principals = delegating.principals; host = delegating.host; } else { principals = subject.getPrincipals(); } if (principals == null || principals.isEmpty()) { String msg = \"Principals returned from securityManager.login( token ) returned a null or \" + \"empty value. This value must be non null and populated with one or more elements.\"; throw new IllegalStateException(msg); } this.principals = principals; this.authenticated = true; if (token instanceof HostAuthenticationToken) { host = ((HostAuthenticationToken) token).getHost(); } if (host != null) { this.host = host; } Session session = subject.getSession(false); if (session != null) { this.session = decorate(session); } else { this.session = null; } } org.apache.shiro.mgt.AuthenticatingSecurityManager public Subject login(Subject subject, AuthenticationToken token) throws AuthenticationException { AuthenticationInfo info; try { info = authenticate(token); } catch (AuthenticationException ae) { try { onFailedLogin(token, ae, subject); } catch (Exception e) { if (log.isInfoEnabled()) { log.info(\"onFailedLogin method threw an \" + \"exception. Logging and propagating original AuthenticationException.\", e); } } throw ae; //propagate } Subject loggedIn = createSubject(token, info, subject); onSuccessfulLogin(token, info, loggedIn); return loggedIn; } public AuthenticationInfo authenticate(AuthenticationToken token) throws AuthenticationException { return this.authenticator.authenticate(token); } org.apache.shiro.authc.AbstractAuthenticator public final AuthenticationInfo authenticate(AuthenticationToken token) throws AuthenticationException { if (token == null) { throw new IllegalArgumentException(\"Method argument (authentication token) cannot be null.\"); } log.trace(\"Authentication attempt received for token [{}]\", token); AuthenticationInfo info; try { info = doAuthenticate(token); if (info == null) { String msg = \"No account information found for authentication token [\" + token + \"] by this \" + \"Authenticator instance. Please check that it is configured correctly.\"; throw new AuthenticationException(msg); } } catch (Throwable t) { AuthenticationException ae = null; if (t instanceof AuthenticationException) { ae = (AuthenticationException) t; } if (ae == null) { //Exception thrown was not an expected AuthenticationException. Therefore it is probably a little more //severe or unexpected. So, wrap in an AuthenticationException, log to warn, and propagate: String msg = \"Authentication failed for token submission [\" + token + \"]. Possible unexpected \" + \"error? (Typical or expected login exceptions should extend from AuthenticationException).\"; ae = new AuthenticationException(msg, t); if (log.isWarnEnabled()) log.warn(msg, t); } try { notifyFailure(token, ae); } catch (Throwable t2) { if (log.isWarnEnabled()) { String msg = \"Unable to send notification for failed authentication attempt - listener error?. \" + \"Please check your AuthenticationListener implementation(s). Logging sending exception \" + \"and propagating original AuthenticationException instead...\"; log.warn(msg, t2); } } throw ae; } log.debug(\"Authentication successful for token [{}]. Returned account [{}]\", token, info); notifySuccess(token, info); return info; } org.apache.shiro.authc.pam.ModularRealmAuthenticator protected AuthenticationInfo doAuthenticate(AuthenticationToken authenticationToken) throws AuthenticationException { assertRealmsConfigured(); Collection<Realm> realms = getRealms(); if (realms.size() == 1) { return doSingleRealmAuthentication(realms.iterator().next(), authenticationToken); } else { return doMultiRealmAuthentication(realms, authenticationToken); } } protected AuthenticationInfo doMultiRealmAuthentication(Collection<Realm> realms, AuthenticationToken token) { AuthenticationStrategy strategy = getAuthenticationStrategy(); AuthenticationInfo aggregate = strategy.beforeAllAttempts(realms, token); if (log.isTraceEnabled()) { log.trace(\"Iterating through {} realms for PAM authentication\", realms.size()); } for (Realm realm : realms) { aggregate = strategy.beforeAttempt(realm, token, aggregate); if (realm.supports(token)) { log.trace(\"Attempting to authenticate token [{}] using realm [{}]\", token, realm); AuthenticationInfo info = null; Throwable t = null; try { info = realm.getAuthenticationInfo(token); } catch (Throwable throwable) { t = throwable; if (log.isDebugEnabled()) { String msg = \"Realm [\" + realm + \"] threw an exception during a multi-realm authentication attempt:\"; log.debug(msg, t); } } aggregate = strategy.afterAttempt(realm, token, info, aggregate, t); } else { log.debug(\"Realm [{}] does not support token {}. Skipping realm.\", realm, token); } } aggregate = strategy.afterAllAttempts(token, aggregate); return aggregate; } org.apache.shiro.realm.AuthenticatingRealm public final AuthenticationInfo getAuthenticationInfo(AuthenticationToken token) throws AuthenticationException { AuthenticationInfo info = getCachedAuthenticationInfo(token); if (info == null) { //otherwise not cached, perform the lookup: info = doGetAuthenticationInfo(token); log.debug(\"Looked up AuthenticationInfo [{}] from doGetAuthenticationInfo\", info); if (token != null && info != null) { cacheAuthenticationInfoIfPossible(token, info); } } else { log.debug(\"Using cached authentication info [{}] to perform credentials matching.\", info); } if (info != null) { assertCredentialsMatch(token, info); } else { log.debug(\"No AuthenticationInfo found for submitted AuthenticationToken [{}]. Returning null.\", token); } return info; } group.rober.auth.shiro.DatabaseRealm protected AuthenticationInfo doGetAuthenticationInfo( AuthenticationToken authenticationToken) throws AuthenticationException { //UsernamePasswordToken\u5bf9\u8c61\u7528\u6765\u5b58\u653e\u63d0\u4ea4\u7684\u767b\u5f55\u4fe1\u606f UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken; //\u67e5\u51fa\u662f\u5426\u6709\u6b64\u7528\u6237 User user = authService.getUserByCode(token.getUsername()); //userName\u662fshiro\u4e2d\u7684\u6982\u5ff5,\u7b49\u540c\u4e8e\u6211\u4eec\u7684userCode if (user == null) { setLoginFailMsg(ACOUNT_PWD_INCORRECT_MSG); throw new UnknownAccountException(\"no account code: \" + token.getUsername());//\u6ca1\u627e\u5230\u5e10\u53f7 } if(StringKit.isEmpty(user.getStatus())||\"1\".equals(user.getStatus())){ user.setStatus(AccountStatus.Using.toString()); } if (!userAccountVerifiers.isEmpty()) { for (UserAccountVerifier userAccountVerifier : userAccountVerifiers) { try { userAccountVerifier.verifyAccount(user); } catch (AuthenticationException ex) { setLoginFailMsg(ex.getMessage()); throw ex; } } } SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(user, user.getPassword(), getName()); if (authProperties.isHashSalted() && StringKit.isNoneBlank(user.getHashSalt())) { authenticationInfo.setCredentialsSalt(new SimpleByteSource(Base64.getDecoder().decode(user.getHashSalt()))); } return authenticationInfo; } protected void assertCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) throws AuthenticationException { CredentialsMatcher cm = getCredentialsMatcher(); if (cm != null) { if (!cm.doCredentialsMatch(token, info)) { setLoginFailMsg(ACOUNT_PWD_INCORRECT_MSG); throw new IncorrectCredentialsWithPrincipalException(info.getPrincipals(), ACOUNT_PWD_INCORRECT_MSG); } } super.assertCredentialsMatch(token, info); } group.rober.auth.controller.LoginAndOffRestController public Object login(HttpServletRequest request) throws Exception { Subject subject = SecurityUtils.getSubject(); if (subject.isAuthenticated()) { //\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u7684\u7cfb\u7edf\u8bed\u8a00 subject.getSession().setAttribute(AuthConsts.LANGUAGE,WebUtils.getCleanParam(request, \"language\")); User currentUser = (User) ((WebSubject) subject).getServletRequest().getAttribute(AuthConsts.SESSION_USER); Serializable sessionToken = authProperties.isEnableJwtReplaceSession() ? (String) request.getAttribute(AuthConsts.JWT_ATTRIBUTE) : subject.getSession().getId(); return new LoginResponse(LoginResponse.getSUCCESS(), sessionToken, currentUser); } else { return LoginResponse.fail((String)request.getAttribute(LOGIN_FAIL_MSG_ATTRIBUTE_NAME)); } }","title":"Filter\u7b80\u4ecb"},{"location":"java/Shiro/Shiro/#filter","text":"\u5728\u63a5\u6536Shiro\u4e4b\u524d\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bFilter.\u56e0\u4e3aShiro\u662f\u57fa\u4e8eFilter\u6765\u5b9e\u73b0\u8ba4\u8bc1\u548c\u6743\u9650\u6280\u672f\u3002Filter\u662fJava Web\u4e09\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u53ef\u4ee5\u52a8\u6001\u7684\u62e6\u622a\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u4ee5\u53d8\u6362\u6216\u4f7f\u7528\u5305\u542b\u5728\u8bf7\u6c42\u6216\u54cd\u5e94\u4e2d\u7684\u4fe1\u606f\u3002 graph LR client(\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668) Filter1(\u62e6\u622a\u56681) Filter2(\u62e6\u622a\u56682) Filter3(\u62e6\u622a\u56683) Servlet[\"\u670d\u52a1\u5668\u7aefServlet service(request,response)\"] client-- \u53d1\u9001Http\u8bf7\u6c42!---Filter1 subgraph FilterChain Filter1--> Filter2 --> Filter3 end Filter3 ---|\u5904\u7406Http\u8bf7\u6c42| Servlet","title":"Filter\u7b80\u4ecb"},{"location":"java/Shiro/Shiro/#webxmlfilter","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"> <filter> <filter-name>CharsetEncodingFilter</filter-name> <filter-class>com.drp.filter.CharsetEncodingFilter</filter-class> </filter> <filter-mapping><!-- \u6b64filter\u5bf9\u6240\u6709\u7684jsp\u9875\u9762\u90fd\u6709\u8fc7\u6ee4\u6548\u679c --> <filter-name>CharsetEncodingFilter</filter-name> <url-pattern>*.jsp</url-pattern> </filter-mapping>","title":"web.xml\u914d\u7f6eFilter"},{"location":"java/Shiro/Shiro/#springbootfilter","text":"@Bean public FilterRegistrationBean filterRegistrationBean() { FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean(); filterRegistrationBean.setFilter(new WebStatFilter()); filterRegistrationBean.addUrlPatterns(\"/*\"); filterRegistrationBean.addInitParameter(\"exclusions\", \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"); filterRegistrationBean.addInitParameter(\"profileEnable\", \"true\"); filterRegistrationBean.addInitParameter(\"principalCookieName\", \"USER_COOKIE\"); filterRegistrationBean.addInitParameter(\"principalSessionName\", \"USER_SESSION\"); return filterRegistrationBean; }","title":"Springboot\u6ce8\u518cFilter"},{"location":"java/Shiro/Shiro/#shiro","text":"Shiro\u662f\u4e00\u4e2a\u5f00\u6e90\u7684java\u5b89\u5168\uff08\u6743\u9650\uff09\u6846\u67b6\uff0c\u5b83\u80fd\u591f\u5b9e\u73b0\u8eab\u4efd\u9a8c\u8bc1\u3001\u6388\u6743\u3001\u52a0\u5bc6\u548c\u4f1a\u8bdd\u7ba1\u7406\u7b49\u529f\u80fd\u3002","title":"Shiro\u7b80\u4ecb"},{"location":"java/Shiro/Shiro/#authentication","text":"","title":"Authentication"},{"location":"java/Shiro/Shiro/#authorization","text":"","title":"Authorization"},{"location":"java/Shiro/Shiro/#cryptography","text":"","title":"Cryptography"},{"location":"java/Shiro/Shiro/#session-management","text":"","title":"Session Management"},{"location":"java/Shiro/Shiro/#authentication_1","text":"\u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u4f7f\u7528\u7684\u662fFormAuthenticationFilter\u62e6\u622a\u5668\uff0c\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a classDiagram AuthenticatingFilter <|--FormAuthenticationFilter AuthenticationFilter <|-- AuthenticatingFilter AccessControlFilter <|-- AuthenticationFilter PathMatchingFilter <|-- AccessControlFilter AdviceFilter <|-- PathMatchingFilter OncePerRequestFilter <|-- AdviceFilter NameableFilter <|-- OncePerRequestFilter AbstractFilter <|-- NameableFilter Filter <|-- AbstractFilter class FormAuthenticationFilter { private String usernameParam private passwordParam private rememberMeParam public void setLoginUrl(loginUrl) protected boolean onAccessDenied(req,res) } class AccessControlFilter { +String loginUrl boolean onPreHandle(request, response,mappedValue) abstract boolean isAccessAllowed(request, response, mappedValue) abstract boolean onAccessDenied(request, response) } class PathMatchingFilter { #PatternMatcher pathMatcher #Map<String, Object> appliedPaths boolean preHandle(request, response) boolean isFilterChainContinued(request, response, path, pathConfig) boolean onPreHandle(request, response, mappedValue) } class AuthenticatingFilter { protected boolean executeLogin(req, res) protected abstract AuthenticationToken createToken(req, res) } class AuthenticationFilter { -String successUrl boolean isAccessAllowed(request, response, mappedValue) boolean executeLogin(request, response) } class AbstractFilter { #FilterConfig filterConfig } class NameableFilter { +String name } class OncePerRequestFilter { -boolean enable +void doFilter(request, response, filterChain) } class AdviceFilter { #boolean preHandle(req, res) #void postHandle(req, res) +void doFilterInternal(req, res, chain) }","title":"Authentication(\u8ba4\u8bc1)"},{"location":"java/Shiro/Shiro/#_1","text":"subject.login(token) org.apache.shiro.subject.support.DelegatingSubject public void login(AuthenticationToken token) throws AuthenticationException { clearRunAsIdentitiesInternal(); Subject subject = securityManager.login(this, token); PrincipalCollection principals; String host = null; if (subject instanceof DelegatingSubject) { DelegatingSubject delegating = (DelegatingSubject) subject; //we have to do this in case there are assumed identities - we don't want to lose the 'real' principals: principals = delegating.principals; host = delegating.host; } else { principals = subject.getPrincipals(); } if (principals == null || principals.isEmpty()) { String msg = \"Principals returned from securityManager.login( token ) returned a null or \" + \"empty value. This value must be non null and populated with one or more elements.\"; throw new IllegalStateException(msg); } this.principals = principals; this.authenticated = true; if (token instanceof HostAuthenticationToken) { host = ((HostAuthenticationToken) token).getHost(); } if (host != null) { this.host = host; } Session session = subject.getSession(false); if (session != null) { this.session = decorate(session); } else { this.session = null; } } org.apache.shiro.mgt.AuthenticatingSecurityManager public Subject login(Subject subject, AuthenticationToken token) throws AuthenticationException { AuthenticationInfo info; try { info = authenticate(token); } catch (AuthenticationException ae) { try { onFailedLogin(token, ae, subject); } catch (Exception e) { if (log.isInfoEnabled()) { log.info(\"onFailedLogin method threw an \" + \"exception. Logging and propagating original AuthenticationException.\", e); } } throw ae; //propagate } Subject loggedIn = createSubject(token, info, subject); onSuccessfulLogin(token, info, loggedIn); return loggedIn; } public AuthenticationInfo authenticate(AuthenticationToken token) throws AuthenticationException { return this.authenticator.authenticate(token); } org.apache.shiro.authc.AbstractAuthenticator public final AuthenticationInfo authenticate(AuthenticationToken token) throws AuthenticationException { if (token == null) { throw new IllegalArgumentException(\"Method argument (authentication token) cannot be null.\"); } log.trace(\"Authentication attempt received for token [{}]\", token); AuthenticationInfo info; try { info = doAuthenticate(token); if (info == null) { String msg = \"No account information found for authentication token [\" + token + \"] by this \" + \"Authenticator instance. Please check that it is configured correctly.\"; throw new AuthenticationException(msg); } } catch (Throwable t) { AuthenticationException ae = null; if (t instanceof AuthenticationException) { ae = (AuthenticationException) t; } if (ae == null) { //Exception thrown was not an expected AuthenticationException. Therefore it is probably a little more //severe or unexpected. So, wrap in an AuthenticationException, log to warn, and propagate: String msg = \"Authentication failed for token submission [\" + token + \"]. Possible unexpected \" + \"error? (Typical or expected login exceptions should extend from AuthenticationException).\"; ae = new AuthenticationException(msg, t); if (log.isWarnEnabled()) log.warn(msg, t); } try { notifyFailure(token, ae); } catch (Throwable t2) { if (log.isWarnEnabled()) { String msg = \"Unable to send notification for failed authentication attempt - listener error?. \" + \"Please check your AuthenticationListener implementation(s). Logging sending exception \" + \"and propagating original AuthenticationException instead...\"; log.warn(msg, t2); } } throw ae; } log.debug(\"Authentication successful for token [{}]. Returned account [{}]\", token, info); notifySuccess(token, info); return info; } org.apache.shiro.authc.pam.ModularRealmAuthenticator protected AuthenticationInfo doAuthenticate(AuthenticationToken authenticationToken) throws AuthenticationException { assertRealmsConfigured(); Collection<Realm> realms = getRealms(); if (realms.size() == 1) { return doSingleRealmAuthentication(realms.iterator().next(), authenticationToken); } else { return doMultiRealmAuthentication(realms, authenticationToken); } } protected AuthenticationInfo doMultiRealmAuthentication(Collection<Realm> realms, AuthenticationToken token) { AuthenticationStrategy strategy = getAuthenticationStrategy(); AuthenticationInfo aggregate = strategy.beforeAllAttempts(realms, token); if (log.isTraceEnabled()) { log.trace(\"Iterating through {} realms for PAM authentication\", realms.size()); } for (Realm realm : realms) { aggregate = strategy.beforeAttempt(realm, token, aggregate); if (realm.supports(token)) { log.trace(\"Attempting to authenticate token [{}] using realm [{}]\", token, realm); AuthenticationInfo info = null; Throwable t = null; try { info = realm.getAuthenticationInfo(token); } catch (Throwable throwable) { t = throwable; if (log.isDebugEnabled()) { String msg = \"Realm [\" + realm + \"] threw an exception during a multi-realm authentication attempt:\"; log.debug(msg, t); } } aggregate = strategy.afterAttempt(realm, token, info, aggregate, t); } else { log.debug(\"Realm [{}] does not support token {}. Skipping realm.\", realm, token); } } aggregate = strategy.afterAllAttempts(token, aggregate); return aggregate; } org.apache.shiro.realm.AuthenticatingRealm public final AuthenticationInfo getAuthenticationInfo(AuthenticationToken token) throws AuthenticationException { AuthenticationInfo info = getCachedAuthenticationInfo(token); if (info == null) { //otherwise not cached, perform the lookup: info = doGetAuthenticationInfo(token); log.debug(\"Looked up AuthenticationInfo [{}] from doGetAuthenticationInfo\", info); if (token != null && info != null) { cacheAuthenticationInfoIfPossible(token, info); } } else { log.debug(\"Using cached authentication info [{}] to perform credentials matching.\", info); } if (info != null) { assertCredentialsMatch(token, info); } else { log.debug(\"No AuthenticationInfo found for submitted AuthenticationToken [{}]. Returning null.\", token); } return info; } group.rober.auth.shiro.DatabaseRealm protected AuthenticationInfo doGetAuthenticationInfo( AuthenticationToken authenticationToken) throws AuthenticationException { //UsernamePasswordToken\u5bf9\u8c61\u7528\u6765\u5b58\u653e\u63d0\u4ea4\u7684\u767b\u5f55\u4fe1\u606f UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken; //\u67e5\u51fa\u662f\u5426\u6709\u6b64\u7528\u6237 User user = authService.getUserByCode(token.getUsername()); //userName\u662fshiro\u4e2d\u7684\u6982\u5ff5,\u7b49\u540c\u4e8e\u6211\u4eec\u7684userCode if (user == null) { setLoginFailMsg(ACOUNT_PWD_INCORRECT_MSG); throw new UnknownAccountException(\"no account code: \" + token.getUsername());//\u6ca1\u627e\u5230\u5e10\u53f7 } if(StringKit.isEmpty(user.getStatus())||\"1\".equals(user.getStatus())){ user.setStatus(AccountStatus.Using.toString()); } if (!userAccountVerifiers.isEmpty()) { for (UserAccountVerifier userAccountVerifier : userAccountVerifiers) { try { userAccountVerifier.verifyAccount(user); } catch (AuthenticationException ex) { setLoginFailMsg(ex.getMessage()); throw ex; } } } SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(user, user.getPassword(), getName()); if (authProperties.isHashSalted() && StringKit.isNoneBlank(user.getHashSalt())) { authenticationInfo.setCredentialsSalt(new SimpleByteSource(Base64.getDecoder().decode(user.getHashSalt()))); } return authenticationInfo; } protected void assertCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) throws AuthenticationException { CredentialsMatcher cm = getCredentialsMatcher(); if (cm != null) { if (!cm.doCredentialsMatch(token, info)) { setLoginFailMsg(ACOUNT_PWD_INCORRECT_MSG); throw new IncorrectCredentialsWithPrincipalException(info.getPrincipals(), ACOUNT_PWD_INCORRECT_MSG); } } super.assertCredentialsMatch(token, info); } group.rober.auth.controller.LoginAndOffRestController public Object login(HttpServletRequest request) throws Exception { Subject subject = SecurityUtils.getSubject(); if (subject.isAuthenticated()) { //\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u7684\u7cfb\u7edf\u8bed\u8a00 subject.getSession().setAttribute(AuthConsts.LANGUAGE,WebUtils.getCleanParam(request, \"language\")); User currentUser = (User) ((WebSubject) subject).getServletRequest().getAttribute(AuthConsts.SESSION_USER); Serializable sessionToken = authProperties.isEnableJwtReplaceSession() ? (String) request.getAttribute(AuthConsts.JWT_ATTRIBUTE) : subject.getSession().getId(); return new LoginResponse(LoginResponse.getSUCCESS(), sessionToken, currentUser); } else { return LoginResponse.fail((String)request.getAttribute(LOGIN_FAIL_MSG_ATTRIBUTE_NAME)); } }","title":"\u767b\u5f55"},{"location":"java/Spring/AliasFor/","text":"\u5c5e\u6027\u522b\u540dAliasFor @Nullable /** * \u4f20\u5165\u6ce8\u89e3\u65b9\u6cd5,\u8be5\u65b9\u6cd5\u5982\u679c\u6709AliasFor\u6ce8\u89e3,\u5219\u8fd4\u56deAliasDescriptor\u5bf9\u8c61 */ public static AliasDescriptor from(Method attribute) { AliasDescriptor descriptor = aliasDescriptorCache.get(attribute); if (descriptor != null) { return descriptor; } AliasFor aliasFor = attribute.getAnnotation(AliasFor.class); if (aliasFor == null) { return null; } descriptor = new AliasDescriptor(attribute, aliasFor); descriptor.validate(); aliasDescriptorCache.put(attribute, descriptor); return descriptor; }","title":"AliasFor"},{"location":"oracle/\u70ed\u5907\u4efd/","text":"Oracle\u6570\u636e\u70ed\u5907\u4efd \u5b9a\u4e49: \u662f\u6307oracle\u6570\u636e\u5e93\u5904\u4e8eopen\u72b6\u6001\u4e0b,\u53ef\u4ee5\u5bf9 \u6570\u636e\u6587\u4ef6,\u63a7\u5236\u6587\u4ef6,\u53c2\u6570\u6587\u4ef6,\u5bc6\u7801\u6587\u4ef6\u7b49\u4e00\u7cfb\u5217\u8fdb\u884c\u5907\u4efd\u64cd\u4f5c,\u8981\u6c42\u662f\u6570\u636e\u5904\u4e8e\u5f52\u6863\u6a21\u5f0f( alter database archive ),\u5728\u70ed\u5907\u65f6\uff0c\u662f\u53ef\u4ee5\u8fdb\u884cDML\u64cd\u4f5c\u7684. \u70ed\u672c\u5206\u65b9\u5f0f \u57fa\u4e8e\u8868\u7a7a\u95f4\u7684\u5907\u4efd SQL> select file_id,tablespace_name,status from dba_data_files; 5,/home/oracle/app/oracle/oradata/helowin/example01.dbf,EXAMPLE,AVAILABLE 4,/home/oracle/app/oracle/oradata/helowin/users01.dbf,USERS,AVAILABLE 3,/home/oracle/app/oracle/oradata/helowin/undotbs01.dbf,UNDOTBS1,AVAILABLE 2,/home/oracle/app/oracle/oradata/helowin/sysaux01.dbf,SYSAUX,AVAILABLE 1,/home/oracle/app/oracle/oradata/helowin/system01.dbf,SYSTEM,AVAILABLE SQL> --\u8bbe\u7f6e\u5907\u4efd\u72b6\u6001 SQL> alter tablespace EXAMPLE begin backup; Tablespace altered SQL> -- \u5f00\u59cb\u5907\u4efd SQL> host cp /home/oracle/app/oracle/oradata/helowin/example01.dbf /u03/backup/hotbak SQL> -- \u7ed3\u675f\u5907\u4efd\u72b6\u6001 SQL> alter tablespace EXAMPLE end backup; \u63a7\u5236\u6587\u4ef6\u7684\u5907\u4efd: SQL> alter database backup controlfile to '/u03/backup/hotbak/control01.ctl'; \u53c2\u6570\u6587\u4ef6\u7684\u5907\u4efd SQL> create pfile = '/u03/backup/hotbak/initdbsrv1.ora' from spfile;","title":"Oracle\u6570\u636e\u70ed\u5907\u4efd"},{"location":"oracle/\u70ed\u5907\u4efd/#oracle","text":"\u5b9a\u4e49: \u662f\u6307oracle\u6570\u636e\u5e93\u5904\u4e8eopen\u72b6\u6001\u4e0b,\u53ef\u4ee5\u5bf9 \u6570\u636e\u6587\u4ef6,\u63a7\u5236\u6587\u4ef6,\u53c2\u6570\u6587\u4ef6,\u5bc6\u7801\u6587\u4ef6\u7b49\u4e00\u7cfb\u5217\u8fdb\u884c\u5907\u4efd\u64cd\u4f5c,\u8981\u6c42\u662f\u6570\u636e\u5904\u4e8e\u5f52\u6863\u6a21\u5f0f( alter database archive ),\u5728\u70ed\u5907\u65f6\uff0c\u662f\u53ef\u4ee5\u8fdb\u884cDML\u64cd\u4f5c\u7684.","title":"Oracle\u6570\u636e\u70ed\u5907\u4efd"},{"location":"oracle/\u70ed\u5907\u4efd/#_1","text":"","title":"\u70ed\u672c\u5206\u65b9\u5f0f"},{"location":"oracle/\u70ed\u5907\u4efd/#_2","text":"SQL> select file_id,tablespace_name,status from dba_data_files; 5,/home/oracle/app/oracle/oradata/helowin/example01.dbf,EXAMPLE,AVAILABLE 4,/home/oracle/app/oracle/oradata/helowin/users01.dbf,USERS,AVAILABLE 3,/home/oracle/app/oracle/oradata/helowin/undotbs01.dbf,UNDOTBS1,AVAILABLE 2,/home/oracle/app/oracle/oradata/helowin/sysaux01.dbf,SYSAUX,AVAILABLE 1,/home/oracle/app/oracle/oradata/helowin/system01.dbf,SYSTEM,AVAILABLE SQL> --\u8bbe\u7f6e\u5907\u4efd\u72b6\u6001 SQL> alter tablespace EXAMPLE begin backup; Tablespace altered SQL> -- \u5f00\u59cb\u5907\u4efd SQL> host cp /home/oracle/app/oracle/oradata/helowin/example01.dbf /u03/backup/hotbak SQL> -- \u7ed3\u675f\u5907\u4efd\u72b6\u6001 SQL> alter tablespace EXAMPLE end backup;","title":"\u57fa\u4e8e\u8868\u7a7a\u95f4\u7684\u5907\u4efd"},{"location":"oracle/\u70ed\u5907\u4efd/#_3","text":"SQL> alter database backup controlfile to '/u03/backup/hotbak/control01.ctl';","title":"\u63a7\u5236\u6587\u4ef6\u7684\u5907\u4efd:"},{"location":"oracle/\u70ed\u5907\u4efd/#_4","text":"SQL> create pfile = '/u03/backup/hotbak/initdbsrv1.ora' from spfile;","title":"\u53c2\u6570\u6587\u4ef6\u7684\u5907\u4efd"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/","text":"\u5143\u7ec4\u4e0e\u5217\u8868 \u5e8f\u5217\u6982\u8ff0 Python\u4e2d\u6700\u57fa\u672c\u7684\u6570\u636e\u7ed3\u6784\u662f\u5e8f\u5217\uff0c\u5728\u591a\u79cd\u5e8f\u5217\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u4e24\u79cd\u5206\u522b\u662f \u5217\u8868 \u548c \u5143\u7ec4 \uff0c\u53e6\u5916\u4e00\u79cd\u91cd\u8981\u7684\u5e8f\u5217\u662f\u5b57\u7b26\u4e32\u3002\u5728\u5217\u8868\u4e2d\u8868\u793a\u5e8f\u5217\u7684\u65b9\u5f0f\u662f\u4e2d\u62ec\u53f7 [] \uff0c\u5404\u4e2a\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00,\u5982\u4e0b\u6240\u793a\uff1a \u200b edward = ['Edward Gumby', 42] \u901a\u7528\u7684\u5e8f\u5217\u64cd\u4f5c \u7d22\u5f15 \u5e8f\u5217\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u6709\u7f16\u53f7\u2014\u2014\u4ece0\u5f00\u59cb\u9012\u589e\uff0c\u4f8b\u5982\uff1a >>> greeting = 'Hello' >>> greeting[0] 'H' \u5728python\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u83b7\u53d6\u5143\u7d20\uff0c\u5982\u679c\u7d22\u5f15\u503c\u8d85\u51fa\u4e86\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5219\u4f1a\u62a5\u9519 IndexError: list index out of range \uff0c\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0cpython\u53ef\u4ee5\u4f7f\u7528\u8d1f\u7d22\u5f15\uff0c\u5373\u4ece\u4ece\u53f3\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u5f80\u5de6\u8ba1\u6570\uff0c\u5982\u4e0b\uff1a >>> greeting[-1] 'o' \u5207\u7247 \u5728\u83b7\u53d6\u5355\u4e2a\u5143\u7d20\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u4f46\u662f\u5982\u679c\u83b7\u53d6\u6307\u5b9a\u8303\u56f4\u7684\u591a\u4e2a\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u6765\u5b9e\u73b0\uff0c\u53ca\u4e24\u4e2a\u7d22\u5f15\uff0c\u4e2d\u95f4\u7528\u5192\u53f7\u9694\u5f00\u3002 >>> tag = '<a href=\"http://www.python.org\">Python web site</a>' >>> tag[9:30] 'http://www.python.org' \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u6253\u5370\u7684\u8303\u56f4\u662f\u5305\u542b\u7b2c\u4e00\u4e2a\u7d22\u5f15\u503c 9 \u5bf9\u5e94\u7684 h ,\u4f46\u662f\u4e0d\u5305\u542b 30 \u5bf9\u5e94\u7684\u53cc\u5f15\u53f7\uff08 \u201d \uff09\uff0c \u4f46\u662f\u5fc5\u987b\u662f\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u4f4d\u7f6e\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7684\u4f4d\u7f6e\u3002\u5426\u5219\u4e3a\u7a7a \u3002 >>> tag[30:9] '' \u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5207\u7247\u4e2d\u4f7f\u7528\u8d1f\u6570\u7d22\u5f15\u3002\u7cfb\u7edf\u5c06\u4f1a\u4ece\u5de6\u81f3\u53f3\u5339\u914d\uff0c\u7b2c\u4e00\u4e2a\u7d22\u5f15\u5fc5\u987b\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u5339\u914d\u5230\u5185\u5bb9\u3002 >>> tag[-19:-4] 'Python web site' >>> tag[-4:-19] '' \u6211\u4eec\u4e5f\u53ef\u4ee5\u6b63\u8d1f\u7d22\u5f15\u540c\u65f6\u4f7f\u7528\uff1a >>> tag[32:-4] 'Python web site' \u4e0e\u7d22\u5f15\u4e0d\u540c\u7684\u662f\uff0c\u5207\u7247\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u5982\u679c\u8d85\u51fa\u4e86\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u662f\u4e0d\u4f1a\u62a5\u9519\u4e86\uff0c\u53ea\u4f1a\u5339\u914d\u5230\u6700\u540e\u4e00\u4e2a\u3002 >>> numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] >>> numbers[9, 100] [9, 10] \u5982\u679c\u4f60\u53ea\u60f3\u4ece\u5730\u4e00\u4e2a\u5143\u7d20\u5339\u914d\u5230\u67d0\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6216\u8005\u4ece\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u5339\u914d\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8be5\u7d22\u5f15\u4f4d\u7f6e\u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u60f3\u590d\u5236\u6574\u4e2a\u5e8f\u5217\uff0c\u5219\u4e24\u4e2a\u7d22\u5f15\u90fd\u53ef\u4ee5\u7701\u7565 >>> numbers[8:] [9, 10] >>> numbers[:2] [0, 1] >>> numbers[:] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] \u6267\u884c\u5207\u7247\u64cd\u4f5c\u65f6,\u4f60\u663e\u5f0f\u6216\u9690\u5f0f\u5730\u6307\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9,\u4f46\u901a\u5e38\u7701\u7565\u53e6\u4e00\u4e2a\u53c2\u6570,\u5373\u6b65\u957f\u3002\u5728\u666e\u901a\u5207\u7247\u4e2d,\u6b65\u957f\u4e3a1\u3002\u8fd9\u610f\u5473\u7740\u4ece\u4e00\u4e2a\u5143\u7d20\u79fb\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20,\u56e0\u6b64\u5207\u7247\u5305\u542b\u8d77\u70b9\u548c\u7ec8\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u3002 >>> numbers[0:10:1] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] >>> numbers[0:10:2] [1, 3, 5, 7, 9] \u5982\u679c\u6307\u5b9a\u4e86\u6b65\u957f\u4e3a\u8d1f\u503c\uff0c\u5219\u5e8f\u5217\u7684\u5339\u914d\u903b\u8f91\u4e0d\u518d\u662f\u4ece\u5de6\u81f3\u53f3\uff0c\u800c\u662f\u4ece\u53f3\u81f3\u5de6\u3002\u800c\u4e14\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u5b9e\u9645\u4f4d\u7f6e\u5fc5\u987b\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u65e0\u5219\u65e0\u6cd5\u5339\u914d\u5230\u4efb\u4f55\u5185\u5bb9 >>> numbers[8:3:-1] [9, 8, 7, 6, 5] >>> numbers[10:0:-2] [10, 8, 6, 4, 2] >>> numbers[0:10:-2] [] \u5e8f\u5217\u76f8\u52a0 \u4e24\u4e2a\u5e8f\u5217\u4e4b\u95f4\u662f\u53ef\u4ee5\u76f8\u52a0\uff0c\u53ef\u89c6\u4e3a\u5408\u5e76\uff0c\u4f46\u4e0d\u540c\u7c7b\u578b\u95f4\u7684\u5e8f\u5217\u4e0d\u53ef\u4ee5\u76f8\u52a0 >>> [1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] >>> 'Hello,' + 'world!' 'Hello,world!' >>> [1, 2, 3] + 'world!' File \"<stdin>\", line 1 [1, 2, 3] + 'world!' ^ IndentationError: unexpected indent \u4e58\u6cd5 \u5c06\u5e8f\u5217\u4e0e\u6570x\u76f8\u4e58\u65f6,\u5c06\u91cd\u590d\u8fd9\u4e2a\u5e8f\u5217x\u6b21\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u5e8f\u5217: >>> 'python' * 5 'pythonpythonpythonpythonpython' >>> [42] * 10 [42, 42, 42, 42, 42, 42, 42, 42, 42, 42] \u6210\u5458\u8d44\u683c \u8981\u68c0\u67e5\u7279\u5b9a\u7684\u503c\u662f\u5426\u5305\u542b\u5728\u5e8f\u5217\u4e2d,\u53ef\u4f7f\u7528\u8fd0\u7b97\u7b26in\u3002\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4e0e\u524d\u9762\u8ba8\u8bba\u7684\u8fd0\u7b97\u7b26(\u5982\u4e58\u6cd5\u6216\u52a0\u6cd5\u8fd0\u7b97\u7b26)\u7a0d\u6709\u4e0d\u540c\u3002\u5b83\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u6307\u5b9a\u7684\u6761\u4ef6,\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u503c:\u6ee1\u8db3\u65f6\u8fd4\u56deTrue,\u4e0d\u6ee1\u8db3\u65f6\u8fd4\u56deFalse\u3002\u8fd9\u6837\u7684\u8fd0\u7b97\u7b26\u79f0\u4e3a \u5e03\u5c14\u8fd0\u7b97\u7b26 ,\u800c\u524d\u8ff0\u771f\u503c\u79f0\u4e3a\u5e03\u5c14\u503c\u3002 >>> permissions = 'rw' >>> 'w' in permissions True >>> 'x' in permissions False \u5217\u8868 \u4e00\u3001\u51fd\u6570list list\u51fd\u6570\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5217\u8868 >>> list('Hello') ['H', 'e', 'l', 'l', 'o'] \u540c\u6837\u4e5f\u53ef\u4ee5\u5c06\u5b57\u7b26\u5217\u8868\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c \u2018\u2019.join(somelist) \u4e8c\u3001\u57fa\u672c\u7684\u5217\u8868\u64cd\u4f5c 1.\u4fee\u6539\u5217\u8868\uff1a\u7ed9\u5143\u7d20\u8d4b\u503c \u7ed9\u5217\u8868\u4e2d\u7684\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u8d4b\u503c\uff0c \u53d8\u91cf\u540d[\u7d22\u5f15\u503c]=\u5b9e\u9645\u503c >>> x = [1, 1, 1] >>> x[1] = 2 >>> x [1, 2, 1] 2.\u5220\u9664\u5143\u7d20 \u4ece\u5217\u8868\u4e2d\u5220\u9664\u5143\u7d20\u4e5f\u5f88\u5bb9\u6613,\u53ea\u9700\u4f7f\u7528del\u8bed\u53e5\u5373\u53ef\u3002 >>> names = ['Alice', 'Beth', 'Cecil', 'Dee-Dee', 'Earl'] >>> del names[2] >>> names ['Alice', 'Beth', 'Dee-Dee', 'Earl'] \u4e09\u3001\u5217\u8868\u65b9\u6cd5 1. append \u65b9\u6cd5append\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u9644\u52a0\u5230\u5217\u8868\u672b\u5c3e\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u8be5\u65b9\u6cd5\u662f\u4fee\u6539\u539f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 id() \u65b9\u6cd5\u67e5\u770b\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u6765\u9a8c\u8bc1 >>> lst = [1, 2, 3] >>> lst.append(4) >>> lst [1, 2, 3, 4] 2. clear \u65b9\u6cd5clear\u5c31\u5730\u6e05\u7a7a\u5217\u8868\u7684\u5185\u5bb9\u3002 >>> lst = [1, 2, 3] >>> lst.clear() >>> lst [] 3. copy \u65b9\u6cd5 copy \u590d\u5236\u5217\u8868\u3002\u524d\u9762\u8bf4\u8fc7,\u5e38\u89c4\u590d\u5236\u53ea\u662f\u5c06\u53e6\u4e00\u4e2a\u540d\u79f0\u5173\u8054\u5230\u5217\u8868\u3002 >>> a = [1, 2, 3] >>> b = a.copy() >>> b[1] = 4 >>> a [1, 2, 3] 4. count \u65b9\u6cd5count\u8ba1\u7b97\u6307\u5b9a\u7684\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002 >>> ['to', 'be', 'or', 'not', 'to', 'be'].count('to') 2 >>> x = [[1, 2], 1, 1, [2, 1, [1, 2]]] >>> x.count(1) 2 >>> x.count([1, 2]) 1 5. extend \u65b9\u6cd5extend\u8ba9\u4f60\u80fd\u591f\u540c\u65f6\u5c06\u591a\u4e2a\u503c\u9644\u52a0\u5230\u5217\u8868\u672b\u5c3e,\u4e3a\u6b64\u53ef\u5c06\u8fd9\u4e9b\u503c\u7ec4\u6210\u7684\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\u63d0 \u4f9b\u7ed9\u65b9\u6cd5extend\u3002\u6362\u800c\u8a00\u4e4b,\u4f60\u53ef\u4f7f\u7528\u4e00\u4e2a\u5217\u8868\u6765\u6269\u5c55\u53e6\u4e00\u4e2a\u5217\u8868\u3002 >>> a = [1, 2, 3] >>> b = [4, 5, 6] >>> a.extend(b) >>> a [1, 2, 3, 4, 5, 6] 6. index \u65b9\u6cd5index\u5728\u5217\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 >>> knights = ['We', 'are', 'the', 'knights', 'who', 'say', 'ni'] >>> knights.index('who') 4 7. insert \u65b9\u6cd5insert\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5217\u8868\u3002 >>> numbers = [1, 2, 3, 5, 6, 7] >>> numbers.insert(3, 'four') >>> numbers [1, 2, 3, 'four', 5, 6, 7] 8. pop \u65b9\u6cd5pop\u4ece\u5217\u8868\u4e2d\u5220\u9664\u4e00\u4e2a\u5143\u7d20(\u672b\u5c3e\u4e3a\u6700\u540e\u4e00\u4e2a\u5143\u7d20),\u5e76\u8fd4\u56de\u8fd9\u4e00\u5143\u7d20\u3002 >>> x = [1, 2, 3] >>> x.pop() 3 >>> x [1, 2] >>> x.pop(0) 1 >>> x [2] 9. remove \u65b9\u6cd5remove\u7528\u4e8e\u5220\u9664\u7b2c\u4e00\u4e2a\u4e3a\u6307\u5b9a\u503c\u7684\u5143\u7d20\u3002 >>> x = ['to', 'be', 'or', 'not', 'to', 'be'] >>> x.remove('be') >>> x ['to', 'or', 'not', 'to', 'be'] 10. reverse \u65b9\u6cd5reverse\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u6392\u5217\u5217\u8868\u4e2d\u7684\u5143\u7d20 >>> x = [1, 2, 3] >>> x.reverse() >>> x [3, 2, 1] 11. sort(sorted) \u65b9\u6cd5sort\u7528\u4e8e\u5bf9\u5217\u8868\u5c31\u5730\u6392\u5e8f 1 \u3002\u5c31\u5730\u6392\u5e8f\u610f\u5473\u7740\u5bf9\u539f\u6765\u7684\u5217\u8868\u8fdb\u884c\u4fee\u6539,\u4f7f\u5176\u5143\u7d20\u6309\u987a\u5e8f \u6392\u5217,\u800c\u4e0d\u662f\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u5217\u8868\u7684\u526f\u672c\u3002 >>> x = [4, 6, 2, 1, 7, 9] >>> x.sort() >>> x [1, 2, 4, 6, 7, 9] >>> x = [4, 6, 2, 1, 7, 9] >>> y = sorted(x) >>> x [4, 6, 2, 1, 7, 9] >>> y [1, 2, 4, 6, 7, 9] \u5143\u7ec4 \u5143\u7ec4\u8bed\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u5c06\u4e00\u4e9b\u503c\u7528\u9017\u53f7\u5206\u9694\uff0c\u5c31\u80fd\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u3002 >>> 1, 2, 3 (1, 2, 3) \u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u5fc5\u987b\u5728\u5176\u540e\u52a0\u4e0a\u4e00\u4e2a\u9017\u53f7 >>>1, (1,) \u51fd\u6570tuple\u7684\u5de5\u4f5c\u539f\u7406\u4e0elist\u5f88\u50cf\uff1a\u5b83\u5c06\u4e00\u4e2a\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5143\u7ec4\u2460\u3002\u5982\u679c\u53c2\u6570 \u5df2\u7ecf\u662f\u5143\u7ec4\uff0c\u5c31\u539f\u5c01\u4e0d\u52a8\u5730\u8fd4\u56de\u5b83\u3002 >>> tuple([1, 2, 3]) (1, 2, 3) >>> tuple('abc') ('a', 'b', 'c') >>> tuple((1, 2, 3)) (1, 2, 3) \u6ce8\u610f\uff1a\u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b\u5728\u4e8e\u5217\u8868\u53ef\u4ee5\u4fee\u6539\uff0c\u800c\u5143\u7ec4\u4e0d\u53ef\u4ee5","title":"\u5143\u7ec4\u4e0e\u5217\u8868"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_1","text":"","title":"\u5143\u7ec4\u4e0e\u5217\u8868"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_2","text":"Python\u4e2d\u6700\u57fa\u672c\u7684\u6570\u636e\u7ed3\u6784\u662f\u5e8f\u5217\uff0c\u5728\u591a\u79cd\u5e8f\u5217\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u4e24\u79cd\u5206\u522b\u662f \u5217\u8868 \u548c \u5143\u7ec4 \uff0c\u53e6\u5916\u4e00\u79cd\u91cd\u8981\u7684\u5e8f\u5217\u662f\u5b57\u7b26\u4e32\u3002\u5728\u5217\u8868\u4e2d\u8868\u793a\u5e8f\u5217\u7684\u65b9\u5f0f\u662f\u4e2d\u62ec\u53f7 [] \uff0c\u5404\u4e2a\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00,\u5982\u4e0b\u6240\u793a\uff1a \u200b edward = ['Edward Gumby', 42]","title":"\u5e8f\u5217\u6982\u8ff0"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_3","text":"","title":"\u901a\u7528\u7684\u5e8f\u5217\u64cd\u4f5c"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_4","text":"\u5e8f\u5217\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u6709\u7f16\u53f7\u2014\u2014\u4ece0\u5f00\u59cb\u9012\u589e\uff0c\u4f8b\u5982\uff1a >>> greeting = 'Hello' >>> greeting[0] 'H' \u5728python\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u83b7\u53d6\u5143\u7d20\uff0c\u5982\u679c\u7d22\u5f15\u503c\u8d85\u51fa\u4e86\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5219\u4f1a\u62a5\u9519 IndexError: list index out of range \uff0c\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0cpython\u53ef\u4ee5\u4f7f\u7528\u8d1f\u7d22\u5f15\uff0c\u5373\u4ece\u4ece\u53f3\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u5f80\u5de6\u8ba1\u6570\uff0c\u5982\u4e0b\uff1a >>> greeting[-1] 'o'","title":"\u7d22\u5f15"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_5","text":"\u5728\u83b7\u53d6\u5355\u4e2a\u5143\u7d20\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u4f46\u662f\u5982\u679c\u83b7\u53d6\u6307\u5b9a\u8303\u56f4\u7684\u591a\u4e2a\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u6765\u5b9e\u73b0\uff0c\u53ca\u4e24\u4e2a\u7d22\u5f15\uff0c\u4e2d\u95f4\u7528\u5192\u53f7\u9694\u5f00\u3002 >>> tag = '<a href=\"http://www.python.org\">Python web site</a>' >>> tag[9:30] 'http://www.python.org' \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u6253\u5370\u7684\u8303\u56f4\u662f\u5305\u542b\u7b2c\u4e00\u4e2a\u7d22\u5f15\u503c 9 \u5bf9\u5e94\u7684 h ,\u4f46\u662f\u4e0d\u5305\u542b 30 \u5bf9\u5e94\u7684\u53cc\u5f15\u53f7\uff08 \u201d \uff09\uff0c \u4f46\u662f\u5fc5\u987b\u662f\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u4f4d\u7f6e\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7684\u4f4d\u7f6e\u3002\u5426\u5219\u4e3a\u7a7a \u3002 >>> tag[30:9] '' \u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5207\u7247\u4e2d\u4f7f\u7528\u8d1f\u6570\u7d22\u5f15\u3002\u7cfb\u7edf\u5c06\u4f1a\u4ece\u5de6\u81f3\u53f3\u5339\u914d\uff0c\u7b2c\u4e00\u4e2a\u7d22\u5f15\u5fc5\u987b\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u5339\u914d\u5230\u5185\u5bb9\u3002 >>> tag[-19:-4] 'Python web site' >>> tag[-4:-19] '' \u6211\u4eec\u4e5f\u53ef\u4ee5\u6b63\u8d1f\u7d22\u5f15\u540c\u65f6\u4f7f\u7528\uff1a >>> tag[32:-4] 'Python web site' \u4e0e\u7d22\u5f15\u4e0d\u540c\u7684\u662f\uff0c\u5207\u7247\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u5982\u679c\u8d85\u51fa\u4e86\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u662f\u4e0d\u4f1a\u62a5\u9519\u4e86\uff0c\u53ea\u4f1a\u5339\u914d\u5230\u6700\u540e\u4e00\u4e2a\u3002 >>> numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] >>> numbers[9, 100] [9, 10] \u5982\u679c\u4f60\u53ea\u60f3\u4ece\u5730\u4e00\u4e2a\u5143\u7d20\u5339\u914d\u5230\u67d0\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6216\u8005\u4ece\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u5339\u914d\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8be5\u7d22\u5f15\u4f4d\u7f6e\u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u60f3\u590d\u5236\u6574\u4e2a\u5e8f\u5217\uff0c\u5219\u4e24\u4e2a\u7d22\u5f15\u90fd\u53ef\u4ee5\u7701\u7565 >>> numbers[8:] [9, 10] >>> numbers[:2] [0, 1] >>> numbers[:] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] \u6267\u884c\u5207\u7247\u64cd\u4f5c\u65f6,\u4f60\u663e\u5f0f\u6216\u9690\u5f0f\u5730\u6307\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9,\u4f46\u901a\u5e38\u7701\u7565\u53e6\u4e00\u4e2a\u53c2\u6570,\u5373\u6b65\u957f\u3002\u5728\u666e\u901a\u5207\u7247\u4e2d,\u6b65\u957f\u4e3a1\u3002\u8fd9\u610f\u5473\u7740\u4ece\u4e00\u4e2a\u5143\u7d20\u79fb\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20,\u56e0\u6b64\u5207\u7247\u5305\u542b\u8d77\u70b9\u548c\u7ec8\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u3002 >>> numbers[0:10:1] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] >>> numbers[0:10:2] [1, 3, 5, 7, 9] \u5982\u679c\u6307\u5b9a\u4e86\u6b65\u957f\u4e3a\u8d1f\u503c\uff0c\u5219\u5e8f\u5217\u7684\u5339\u914d\u903b\u8f91\u4e0d\u518d\u662f\u4ece\u5de6\u81f3\u53f3\uff0c\u800c\u662f\u4ece\u53f3\u81f3\u5de6\u3002\u800c\u4e14\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u5b9e\u9645\u4f4d\u7f6e\u5fc5\u987b\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u65e0\u5219\u65e0\u6cd5\u5339\u914d\u5230\u4efb\u4f55\u5185\u5bb9 >>> numbers[8:3:-1] [9, 8, 7, 6, 5] >>> numbers[10:0:-2] [10, 8, 6, 4, 2] >>> numbers[0:10:-2] []","title":"\u5207\u7247"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_6","text":"","title":"\u5217\u8868"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#list","text":"list\u51fd\u6570\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5217\u8868 >>> list('Hello') ['H', 'e', 'l', 'l', 'o'] \u540c\u6837\u4e5f\u53ef\u4ee5\u5c06\u5b57\u7b26\u5217\u8868\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c \u2018\u2019.join(somelist)","title":"\u4e00\u3001\u51fd\u6570list"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_7","text":"","title":"\u4e8c\u3001\u57fa\u672c\u7684\u5217\u8868\u64cd\u4f5c"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#1","text":"\u7ed9\u5217\u8868\u4e2d\u7684\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u8d4b\u503c\uff0c \u53d8\u91cf\u540d[\u7d22\u5f15\u503c]=\u5b9e\u9645\u503c >>> x = [1, 1, 1] >>> x[1] = 2 >>> x [1, 2, 1]","title":"1.\u4fee\u6539\u5217\u8868\uff1a\u7ed9\u5143\u7d20\u8d4b\u503c"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#2","text":"\u4ece\u5217\u8868\u4e2d\u5220\u9664\u5143\u7d20\u4e5f\u5f88\u5bb9\u6613,\u53ea\u9700\u4f7f\u7528del\u8bed\u53e5\u5373\u53ef\u3002 >>> names = ['Alice', 'Beth', 'Cecil', 'Dee-Dee', 'Earl'] >>> del names[2] >>> names ['Alice', 'Beth', 'Dee-Dee', 'Earl']","title":"2.\u5220\u9664\u5143\u7d20"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_8","text":"","title":"\u4e09\u3001\u5217\u8868\u65b9\u6cd5"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#1-append","text":"\u65b9\u6cd5append\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u9644\u52a0\u5230\u5217\u8868\u672b\u5c3e\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u8be5\u65b9\u6cd5\u662f\u4fee\u6539\u539f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 id() \u65b9\u6cd5\u67e5\u770b\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u6765\u9a8c\u8bc1 >>> lst = [1, 2, 3] >>> lst.append(4) >>> lst [1, 2, 3, 4]","title":"1. append"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#2-clear","text":"\u65b9\u6cd5clear\u5c31\u5730\u6e05\u7a7a\u5217\u8868\u7684\u5185\u5bb9\u3002 >>> lst = [1, 2, 3] >>> lst.clear() >>> lst []","title":"2. clear"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#3-copy","text":"\u65b9\u6cd5 copy \u590d\u5236\u5217\u8868\u3002\u524d\u9762\u8bf4\u8fc7,\u5e38\u89c4\u590d\u5236\u53ea\u662f\u5c06\u53e6\u4e00\u4e2a\u540d\u79f0\u5173\u8054\u5230\u5217\u8868\u3002 >>> a = [1, 2, 3] >>> b = a.copy() >>> b[1] = 4 >>> a [1, 2, 3]","title":"3. copy"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#4-count","text":"\u65b9\u6cd5count\u8ba1\u7b97\u6307\u5b9a\u7684\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002 >>> ['to', 'be', 'or', 'not', 'to', 'be'].count('to') 2 >>> x = [[1, 2], 1, 1, [2, 1, [1, 2]]] >>> x.count(1) 2 >>> x.count([1, 2]) 1","title":"4. count"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#5-extend","text":"\u65b9\u6cd5extend\u8ba9\u4f60\u80fd\u591f\u540c\u65f6\u5c06\u591a\u4e2a\u503c\u9644\u52a0\u5230\u5217\u8868\u672b\u5c3e,\u4e3a\u6b64\u53ef\u5c06\u8fd9\u4e9b\u503c\u7ec4\u6210\u7684\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\u63d0 \u4f9b\u7ed9\u65b9\u6cd5extend\u3002\u6362\u800c\u8a00\u4e4b,\u4f60\u53ef\u4f7f\u7528\u4e00\u4e2a\u5217\u8868\u6765\u6269\u5c55\u53e6\u4e00\u4e2a\u5217\u8868\u3002 >>> a = [1, 2, 3] >>> b = [4, 5, 6] >>> a.extend(b) >>> a [1, 2, 3, 4, 5, 6]","title":"5. extend"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#6-index","text":"\u65b9\u6cd5index\u5728\u5217\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 >>> knights = ['We', 'are', 'the', 'knights', 'who', 'say', 'ni'] >>> knights.index('who') 4","title":"6. index"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#7-insert","text":"\u65b9\u6cd5insert\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5217\u8868\u3002 >>> numbers = [1, 2, 3, 5, 6, 7] >>> numbers.insert(3, 'four') >>> numbers [1, 2, 3, 'four', 5, 6, 7]","title":"7. insert"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#8-pop","text":"\u65b9\u6cd5pop\u4ece\u5217\u8868\u4e2d\u5220\u9664\u4e00\u4e2a\u5143\u7d20(\u672b\u5c3e\u4e3a\u6700\u540e\u4e00\u4e2a\u5143\u7d20),\u5e76\u8fd4\u56de\u8fd9\u4e00\u5143\u7d20\u3002 >>> x = [1, 2, 3] >>> x.pop() 3 >>> x [1, 2] >>> x.pop(0) 1 >>> x [2]","title":"8. pop"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#9-remove","text":"\u65b9\u6cd5remove\u7528\u4e8e\u5220\u9664\u7b2c\u4e00\u4e2a\u4e3a\u6307\u5b9a\u503c\u7684\u5143\u7d20\u3002 >>> x = ['to', 'be', 'or', 'not', 'to', 'be'] >>> x.remove('be') >>> x ['to', 'or', 'not', 'to', 'be']","title":"9. remove"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#10-reverse","text":"\u65b9\u6cd5reverse\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u6392\u5217\u5217\u8868\u4e2d\u7684\u5143\u7d20 >>> x = [1, 2, 3] >>> x.reverse() >>> x [3, 2, 1]","title":"10. reverse"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#11-sortsorted","text":"\u65b9\u6cd5sort\u7528\u4e8e\u5bf9\u5217\u8868\u5c31\u5730\u6392\u5e8f 1 \u3002\u5c31\u5730\u6392\u5e8f\u610f\u5473\u7740\u5bf9\u539f\u6765\u7684\u5217\u8868\u8fdb\u884c\u4fee\u6539,\u4f7f\u5176\u5143\u7d20\u6309\u987a\u5e8f \u6392\u5217,\u800c\u4e0d\u662f\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u5217\u8868\u7684\u526f\u672c\u3002 >>> x = [4, 6, 2, 1, 7, 9] >>> x.sort() >>> x [1, 2, 4, 6, 7, 9] >>> x = [4, 6, 2, 1, 7, 9] >>> y = sorted(x) >>> x [4, 6, 2, 1, 7, 9] >>> y [1, 2, 4, 6, 7, 9]","title":"11. sort(sorted)"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5143\u7ec4\u4e0e\u5217\u8868/#_9","text":"\u5143\u7ec4\u8bed\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u5c06\u4e00\u4e9b\u503c\u7528\u9017\u53f7\u5206\u9694\uff0c\u5c31\u80fd\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u3002 >>> 1, 2, 3 (1, 2, 3) \u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u5fc5\u987b\u5728\u5176\u540e\u52a0\u4e0a\u4e00\u4e2a\u9017\u53f7 >>>1, (1,) \u51fd\u6570tuple\u7684\u5de5\u4f5c\u539f\u7406\u4e0elist\u5f88\u50cf\uff1a\u5b83\u5c06\u4e00\u4e2a\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5143\u7ec4\u2460\u3002\u5982\u679c\u53c2\u6570 \u5df2\u7ecf\u662f\u5143\u7ec4\uff0c\u5c31\u539f\u5c01\u4e0d\u52a8\u5730\u8fd4\u56de\u5b83\u3002 >>> tuple([1, 2, 3]) (1, 2, 3) >>> tuple('abc') ('a', 'b', 'c') >>> tuple((1, 2, 3)) (1, 2, 3) \u6ce8\u610f\uff1a\u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b\u5728\u4e8e\u5217\u8868\u53ef\u4ee5\u4fee\u6539\uff0c\u800c\u5143\u7ec4\u4e0d\u53ef\u4ee5","title":"\u5143\u7ec4"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u51fd\u6570/","text":"\u5b9a\u4e49\u51fd\u6570 \u5b9a\u4e49\u51fd\u6570\u7684\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b def functionname([parameterlist]): [\"\"\"comments\"\"\"] [functionbody] \u53c2\u6570\u8bf4\u660e\uff1a functionname: \u51fd\u6570\u540d\u79f0\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f7f\u7528 parameterlist: \u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u6dfb\u52a0\u96f6\u81f3\u591a\u4e2a\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u4f20\u9012\uff0c\u5982\u679c\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u51fd\u6570\u540e\u4e5f\u8981\u52a0\u4e0a\u62ec\u53f7(),\u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u65f6\uff0c\u5728\u8c03\u7528\u65f6\u5fc5\u987b\u4f20\u9012\uff0c\u800c\u4e14\u6309\u7167\u76f8\u5e94\u7684\u987a\u5e8f comments \u4e3a\u51fd\u6570\u7684\u6587\u6863\u6ce8\u91ca\uff0c\u4f7f\u7528\u4e09\u4e2a\u5f15\u53f7''' \u6216\u8005\"\"\",\u7f16\u5199\u6587\u6863\u6ce8\u91ca\u662f\u7a0b\u5e8f\u5458\u7684\u826f\u597d\u9053\u5fb7\u54c1\u8d28\uff0c\u6ce8\u91ca\u8bf4\u660e\u51fd\u6570\u7684\u529f\u80fd functionbody\uff1a\u51fd\u6570\u4f53\uff0c\u6267\u884c\u8be5\u51fd\u6570\u7684\u5177\u4f53\u529f\u80fd\uff0c\u5982\u679c\u8be5\u51fd\u6570\u6709\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 return \u8fd4\u56de \u6ce8\u610f\uff0cfunctionbody\u4e0ecomments\u4fdd\u6301\u4e0edef\u76f8\u540c\u7684\u7f29\u8fdb \u8c03\u7528\u51fd\u6570\u65f6\u901a\u8fc7\u51fd\u6570\u540d functionname([parameterlist]) \u53c2\u6570\u4f20\u9012 \u5728\u4f7f\u7528\u51fd\u6570\u65f6\uff0c\u7ecf\u5e38\u4f1a\u7528\u5230\u5f62\u5f0f\u53c2\u6570\u548c\u5b9e\u9645\u53c2\u6570 \u5f62\u5f0f\u53c2\u6570\uff1a\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u540d\u540e\u9762\u62ec\u53f7\u91cc\u7684\u53c2\u6570\u79f0\u4e3a\u5f62\u5f0f\u53c2\u6570\uff0c\u4e5f\u53eb\u5f62\u53c2 \u5b9e\u9645\u53c2\u6570\uff1a\u5728\u8c03\u7528\u51fd\u6570\uff0c\u51fd\u6570\u540e\u9762\u62ec\u53f7\u91cc\u7684\u53c2\u6570\u4e3a\u5b9e\u9645\u53c2\u6570\uff0c\u4e5f\u53eb\u5b9e\u53c2 def func(obj): # obj\u4e3a\u5f62\u53c2 pass func('myfunc') # 'myfunc'\u4e3a\u5b9e\u53c2 \u5728\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u5982\u679c\u53c2\u6570\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u53ea\u80fd\u6539\u53d8\u5f62\u53c2\u7684\u503c\uff0c\u800c\u5b9e\u53c2\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u4f20\u5165\u7684\u53c2\u6570\u662f\u53ef\u53d8\u7684\u5bf9\u8c61\uff0c\u5219\u5f62\u53c2\u548c\u5b9e\u53c2\u90fd\u4f1a\u6539\u53d8 def func(obj): print('\u539f\u503c\uff1a', obj) obj += obj print(\"\u65b0\u503c\uff1a\", obj) s = \"\u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211\" func(s) print('\u8c03\u7528\u51fd\u6570\u540e\uff1a', s) lst = ['1', '2'] func(lst) print('\u8c03\u7528\u51fd\u6570\u540e\uff1a', lst) # out \u539f\u503c\uff1a \u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211 \u65b0\u503c\uff1a \u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211\u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211 \u8c03\u7528\u51fd\u6570\u540e\uff1a \u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211 \u539f\u503c\uff1a ['1', '2'] \u65b0\u503c\uff1a ['1', '2', '1', '2'] \u8c03\u7528\u51fd\u6570\u540e\uff1a ['1', '2', '1', '2'] \u524d\u9762\u63d0\u5230\u7684\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u7684\u6570\u91cf\u548c\u4f4d\u7f6e\u5fc5\u987b\u548c\u5b9a\u4e49\u65f6\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u6570\u91cf\u4e0d\u4e00\u6837\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u987a\u5e8f\u9519\u8bef\uff0c\u867d\u7136\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u5bb9\u6613\u4ea7\u751fbug,\u4f46\u662f\u5982\u679c\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u5ffd\u7565\u53c2\u6570\u7684\u4f20\u9012\u987a\u5e8f. def func(obj): print('\u539f\u503c\uff1a', obj) obj += obj print(\"\u65b0\u503c\uff1a\", obj) fun_bmi(weight=65, person='\u963f\u98de', height=185) # out person: \u963f\u98de height: 185 weight: 65 \u53e6\u5916\u53ef\u4ee5\u4e3a\u5f62\u53c2\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0c\u5728\u8c03\u7528\u4e5f\u53ef\u4ee5\u4e0d\u4f20 def functionname(...,[parameter1=defaultvalue1]) [functionbody] def func_foo(name='\u963f\u98de'): print('name:', name) func_foo() func_foo('\u96f7\u950b') # out name: \u963f\u98de name: \u96f7\u950b \u5728python\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u53ef\u53d8\u53c2\u6570\uff0c\u4e5f\u79f0\u4e3a\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u5373\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u662f0\u4e2a\uff0c\u4e00\u4e2a\uff0c\u4e24\u4e2a\u6216\u8005\u4efb\u610f\u4e2a\uff0c\u5b9a\u4e49\u53ef\u53d8\u53c2\u6570\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u662f parameter,\u53e6\u4e00\u79cd\u662f *parameter *parameter\u8fd9\u79cd\u5f62\u5f0f\u8868\u793a\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u5b9e\u9645\u53c2\u6570\u5e76\u653e\u5230\u5143\u7ec4\u4e2d def print_name(*name): print('name\u7c7b\u578b\u4e3a\uff1a', type(name)) for item in name: print(name) print_name('\u5f20\u4e09', '\u674e\u56db', '\u738b\u4e94') # out name\u7c7b\u578b\u4e3a\uff1a <class 'tuple'> \u5f20\u4e09 \u674e\u56db \u738b\u4e94 \u5982\u679c\u60f3\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\uff0c\u53ef\u4ee5\u5728\u5217\u8868\u524d\u52a0\u201d*\u201c namelist = ['\u5f20\u4e09', '\u674e\u56db', '\u738b\u4e94'] print_name(*namelist) # out name\u7c7b\u578b\u4e3a\uff1a <class 'tuple'> \u5f20\u4e09 \u674e\u56db \u738b\u4e94 **parameter\u8fd9\u79cd\u5f62\u5f0f\u8868\u793a\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u663e\u793a\u8d4b\u503c\u7684\u5b9e\u9645\u53c2\u6570\uff0c\u5e76\u653e\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\u3002 def print_sign(**sign): print('\u53c2\u6570\u7c7b\u578b\u4e3a\uff1a', type(sign)) for key, value in sign.items(): print(\"\u53c2\u6570{0}\u7684\u503c\u4e3a{1}\".format(key, value)) print_sign(name='\u963f\u98de', age=27, describe='\u963f\u98de\u662f\u4e2a\u6df7\u86cb') # out \u53c2\u6570\u7c7b\u578b\u4e3a\uff1a <class 'dict'> \u53c2\u6570name\u7684\u503c\u4e3a\u963f\u98de \u53c2\u6570age\u7684\u503c\u4e3a27 \u53c2\u6570describe\u7684\u503c\u4e3a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u5982\u679c\u60f3\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u5b57\u5178\u4f5c\u4e3a\u53c2\u6570\uff0c\u53ef\u5728\u5b57\u5178\u524d\u52a0\u4e0a\u201d**\u201c dict_sign = {name:'\u963f\u98de', age:27, describe:'\u963f\u98de\u662f\u4e2a\u6df7\u86cb'} print_sign(**dict_sign) # out \u6570\u7c7b\u578b\u4e3a\uff1a <class 'dict'> \u53c2\u6570name\u7684\u503c\u4e3a\u963f\u98de \u53c2\u6570age\u7684\u503c\u4e3a27 \u53c2\u6570describe\u7684\u503c\u4e3a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u53d8\u91cf\u7684\u4f5c\u7528\u57df \u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6307\u7a0b\u5e8f\u4ee3\u7801\u80fd\u591f\u8bbf\u95ee\u7684\u8be5\u53d8\u91cf\u7684\u533a\u57df\uff0c\u5982\u679c\u8d85\u51fa\u8be5\u533a\u57df\uff0c\u518d\u8bbf\u95ee\u5c31\u4f1a\u51fa\u9519\uff0c\u6839\u636e\u53d8\u91cf\u7684\u6709\u6548\u8303\u56f4\u53ef\u4ee5\u5206\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf \u5c40\u90e8\u53d8\u91cf\u662f\u6307\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5b83\u53ea\u5728\u51fd\u6570\u5185\u90e8\u6709\u6548\u3002\u5373\u51fd\u6570\u5185\u90e8\u7684\u540d\u5b57\u5728\u5728\u51fd\u6570\u8fd0\u884c\u65f6\u624d\u4f1a\u521b\u5efa\uff0c\u51fd\u6570\u8fd0\u884c\u5b8c\u6bd5\uff0c\u8be5\u53d8\u91cf\u5c31\u4e0d\u5b58\u5728\u4e86 def f_demo(): message = \"\u963f\u98de\u662f\u4e2a\u6df7\u86cb\" print(\"\u5c40\u90e8\u53d8\u91cfmessage:\", message) print('\u53d8\u91cfmessgae:', messge) # out \u5c40\u90e8\u53d8\u91cfmessage: \u963f\u98de\u662f\u4e2a\u6df7\u86cb NameError: name 'messge' is not defined \u4e0e\u5c40\u90e8\u53d8\u91cf\u5bf9\u5e94\uff0c\u5168\u5c40\u53d8\u91cf\u80fd\u591f\u4f5c\u7528\u4e8e\u51fd\u6570\u5185\u5916\u7684\u53d8\u91cf\uff0c\u5982\u679c\u5728\u51fd\u6570\u5916\u90e8\u5b9a\u4e49\uff0c\u90a3\u4e48\u4e0d\u4ec5\u5728\u51fd\u6570\u5916\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e5f\u53ef\u4ee5\u8bbf\u95ee message = '\u963f\u98de\u662f\u4e2a\u6df7\u86cb' def f_demo(): print('\u51fd\u6570\u5185\u90e8\uff1a',meaage) f_demo() print('\u51fd\u6570\u5916\u90e8\uff1a',message) # out \u51fd\u6570\u5185\u90e8\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u51fd\u6570\u5916\u90e8\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u5728\u51fd\u6570\u4f53\u5185\u5b9a\u4e49\uff0c\u5e76\u4e14\u4f7f\u7528 global \u5173\u952e\u5b57\u4fee\u9970\u540e\uff0c\u8be5\u53d8\u91cf\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u5e76\u5728\u51fd\u6570\u4f53\u5916\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5e76\u4e14\u4fee\u6539 message = '\u963f\u98de\u662f\u4e2a\u6df7\u86cb' print('\u4fee\u6539\u524d\uff1a', message) def f_demo(): global message message = '\u51fd\u6570\u5185\u90e8\u4fee\u6539\u540e\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb' f_demo() print('\u4fee\u6539\u540e\uff1a:', message) # out \u4fee\u6539\u524d\uff1a \u963f\u98de\u662f\u4e2a\u6df7\u86cb \u4fee\u6539\u540e\uff1a: \u51fd\u6570\u5185\u90e8\u4fee\u6539\u540e\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u533f\u540d\u51fd\u6570 \u533f\u540d\u51fd\u6570\u662f\u503c\u6ca1\u6709\u540d\u5b57\u7684\u51fd\u6570\uff0c\u5b83\u4e3b\u8981\u5e94\u7528\u5728\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u53c8\u4e0d\u60f3\u53bb\u547d\u540d\u8fd9\u4e2a\u51fd\u6570\uff0c\u901a\u5e38\u60c5\u51b5\u53ea\u662f\u7528\u4e00\u6b21\uff0c\u5728python\u4e2d\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\u521b\u5efa\u533f\u540d\u51fd\u6570\uff0c\u5176\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a result = lambda [arg1 [arg2,......,argn]]:expression result\u7528\u4e8e\u8c03\u7528lambda\u8868\u8fbe\u5f0f [arg1 [arg2,....,argn]]\u53ef\u9009\u53c2\u6570\uff0c\u6307\u9700\u8981\u4f20\u9012\u7684\u53c2\u6570\u5217\u8868\uff0c\u591a\u4e2a\u53c2\u6570\u7528\u201d\uff0c\u201c\u9694\u5f00 expression \u5fc5\u987b\u53c2\u6570\uff0c\u6307\u7528\u4e8e\u533f\u540d\u51fd\u6570\u9700\u8981\u6267\u884c\u7684\u529f\u80fd import math r = 10 result = lambda r:math.pi*r*r print('\u534a\u5f84\u4e3a10\u7684\u5706\u9762\u79ef\u4e3a\uff1a', result(r)) # out 314.1592654","title":"\u51fd\u6570"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u51fd\u6570/#_1","text":"\u5b9a\u4e49\u51fd\u6570\u7684\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b def functionname([parameterlist]): [\"\"\"comments\"\"\"] [functionbody] \u53c2\u6570\u8bf4\u660e\uff1a functionname: \u51fd\u6570\u540d\u79f0\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f7f\u7528 parameterlist: \u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u6dfb\u52a0\u96f6\u81f3\u591a\u4e2a\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u4f20\u9012\uff0c\u5982\u679c\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u51fd\u6570\u540e\u4e5f\u8981\u52a0\u4e0a\u62ec\u53f7(),\u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u65f6\uff0c\u5728\u8c03\u7528\u65f6\u5fc5\u987b\u4f20\u9012\uff0c\u800c\u4e14\u6309\u7167\u76f8\u5e94\u7684\u987a\u5e8f comments \u4e3a\u51fd\u6570\u7684\u6587\u6863\u6ce8\u91ca\uff0c\u4f7f\u7528\u4e09\u4e2a\u5f15\u53f7''' \u6216\u8005\"\"\",\u7f16\u5199\u6587\u6863\u6ce8\u91ca\u662f\u7a0b\u5e8f\u5458\u7684\u826f\u597d\u9053\u5fb7\u54c1\u8d28\uff0c\u6ce8\u91ca\u8bf4\u660e\u51fd\u6570\u7684\u529f\u80fd functionbody\uff1a\u51fd\u6570\u4f53\uff0c\u6267\u884c\u8be5\u51fd\u6570\u7684\u5177\u4f53\u529f\u80fd\uff0c\u5982\u679c\u8be5\u51fd\u6570\u6709\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 return \u8fd4\u56de \u6ce8\u610f\uff0cfunctionbody\u4e0ecomments\u4fdd\u6301\u4e0edef\u76f8\u540c\u7684\u7f29\u8fdb \u8c03\u7528\u51fd\u6570\u65f6\u901a\u8fc7\u51fd\u6570\u540d functionname([parameterlist])","title":"\u5b9a\u4e49\u51fd\u6570"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u51fd\u6570/#_2","text":"\u5728\u4f7f\u7528\u51fd\u6570\u65f6\uff0c\u7ecf\u5e38\u4f1a\u7528\u5230\u5f62\u5f0f\u53c2\u6570\u548c\u5b9e\u9645\u53c2\u6570 \u5f62\u5f0f\u53c2\u6570\uff1a\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u540d\u540e\u9762\u62ec\u53f7\u91cc\u7684\u53c2\u6570\u79f0\u4e3a\u5f62\u5f0f\u53c2\u6570\uff0c\u4e5f\u53eb\u5f62\u53c2 \u5b9e\u9645\u53c2\u6570\uff1a\u5728\u8c03\u7528\u51fd\u6570\uff0c\u51fd\u6570\u540e\u9762\u62ec\u53f7\u91cc\u7684\u53c2\u6570\u4e3a\u5b9e\u9645\u53c2\u6570\uff0c\u4e5f\u53eb\u5b9e\u53c2 def func(obj): # obj\u4e3a\u5f62\u53c2 pass func('myfunc') # 'myfunc'\u4e3a\u5b9e\u53c2 \u5728\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u5982\u679c\u53c2\u6570\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u53ea\u80fd\u6539\u53d8\u5f62\u53c2\u7684\u503c\uff0c\u800c\u5b9e\u53c2\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u4f20\u5165\u7684\u53c2\u6570\u662f\u53ef\u53d8\u7684\u5bf9\u8c61\uff0c\u5219\u5f62\u53c2\u548c\u5b9e\u53c2\u90fd\u4f1a\u6539\u53d8 def func(obj): print('\u539f\u503c\uff1a', obj) obj += obj print(\"\u65b0\u503c\uff1a\", obj) s = \"\u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211\" func(s) print('\u8c03\u7528\u51fd\u6570\u540e\uff1a', s) lst = ['1', '2'] func(lst) print('\u8c03\u7528\u51fd\u6570\u540e\uff1a', lst) # out \u539f\u503c\uff1a \u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211 \u65b0\u503c\uff1a \u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211\u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211 \u8c03\u7528\u51fd\u6570\u540e\uff1a \u671d\u671d\u66ae\u66ae\u8ba9\u4f60\u731c\u60f3\u5982\u4f55\u9a6f\u670d\u6211 \u539f\u503c\uff1a ['1', '2'] \u65b0\u503c\uff1a ['1', '2', '1', '2'] \u8c03\u7528\u51fd\u6570\u540e\uff1a ['1', '2', '1', '2'] \u524d\u9762\u63d0\u5230\u7684\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u7684\u6570\u91cf\u548c\u4f4d\u7f6e\u5fc5\u987b\u548c\u5b9a\u4e49\u65f6\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u6570\u91cf\u4e0d\u4e00\u6837\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u987a\u5e8f\u9519\u8bef\uff0c\u867d\u7136\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u5bb9\u6613\u4ea7\u751fbug,\u4f46\u662f\u5982\u679c\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u5ffd\u7565\u53c2\u6570\u7684\u4f20\u9012\u987a\u5e8f. def func(obj): print('\u539f\u503c\uff1a', obj) obj += obj print(\"\u65b0\u503c\uff1a\", obj) fun_bmi(weight=65, person='\u963f\u98de', height=185) # out person: \u963f\u98de height: 185 weight: 65 \u53e6\u5916\u53ef\u4ee5\u4e3a\u5f62\u53c2\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0c\u5728\u8c03\u7528\u4e5f\u53ef\u4ee5\u4e0d\u4f20 def functionname(...,[parameter1=defaultvalue1]) [functionbody] def func_foo(name='\u963f\u98de'): print('name:', name) func_foo() func_foo('\u96f7\u950b') # out name: \u963f\u98de name: \u96f7\u950b \u5728python\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u53ef\u53d8\u53c2\u6570\uff0c\u4e5f\u79f0\u4e3a\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u5373\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u662f0\u4e2a\uff0c\u4e00\u4e2a\uff0c\u4e24\u4e2a\u6216\u8005\u4efb\u610f\u4e2a\uff0c\u5b9a\u4e49\u53ef\u53d8\u53c2\u6570\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u662f parameter,\u53e6\u4e00\u79cd\u662f *parameter *parameter\u8fd9\u79cd\u5f62\u5f0f\u8868\u793a\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u5b9e\u9645\u53c2\u6570\u5e76\u653e\u5230\u5143\u7ec4\u4e2d def print_name(*name): print('name\u7c7b\u578b\u4e3a\uff1a', type(name)) for item in name: print(name) print_name('\u5f20\u4e09', '\u674e\u56db', '\u738b\u4e94') # out name\u7c7b\u578b\u4e3a\uff1a <class 'tuple'> \u5f20\u4e09 \u674e\u56db \u738b\u4e94 \u5982\u679c\u60f3\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\uff0c\u53ef\u4ee5\u5728\u5217\u8868\u524d\u52a0\u201d*\u201c namelist = ['\u5f20\u4e09', '\u674e\u56db', '\u738b\u4e94'] print_name(*namelist) # out name\u7c7b\u578b\u4e3a\uff1a <class 'tuple'> \u5f20\u4e09 \u674e\u56db \u738b\u4e94 **parameter\u8fd9\u79cd\u5f62\u5f0f\u8868\u793a\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u663e\u793a\u8d4b\u503c\u7684\u5b9e\u9645\u53c2\u6570\uff0c\u5e76\u653e\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\u3002 def print_sign(**sign): print('\u53c2\u6570\u7c7b\u578b\u4e3a\uff1a', type(sign)) for key, value in sign.items(): print(\"\u53c2\u6570{0}\u7684\u503c\u4e3a{1}\".format(key, value)) print_sign(name='\u963f\u98de', age=27, describe='\u963f\u98de\u662f\u4e2a\u6df7\u86cb') # out \u53c2\u6570\u7c7b\u578b\u4e3a\uff1a <class 'dict'> \u53c2\u6570name\u7684\u503c\u4e3a\u963f\u98de \u53c2\u6570age\u7684\u503c\u4e3a27 \u53c2\u6570describe\u7684\u503c\u4e3a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u5982\u679c\u60f3\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u5b57\u5178\u4f5c\u4e3a\u53c2\u6570\uff0c\u53ef\u5728\u5b57\u5178\u524d\u52a0\u4e0a\u201d**\u201c dict_sign = {name:'\u963f\u98de', age:27, describe:'\u963f\u98de\u662f\u4e2a\u6df7\u86cb'} print_sign(**dict_sign) # out \u6570\u7c7b\u578b\u4e3a\uff1a <class 'dict'> \u53c2\u6570name\u7684\u503c\u4e3a\u963f\u98de \u53c2\u6570age\u7684\u503c\u4e3a27 \u53c2\u6570describe\u7684\u503c\u4e3a\u963f\u98de\u662f\u4e2a\u6df7\u86cb","title":"\u53c2\u6570\u4f20\u9012"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u51fd\u6570/#_3","text":"\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6307\u7a0b\u5e8f\u4ee3\u7801\u80fd\u591f\u8bbf\u95ee\u7684\u8be5\u53d8\u91cf\u7684\u533a\u57df\uff0c\u5982\u679c\u8d85\u51fa\u8be5\u533a\u57df\uff0c\u518d\u8bbf\u95ee\u5c31\u4f1a\u51fa\u9519\uff0c\u6839\u636e\u53d8\u91cf\u7684\u6709\u6548\u8303\u56f4\u53ef\u4ee5\u5206\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf \u5c40\u90e8\u53d8\u91cf\u662f\u6307\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5b83\u53ea\u5728\u51fd\u6570\u5185\u90e8\u6709\u6548\u3002\u5373\u51fd\u6570\u5185\u90e8\u7684\u540d\u5b57\u5728\u5728\u51fd\u6570\u8fd0\u884c\u65f6\u624d\u4f1a\u521b\u5efa\uff0c\u51fd\u6570\u8fd0\u884c\u5b8c\u6bd5\uff0c\u8be5\u53d8\u91cf\u5c31\u4e0d\u5b58\u5728\u4e86 def f_demo(): message = \"\u963f\u98de\u662f\u4e2a\u6df7\u86cb\" print(\"\u5c40\u90e8\u53d8\u91cfmessage:\", message) print('\u53d8\u91cfmessgae:', messge) # out \u5c40\u90e8\u53d8\u91cfmessage: \u963f\u98de\u662f\u4e2a\u6df7\u86cb NameError: name 'messge' is not defined \u4e0e\u5c40\u90e8\u53d8\u91cf\u5bf9\u5e94\uff0c\u5168\u5c40\u53d8\u91cf\u80fd\u591f\u4f5c\u7528\u4e8e\u51fd\u6570\u5185\u5916\u7684\u53d8\u91cf\uff0c\u5982\u679c\u5728\u51fd\u6570\u5916\u90e8\u5b9a\u4e49\uff0c\u90a3\u4e48\u4e0d\u4ec5\u5728\u51fd\u6570\u5916\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e5f\u53ef\u4ee5\u8bbf\u95ee message = '\u963f\u98de\u662f\u4e2a\u6df7\u86cb' def f_demo(): print('\u51fd\u6570\u5185\u90e8\uff1a',meaage) f_demo() print('\u51fd\u6570\u5916\u90e8\uff1a',message) # out \u51fd\u6570\u5185\u90e8\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u51fd\u6570\u5916\u90e8\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb \u5728\u51fd\u6570\u4f53\u5185\u5b9a\u4e49\uff0c\u5e76\u4e14\u4f7f\u7528 global \u5173\u952e\u5b57\u4fee\u9970\u540e\uff0c\u8be5\u53d8\u91cf\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u5e76\u5728\u51fd\u6570\u4f53\u5916\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5e76\u4e14\u4fee\u6539 message = '\u963f\u98de\u662f\u4e2a\u6df7\u86cb' print('\u4fee\u6539\u524d\uff1a', message) def f_demo(): global message message = '\u51fd\u6570\u5185\u90e8\u4fee\u6539\u540e\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb' f_demo() print('\u4fee\u6539\u540e\uff1a:', message) # out \u4fee\u6539\u524d\uff1a \u963f\u98de\u662f\u4e2a\u6df7\u86cb \u4fee\u6539\u540e\uff1a: \u51fd\u6570\u5185\u90e8\u4fee\u6539\u540e\uff1a\u963f\u98de\u662f\u4e2a\u6df7\u86cb","title":"\u53d8\u91cf\u7684\u4f5c\u7528\u57df"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u51fd\u6570/#_4","text":"\u533f\u540d\u51fd\u6570\u662f\u503c\u6ca1\u6709\u540d\u5b57\u7684\u51fd\u6570\uff0c\u5b83\u4e3b\u8981\u5e94\u7528\u5728\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u53c8\u4e0d\u60f3\u53bb\u547d\u540d\u8fd9\u4e2a\u51fd\u6570\uff0c\u901a\u5e38\u60c5\u51b5\u53ea\u662f\u7528\u4e00\u6b21\uff0c\u5728python\u4e2d\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\u521b\u5efa\u533f\u540d\u51fd\u6570\uff0c\u5176\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a result = lambda [arg1 [arg2,......,argn]]:expression result\u7528\u4e8e\u8c03\u7528lambda\u8868\u8fbe\u5f0f [arg1 [arg2,....,argn]]\u53ef\u9009\u53c2\u6570\uff0c\u6307\u9700\u8981\u4f20\u9012\u7684\u53c2\u6570\u5217\u8868\uff0c\u591a\u4e2a\u53c2\u6570\u7528\u201d\uff0c\u201c\u9694\u5f00 expression \u5fc5\u987b\u53c2\u6570\uff0c\u6307\u7528\u4e8e\u533f\u540d\u51fd\u6570\u9700\u8981\u6267\u884c\u7684\u529f\u80fd import math r = 10 result = lambda r:math.pi*r*r print('\u534a\u5f84\u4e3a10\u7684\u5706\u9762\u79ef\u4e3a\uff1a', result(r)) # out 314.1592654","title":"\u533f\u540d\u51fd\u6570"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/","text":"\u5b57\u5178\u6982\u8ff0 \u5c06\u4e00\u7cfb\u5217\u7684\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u901a\u8fc7\u6570\u503c\u6765\u8bbf\u95ee\u7684\u6570\u636e\u7ed3\u6784\u79f0\u4e3a\u5e8f\u5217\uff0c\u800c\u901a\u8fc7\u901a\u8fc7\u540d\u79f0\u6765\u8bbf\u95ee\u5404\u4e2a\u503c\u7684\u6570\u636e\u7ed3\u6784\u79f0\u4e3a\u5b57\u5178\uff0c\u5b57\u5178\u662fpython\u4e2d\u552f\u4e00\u7684\u5185\u7f6e\u6620\u5c04\u7c7b\u578b\uff0c\u5176\u4e2d\u7684\u503c\u4e0d\u6309\u987a\u5e8f\u6392\u5217\uff0c\u800c\u662f\u5b58\u50a8\u5728\u952e\u4e0b\uff0c\u8fd9\u79cd\u901a\u8fc7\u952e\u503c\u7684\u5b58\u50a8\u65b9\u5f0f\u79f0\u4e3a\u6620\u5c04\uff08mapping\uff09,\u5217\u8868\u4f7f\u7528\u7684\u662f\u4e2d\u62ec\u53f7[]\uff0c\u5143\u7ec4\u4f7f\u7528\u5c0f\u62ec\u53f7()\uff0c\u5b57\u5178\u4f7f\u7528\u5927\u62ec\u53f7{} \u5b57\u5178\u7684\u521b\u5efa\u548c\u4f7f\u7528 \u5b57\u5178\u521b\u5efa\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f {key1: value1, key2: value2,...} \u5b57\u5178\u7531\u952e\u548c\u5176\u5bf9\u5e94\u7684\u503c\u7ec4\u6210\uff0c\u952e\u503c\u7ec4\u5408\u79f0\u4e3a \u9879\uff08item\uff09 ,\u6bcf\u4e2a\u952e\u4e0e\u503c\u4e4b\u95f4\u4f7f\u7528\u5192\u53f7\uff08:\uff09\u5206\u5272\uff0c\u5982\u679c\u6709\u591a\u4e2a\u9879\u7684\u8bdd\uff0c\u4e2d\u95f4\u7528\u9017\u53f7\uff08,\uff09\u5206\u5272\uff0c\u6bcf\u4e2a\u952e\u90fd\u5fc5\u987b\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u4f8b\u5982\uff1a phonebook = {'Alice': '2432', 'John': '3433'} \u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 dict \u4ece\u5176\u4ed6\u6620\u5c04\u6216\u952e\u503c\u5bf9\u5e8f\u5217\u521b\u5efa\u5b57\u5178 >>> items = [('name', 'Gumby'), ('age', '42')] >>> d = dict(items) >>> d {'age': 42, 'name': 'Gumby'} >>> d['name'] 'Gumby' \u8fd8\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u8bcd\u5b9e\u53c2\u6389\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 >>> d = dict(name='Gumby', age=42) >>> d {'age': 42, 'name': 'Gumby'} \u5b57\u5178\u7684\u57fa\u672c\u64cd\u4f5c len(d) \u8fd4\u56de\u5b57\u5178d\u5305\u542b\u7684\u9879\u6570 d[k] \u8fd4\u56de\u4e0e\u952ek\u5173\u8054\u7684\u503c d[k] = v \u5c06\u503c\u5173\u8054\u5230\u952ek del d[k] \u5220\u9664\u952e\u4e3ak\u7684\u9879 k in d \u68c0\u67e5\u5b57\u5178d\u662f\u5426\u5305\u542b\u952e\u4e3ak\u7684\u9879 >>> d = {'age': 42, 'name': 'Gumby'} >>> len(d) 2 >>> d['name'] 'Gumby' >>> d['sex'] # \u83b7\u53d6\u4e0d\u5b58\u5728\u7684\u952e\u65f6 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> KeyError: 'sex' >>> d['age'] = '43' #\u6dfb\u52a0\u7684\u952e\u5b58\u5728\u65f6 >>> d {'age': '43', 'name': 'Gumby'} >>> d['weight'] = '45kg' # \u6dfb\u52a0\u4e0d\u5b58\u5728\u7684\u952e\u65f6 {'age': 43, 'name': 'Gumby', 'weight': '45kg'} >>> del d['weight'] >>> d {'age': 43, 'name': 'Gumby'} >>> del d['sex'] # \u5220\u9664\u4e0d\u5b58\u5728\u7684\u952e\u65f6 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> KeyError: 'sex' >>> 'name' in d True >>> 'sex' in d False \u867d\u7136\u5b57\u5178\u548c\u5217\u8868\u6709\u591a\u4e2a\u76f8\u540c\u4e4b\u5904,\u4f46\u4e5f\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u4e0d\u540c\u4e4b\u5904\u3002 \u952e\u7684\u7c7b\u578b:\u5b57\u5178\u4e2d\u7684\u952e\u53ef\u4ee5\u662f\u6574\u6570,\u4f46\u5e76\u975e\u5fc5\u987b\u662f\u6574\u6570\u3002\u5b57\u5178\u4e2d\u7684\u952e\u53ef\u4ee5\u662f\u4efb\u4f55\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b,\u5982\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\u6216\u5143\u7ec4\u3002 \u81ea\u52a8\u6dfb\u52a0:\u5373\u4fbf\u662f\u5b57\u5178\u4e2d\u539f\u672c\u6ca1\u6709\u7684\u952e,\u4e5f\u53ef\u4ee5\u7ed9\u5b83\u8d4b\u503c,\u8fd9\u5c06\u5728\u5b57\u5178\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u3002\u7136\u800c,\u5982\u679c\u4e0d\u4f7f\u7528append\u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u65b9\u6cd5,\u5c31\u4e0d\u80fd\u7ed9\u5217\u8868\u4e2d\u6ca1\u6709\u7684\u5143\u7d20\u8d4b\u503c\u3002 \u6210\u5458\u8d44\u683c:\u8868\u8fbe\u5f0fk in d(\u5176\u4e2dd\u662f\u4e00\u4e2a\u5b57\u5178)\u67e5\u627e\u7684\u662f\u952e\u800c\u4e0d\u662f\u503c,\u800c\u8868\u8fbe\u5f0fv in list(\u5176\u4e2dlist\u662f\u4e00\u4e2a\u5217\u8868)\u67e5\u627e\u7684\u662f\u503c\u800c\u4e0d\u662f\u7d22\u5f15\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u7684\u529f\u80fd\u5e94\u7528\u4e8e\u5b57\u5178\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u529f\u80fd\u6765\u8bbe\u7f6e\u503c\u7684\u683c\u5f0f,\u8fd9\u4e9b\u503c\u662f\u4f5c\u4e3a\u547d\u540d\u6216\u975e\u547d\u540d\u53c2\u6570\u63d0\u4f9b\u7ed9\u65b9\u6cd5format\u7684\u3002\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b,\u901a\u8fc7\u5728\u5b57\u5178\u4e2d\u5b58\u50a8\u4e00\u7cfb\u5217\u547d\u540d\u7684\u503c,\u53ef\u8ba9\u683c\u5f0f\u8bbe\u7f6e\u66f4\u5bb9\u6613\u4e9b\u3002\u4f8b\u5982,\u53ef\u5728\u5b57\u5178\u4e2d\u5305\u542b\u5404\u79cd\u4fe1\u606f,\u8fd9\u6837\u53ea\u9700\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u63d0\u53d6\u6240\u9700\u7684\u4fe1\u606f\u5373\u53ef\u3002\u4e3a\u6b64,\u5fc5\u987b\u4f7f\u7528format_map\u6765\u6307\u51fa\u4f60\u5c06\u901a\u8fc7\u4e00\u4e2a\u6620\u5c04\u6765\u63d0\u4f9b\u6240\u9700\u7684\u4fe1\u606f\u3002 >>> phonebook {'Beth': '9102', 'Alice': '2341', 'Cecil': '3258'} >>> \"Cecil's phone number is {Cecil}.\".format_map(phonebook) \"Cecil's phone number is 3258.\" \u5b57\u5178\u65b9\u6cd5 1. clear \u65b9\u6cd5clear\u5220\u9664\u6240\u6709\u7684\u5b57\u5178\u9879 >>> d = {'name': 'Gumby', 'age': '24'} >>> d.clear() >>> d {} \u601d\u8003\uff1a d = {} \u4e0e d.clear() \u7684\u533a\u522b 2. copy \u65b9\u6cd5copy\u8fd4\u56de\u4e00\u4e2a\u65b0\u5b57\u5178,\u5176\u5305\u542b\u7684\u952e-\u503c\u5bf9\u4e0e\u539f\u6765\u7684\u5b57\u5178\u76f8\u540c(\u8fd9\u4e2a\u65b9\u6cd5\u6267\u884c\u7684\u662f\u6d45\u590d\u5236,\u56e0\u4e3a\u503c\u672c\u8eab\u662f\u539f\u4ef6,\u800c\u975e\u526f\u672c) >>> x = {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} >>> y = x.copy() >>> y['username'] = 'mlh' >>> y['machines'].remove('bar') >>> y {'username': 'mlh', 'machines': ['foo', 'baz']} >>> x {'username': 'admin', 'machines': ['foo', 'baz']} \u5982\u4f60\u6240\u89c1,\u5f53\u66ff\u6362\u526f\u672c\u4e2d\u7684\u503c\u65f6,\u539f\u4ef6\u4e0d\u53d7\u5f71\u54cd\u3002\u7136\u800c,\u5982\u679c\u4fee\u6539\u526f\u672c\u4e2d\u7684\u503c(\u5c31\u5730\u4fee\u6539\u800c\u4e0d\u662f\u66ff\u6362),\u539f\u4ef6\u4e5f\u5c06\u53d1\u751f\u53d8\u5316,\u56e0\u4e3a\u539f\u4ef6\u6307\u5411\u7684\u4e5f\u662f\u88ab\u4fee\u6539\u7684\u503c \u4e3a\u907f\u514d\u8fd9\u79cd\u95ee\u9898,\u4e00\u79cd\u529e\u6cd5\u662f\u6267\u884c\u6df1\u590d\u5236,\u5373\u540c\u65f6\u590d\u5236\u503c\u53ca\u5176\u5305\u542b\u7684\u6240\u6709\u503c,\u7b49\u7b49\u3002\u4e3a\u6b64,\u53ef\u4f7f\u7528\u6a21\u5757copy\u4e2d\u7684\u51fd\u6570deepcopy\u3002 >>> from copy import deepcopy >>> d = {} >>> d['names'] = ['Alfred', 'Bertrand'] >>> c = d.copy() >>> dc = deepcopy(d) >>> d['names'].append('Clive') >>> c {'names': ['Alfred', 'Bertrand', 'Clive']} >>> dc {'names': ['Alfred', 'Bertrand']} 3. fromkeys \u65b9\u6cd5fromkeys\u521b\u5efa\u4e00\u4e2a\u65b0\u5b57\u5178,\u5176\u4e2d\u5305\u542b\u6307\u5b9a\u7684\u952e,\u4e14\u6bcf\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\u90fd\u662fNone\u3002 >>> {}.fromkeys(['name', 'age']) {'age': None, 'name': None} \u8fd9\u4e2a\u793a\u4f8b\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u5b57\u5178,\u518d\u5bf9\u5176\u8c03\u7528\u65b9\u6cd5fromkeys\u6765\u521b\u5efa\u53e6\u4e00\u4e2a\u5b57\u5178,\u8fd9\u663e\u5f97\u6709\u70b9\u591a\u4f59\u3002\u4f60\u53ef\u4ee5\u4e0d\u8fd9\u6837\u505a,\u800c\u662f\u76f4\u63a5\u5bf9dict\u8c03\u7528\u65b9\u6cd5fromkeys\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u503cNone,\u53ef\u63d0\u4f9b\u7279\u5b9a\u7684\u503c\u3002 >>> dict.fromkeys(['name', 'age']) {'age': None, 'name': None} >>> dict.fromkeys(['name', 'age'], '(unknown)') {'age': '(unknown)', 'name': '(unknown)'} 4. get \u65b9\u6cd5get\u662f\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u9879\u7684\u503c\u3002\u4e0a\u8fb9\u63d0\u5230\u901a\u8fc7\u952e\u83b7\u53d6\u503c\u65f6\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u62a5\u9519\uff0c\u4f7f\u7528get\u65b9\u6cd5\u8bbf\u95ee\u65f6\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNone >>> d = {} >>> g = d.get('name') >>> print(g) None \u5982\u4f60\u6240\u89c1,\u4f7f\u7528get\u6765\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u952e\u65f6,\u6ca1\u6709\u5f15\u53d1\u5f02\u5e38,\u800c\u662f\u8fd4\u56deNone\u3002\u4f60\u53ef\u6307\u5b9a\u201c\u9ed8\u8ba4\u201d\u503c,\u8fd9\u6837\u5c06\u8fd4\u56de\u4f60\u6307\u5b9a\u7684\u503c\u800c\u4e0d\u662fNone\u3002 >>> d.get('name','N/A') 'N/A' 5. items \u65b9\u6cd5items\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b57\u5178\u9879\u7684\u5217\u8868,\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e3a(key, value)\u7684\u5f62\u5f0f\u3002\u5b57\u5178\u9879\u5728\u5217\u8868\u4e2d\u7684\u6392\u5217\u987a\u5e8f\u4e0d\u786e\u5b9a\u3002 >>> d = {'title': 'Python Web Site', 'url': 'http://www.python.org', 'spam': 0} >>> d.items() dict_items([('title', 'Python Web Site'), ('url', 'http://www.python.org'), ('spam', 0)]) \u8fd4\u56de\u503c\u5c5e\u4e8e\u4e00\u79cd\u540d\u4e3a\u5b57\u5178\u89c6\u56fe\u7684\u7279\u6b8a\u7c7b\u578b\u3002\u4f60\u8fd8\u53ef\u786e\u5b9a\u5176\u957f\u5ea6\u4ee5\u53ca\u5bf9\u5176\u6267\u884c\u6210\u5458\u8d44\u683c\u68c0\u67e5\u3002 >>> it = d.items() >>> len(it) 3 >>> ('spam', 0) in it True \u89c6\u56fe\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u4e0d\u590d\u5236,\u5b83\u4eec\u59cb\u7ec8\u662f\u5e95\u5c42\u5b57\u5178\u7684\u53cd\u6620,\u5373\u4fbf\u4f60\u4fee\u6539\u4e86\u5e95\u5c42\u5b57\u5178\u4ea6\u5982\u6b64\u3002 >>> d['spam'] = 1 >>> ('spam', 0) in it False >>> d['spam'] = 0 >>> ('spam', 0) in it True \u7136\u800c,\u5982\u679c\u4f60\u8981\u5c06\u5b57\u5178\u9879\u590d\u5236\u5230\u5217\u8868\u4e2d >>> list(d.items()) [('spam', 0), ('title', 'Python Web Site'), ('url', 'http://www.python.org')] 6. keys \u65b9\u6cd5keys\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\u89c6\u56fe,\u5176\u4e2d\u5305\u542b\u6307\u5b9a\u5b57\u5178\u4e2d\u7684\u952e\u3002 7. pop \u65b9\u6cd5pop\u53ef\u7528\u4e8e\u83b7\u53d6\u4e0e\u6307\u5b9a\u952e\u76f8\u5173\u8054\u7684\u503c,\u5e76\u5c06\u8be5\u952e\uf02d\u503c\u5bf9\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u3002 >>> d = {'x': 1, 'y': 2} >>> d.pop('x') # \u5fc5\u987b\u4f20\u5165key\uff0c\u4e0d\u4f20\u4f1a\u62a5\u9519 1 >>> d {'y': 2} 8. popitem \u65b9\u6cd5popitem \u7c7b\u4f3c\u4e8elist.pop,\u4f46list.pop\u5f39\u51fa\u5217\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20,\u800c popitem\u968f\u673a\u5730\u5f39\u51fa\u4e00\u4e2a\u5b57\u5178\u9879,\u56e0\u4e3a\u5b57\u5178\u9879\u7684\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684,\u6ca1\u6709\u201c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u201d\u7684\u6982\u5ff5\u3002\u5982\u679c\u4f60\u8981\u4ee5\u9ad8\u6548\u5730\u65b9\u5f0f\u9010\u4e2a\u5220\u9664\u5e76\u5904\u7406\u6240\u6709\u5b57\u5178\u9879,\u8fd9\u53ef\u80fd\u5f88\u6709\u7528,\u56e0\u4e3a\u8fd9\u6837\u65e0\u9700\u5148\u83b7\u53d6\u952e\u5217\u8868\u3002 >>> d = {'url': 'http://www.python.org', 'spam': 0, 'title': 'Python Web Site'} >>> d.popitem() ('url', 'http://www.python.org') >>> d {'spam': 0, 'title': 'Python Web Site'} 9. setdefault \u65b9\u6cd5setdefault \u6709\u70b9\u50cfget,\u56e0\u4e3a\u5b83\u4e5f\u83b7\u53d6\u4e0e\u6307\u5b9a\u952e\u76f8\u5173\u8054\u7684\u503c,\u4f46\u9664\u6b64\u4e4b\u5916, setdefault\u8fd8\u5728\u5b57\u5178\u4e0d\u5305\u542b\u6307\u5b9a\u7684\u952e\u65f6,\u5728\u5b57\u5178\u4e2d\u6dfb\u52a0\u6307\u5b9a\u7684\u952e-\u503c\u5bf9 >>> d = {} >>> d.setdefault('name', 'N/A') 'N/A' >>> d {'name': 'N/A'} >>> d['name'] = 'Gumby' >>> d.setdefault('name', 'N/A') 'Gumby' >>> d {'name': 'Gumby'} \u5982\u4f60\u6240\u89c1,\u6307\u5b9a\u7684\u952e\u4e0d\u5b58\u5728\u65f6,setdefault\u8fd4\u56de\u6307\u5b9a\u7684\u503c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0\u5b57\u5178\u3002\u5982\u679c\u6307\u5b9a\u7684\u952e\u5b58\u5728,\u5c31\u8fd4\u56de\u5176\u503c,\u5e76\u4fdd\u6301\u5b57\u5178\u4e0d\u53d8\u3002\u4e0eget\u4e00\u6837,\u503c\u662f\u53ef\u9009\u7684;\u5982\u679c\u6ca1\u6709\u6307\u5b9a,\u9ed8\u8ba4\u4e3aNone\u3002 >>> d = {} >>> print(d.setdefault('name')) None >>> d {'name': None} 10. update \u65b9\u6cd5update\u4f7f\u7528\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u9879\u6765\u66f4\u65b0\u53e6\u4e00\u4e2a\u5b57\u5178\u3002 >>> d = { ... 'title': 'Python Web Site', ... 'url': 'http://www.python.org', ... 'changed': 'Mar 14 22:09:15 MET 2016' ... } >>> x = {'title': 'Python Language Website', 'page': 'index.html'} >>> d.update(x) >>> d {'url': 'http://www.python.org', 'changed':'Mar 14 22:09:15 MET 2016', 'title': 'Python Language Website', 'page': 'index.html'} \u53ef\u4ee5\u770b\u51fad\u4e2d\u7684\u952e'title'\u88ab\u66f4\u65b0\u4e86\uff0c\u4f46\u53ea\u4f1a\u5c06x\u548cd\u4e2d\u90fd\u6709\u7684\u952e\u66f4\u65b0, \u800c\u6ca1\u6709\u7684\u9879\u4f1a\u6dfb\u52a0 11. values \u65b9\u6cd5values\u8fd4\u56de\u4e00\u4e2a\u7531\u5b57\u5178\u4e2d\u7684\u503c\u7ec4\u6210\u7684\u5b57\u5178\u89c6\u56fe\u3002\u4e0d\u540c\u4e8e\u65b9\u6cd5keys,\u65b9\u6cd5values\u8fd4\u56de\u7684\u89c6\u56fe\u53ef\u80fd\u5305\u542b\u91cd\u590d\u7684\u503c >>> d = {} >>> d[1] = 1 >>> d[2] = 2 >>> d[3] = 3 >>> d[4] = 1 >>> d.values() dict_values([1, 2, 3, 1]) \u96c6\u5408 Python\u4e5f\u5305\u542b\u6709 \u96c6\u5408 \u7c7b\u578b\u3002\u96c6\u5408\u662f\u7531\u4e0d\u91cd\u590d\u5143\u7d20\u7ec4\u6210\u7684\u65e0\u5e8f\u7684\u96c6\u3002\u5b83\u7684\u57fa\u672c\u7528\u6cd5\u5305\u62ec\u6210\u5458\u68c0\u6d4b\u548c\u6d88\u9664\u91cd\u590d\u5143\u7d20\u3002\u96c6\u5408\u5bf9\u8c61\u4e5f\u652f\u6301\u50cf \u8054\u5408\uff0c\u4ea4\u96c6\uff0c\u5dee\u96c6\uff0c\u5bf9\u79f0\u5dee\u5206\u7b49\u6570\u5b66\u8fd0\u7b97\u3002 \u82b1\u62ec\u53f7\u6216 set() \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u96c6\u5408\u3002\u6ce8\u610f\uff1a\u8981\u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u4f60\u53ea\u80fd\u7528 set() \u800c\u4e0d\u80fd\u7528 {} \uff0c\u56e0\u4e3a\u540e\u8005\u662f\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178 >>> basket = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'} >>> print(basket) # show that duplicates have been removed {'orange', 'banana', 'pear', 'apple'} >>> 'orange' in basket # fast membership testing True >>> 'crabgrass' in basket False >>> a = set('abracadabra') >>> b = set('alacazam') >>> a # unique letters in a {'a', 'r', 'b', 'c', 'd'} >>> a - b # letters in a but not in b {'r', 'd', 'b'} >>> a | b # letters in a or b or both {'a', 'c', 'r', 'd', 'b', 'm', 'z', 'l'} >>> a & b # letters in both a and b {'a', 'c'} >>> a ^ b # letters in a or b but not both {'r', 'd', 'b', 'm', 'z', 'l'}","title":"\u5b57\u5178"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#_1","text":"\u5c06\u4e00\u7cfb\u5217\u7684\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u901a\u8fc7\u6570\u503c\u6765\u8bbf\u95ee\u7684\u6570\u636e\u7ed3\u6784\u79f0\u4e3a\u5e8f\u5217\uff0c\u800c\u901a\u8fc7\u901a\u8fc7\u540d\u79f0\u6765\u8bbf\u95ee\u5404\u4e2a\u503c\u7684\u6570\u636e\u7ed3\u6784\u79f0\u4e3a\u5b57\u5178\uff0c\u5b57\u5178\u662fpython\u4e2d\u552f\u4e00\u7684\u5185\u7f6e\u6620\u5c04\u7c7b\u578b\uff0c\u5176\u4e2d\u7684\u503c\u4e0d\u6309\u987a\u5e8f\u6392\u5217\uff0c\u800c\u662f\u5b58\u50a8\u5728\u952e\u4e0b\uff0c\u8fd9\u79cd\u901a\u8fc7\u952e\u503c\u7684\u5b58\u50a8\u65b9\u5f0f\u79f0\u4e3a\u6620\u5c04\uff08mapping\uff09,\u5217\u8868\u4f7f\u7528\u7684\u662f\u4e2d\u62ec\u53f7[]\uff0c\u5143\u7ec4\u4f7f\u7528\u5c0f\u62ec\u53f7()\uff0c\u5b57\u5178\u4f7f\u7528\u5927\u62ec\u53f7{}","title":"\u5b57\u5178\u6982\u8ff0"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#_2","text":"\u5b57\u5178\u521b\u5efa\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f {key1: value1, key2: value2,...} \u5b57\u5178\u7531\u952e\u548c\u5176\u5bf9\u5e94\u7684\u503c\u7ec4\u6210\uff0c\u952e\u503c\u7ec4\u5408\u79f0\u4e3a \u9879\uff08item\uff09 ,\u6bcf\u4e2a\u952e\u4e0e\u503c\u4e4b\u95f4\u4f7f\u7528\u5192\u53f7\uff08:\uff09\u5206\u5272\uff0c\u5982\u679c\u6709\u591a\u4e2a\u9879\u7684\u8bdd\uff0c\u4e2d\u95f4\u7528\u9017\u53f7\uff08,\uff09\u5206\u5272\uff0c\u6bcf\u4e2a\u952e\u90fd\u5fc5\u987b\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u4f8b\u5982\uff1a phonebook = {'Alice': '2432', 'John': '3433'} \u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 dict \u4ece\u5176\u4ed6\u6620\u5c04\u6216\u952e\u503c\u5bf9\u5e8f\u5217\u521b\u5efa\u5b57\u5178 >>> items = [('name', 'Gumby'), ('age', '42')] >>> d = dict(items) >>> d {'age': 42, 'name': 'Gumby'} >>> d['name'] 'Gumby' \u8fd8\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u8bcd\u5b9e\u53c2\u6389\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 >>> d = dict(name='Gumby', age=42) >>> d {'age': 42, 'name': 'Gumby'}","title":"\u5b57\u5178\u7684\u521b\u5efa\u548c\u4f7f\u7528"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#_3","text":"len(d) \u8fd4\u56de\u5b57\u5178d\u5305\u542b\u7684\u9879\u6570 d[k] \u8fd4\u56de\u4e0e\u952ek\u5173\u8054\u7684\u503c d[k] = v \u5c06\u503c\u5173\u8054\u5230\u952ek del d[k] \u5220\u9664\u952e\u4e3ak\u7684\u9879 k in d \u68c0\u67e5\u5b57\u5178d\u662f\u5426\u5305\u542b\u952e\u4e3ak\u7684\u9879 >>> d = {'age': 42, 'name': 'Gumby'} >>> len(d) 2 >>> d['name'] 'Gumby' >>> d['sex'] # \u83b7\u53d6\u4e0d\u5b58\u5728\u7684\u952e\u65f6 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> KeyError: 'sex' >>> d['age'] = '43' #\u6dfb\u52a0\u7684\u952e\u5b58\u5728\u65f6 >>> d {'age': '43', 'name': 'Gumby'} >>> d['weight'] = '45kg' # \u6dfb\u52a0\u4e0d\u5b58\u5728\u7684\u952e\u65f6 {'age': 43, 'name': 'Gumby', 'weight': '45kg'} >>> del d['weight'] >>> d {'age': 43, 'name': 'Gumby'} >>> del d['sex'] # \u5220\u9664\u4e0d\u5b58\u5728\u7684\u952e\u65f6 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> KeyError: 'sex' >>> 'name' in d True >>> 'sex' in d False \u867d\u7136\u5b57\u5178\u548c\u5217\u8868\u6709\u591a\u4e2a\u76f8\u540c\u4e4b\u5904,\u4f46\u4e5f\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u4e0d\u540c\u4e4b\u5904\u3002 \u952e\u7684\u7c7b\u578b:\u5b57\u5178\u4e2d\u7684\u952e\u53ef\u4ee5\u662f\u6574\u6570,\u4f46\u5e76\u975e\u5fc5\u987b\u662f\u6574\u6570\u3002\u5b57\u5178\u4e2d\u7684\u952e\u53ef\u4ee5\u662f\u4efb\u4f55\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b,\u5982\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\u6216\u5143\u7ec4\u3002 \u81ea\u52a8\u6dfb\u52a0:\u5373\u4fbf\u662f\u5b57\u5178\u4e2d\u539f\u672c\u6ca1\u6709\u7684\u952e,\u4e5f\u53ef\u4ee5\u7ed9\u5b83\u8d4b\u503c,\u8fd9\u5c06\u5728\u5b57\u5178\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u3002\u7136\u800c,\u5982\u679c\u4e0d\u4f7f\u7528append\u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u65b9\u6cd5,\u5c31\u4e0d\u80fd\u7ed9\u5217\u8868\u4e2d\u6ca1\u6709\u7684\u5143\u7d20\u8d4b\u503c\u3002 \u6210\u5458\u8d44\u683c:\u8868\u8fbe\u5f0fk in d(\u5176\u4e2dd\u662f\u4e00\u4e2a\u5b57\u5178)\u67e5\u627e\u7684\u662f\u952e\u800c\u4e0d\u662f\u503c,\u800c\u8868\u8fbe\u5f0fv in list(\u5176\u4e2dlist\u662f\u4e00\u4e2a\u5217\u8868)\u67e5\u627e\u7684\u662f\u503c\u800c\u4e0d\u662f\u7d22\u5f15\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u7684\u529f\u80fd\u5e94\u7528\u4e8e\u5b57\u5178\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u529f\u80fd\u6765\u8bbe\u7f6e\u503c\u7684\u683c\u5f0f,\u8fd9\u4e9b\u503c\u662f\u4f5c\u4e3a\u547d\u540d\u6216\u975e\u547d\u540d\u53c2\u6570\u63d0\u4f9b\u7ed9\u65b9\u6cd5format\u7684\u3002\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b,\u901a\u8fc7\u5728\u5b57\u5178\u4e2d\u5b58\u50a8\u4e00\u7cfb\u5217\u547d\u540d\u7684\u503c,\u53ef\u8ba9\u683c\u5f0f\u8bbe\u7f6e\u66f4\u5bb9\u6613\u4e9b\u3002\u4f8b\u5982,\u53ef\u5728\u5b57\u5178\u4e2d\u5305\u542b\u5404\u79cd\u4fe1\u606f,\u8fd9\u6837\u53ea\u9700\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u63d0\u53d6\u6240\u9700\u7684\u4fe1\u606f\u5373\u53ef\u3002\u4e3a\u6b64,\u5fc5\u987b\u4f7f\u7528format_map\u6765\u6307\u51fa\u4f60\u5c06\u901a\u8fc7\u4e00\u4e2a\u6620\u5c04\u6765\u63d0\u4f9b\u6240\u9700\u7684\u4fe1\u606f\u3002 >>> phonebook {'Beth': '9102', 'Alice': '2341', 'Cecil': '3258'} >>> \"Cecil's phone number is {Cecil}.\".format_map(phonebook) \"Cecil's phone number is 3258.\"","title":"\u5b57\u5178\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#_4","text":"","title":"\u5b57\u5178\u65b9\u6cd5"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#1-clear","text":"\u65b9\u6cd5clear\u5220\u9664\u6240\u6709\u7684\u5b57\u5178\u9879 >>> d = {'name': 'Gumby', 'age': '24'} >>> d.clear() >>> d {} \u601d\u8003\uff1a d = {} \u4e0e d.clear() \u7684\u533a\u522b","title":"1. clear"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#2-copy","text":"\u65b9\u6cd5copy\u8fd4\u56de\u4e00\u4e2a\u65b0\u5b57\u5178,\u5176\u5305\u542b\u7684\u952e-\u503c\u5bf9\u4e0e\u539f\u6765\u7684\u5b57\u5178\u76f8\u540c(\u8fd9\u4e2a\u65b9\u6cd5\u6267\u884c\u7684\u662f\u6d45\u590d\u5236,\u56e0\u4e3a\u503c\u672c\u8eab\u662f\u539f\u4ef6,\u800c\u975e\u526f\u672c) >>> x = {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} >>> y = x.copy() >>> y['username'] = 'mlh' >>> y['machines'].remove('bar') >>> y {'username': 'mlh', 'machines': ['foo', 'baz']} >>> x {'username': 'admin', 'machines': ['foo', 'baz']} \u5982\u4f60\u6240\u89c1,\u5f53\u66ff\u6362\u526f\u672c\u4e2d\u7684\u503c\u65f6,\u539f\u4ef6\u4e0d\u53d7\u5f71\u54cd\u3002\u7136\u800c,\u5982\u679c\u4fee\u6539\u526f\u672c\u4e2d\u7684\u503c(\u5c31\u5730\u4fee\u6539\u800c\u4e0d\u662f\u66ff\u6362),\u539f\u4ef6\u4e5f\u5c06\u53d1\u751f\u53d8\u5316,\u56e0\u4e3a\u539f\u4ef6\u6307\u5411\u7684\u4e5f\u662f\u88ab\u4fee\u6539\u7684\u503c \u4e3a\u907f\u514d\u8fd9\u79cd\u95ee\u9898,\u4e00\u79cd\u529e\u6cd5\u662f\u6267\u884c\u6df1\u590d\u5236,\u5373\u540c\u65f6\u590d\u5236\u503c\u53ca\u5176\u5305\u542b\u7684\u6240\u6709\u503c,\u7b49\u7b49\u3002\u4e3a\u6b64,\u53ef\u4f7f\u7528\u6a21\u5757copy\u4e2d\u7684\u51fd\u6570deepcopy\u3002 >>> from copy import deepcopy >>> d = {} >>> d['names'] = ['Alfred', 'Bertrand'] >>> c = d.copy() >>> dc = deepcopy(d) >>> d['names'].append('Clive') >>> c {'names': ['Alfred', 'Bertrand', 'Clive']} >>> dc {'names': ['Alfred', 'Bertrand']}","title":"2. copy"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#3-fromkeys","text":"\u65b9\u6cd5fromkeys\u521b\u5efa\u4e00\u4e2a\u65b0\u5b57\u5178,\u5176\u4e2d\u5305\u542b\u6307\u5b9a\u7684\u952e,\u4e14\u6bcf\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\u90fd\u662fNone\u3002 >>> {}.fromkeys(['name', 'age']) {'age': None, 'name': None} \u8fd9\u4e2a\u793a\u4f8b\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u5b57\u5178,\u518d\u5bf9\u5176\u8c03\u7528\u65b9\u6cd5fromkeys\u6765\u521b\u5efa\u53e6\u4e00\u4e2a\u5b57\u5178,\u8fd9\u663e\u5f97\u6709\u70b9\u591a\u4f59\u3002\u4f60\u53ef\u4ee5\u4e0d\u8fd9\u6837\u505a,\u800c\u662f\u76f4\u63a5\u5bf9dict\u8c03\u7528\u65b9\u6cd5fromkeys\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u503cNone,\u53ef\u63d0\u4f9b\u7279\u5b9a\u7684\u503c\u3002 >>> dict.fromkeys(['name', 'age']) {'age': None, 'name': None} >>> dict.fromkeys(['name', 'age'], '(unknown)') {'age': '(unknown)', 'name': '(unknown)'}","title":"3. fromkeys"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#4-get","text":"\u65b9\u6cd5get\u662f\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u9879\u7684\u503c\u3002\u4e0a\u8fb9\u63d0\u5230\u901a\u8fc7\u952e\u83b7\u53d6\u503c\u65f6\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u62a5\u9519\uff0c\u4f7f\u7528get\u65b9\u6cd5\u8bbf\u95ee\u65f6\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNone >>> d = {} >>> g = d.get('name') >>> print(g) None \u5982\u4f60\u6240\u89c1,\u4f7f\u7528get\u6765\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u952e\u65f6,\u6ca1\u6709\u5f15\u53d1\u5f02\u5e38,\u800c\u662f\u8fd4\u56deNone\u3002\u4f60\u53ef\u6307\u5b9a\u201c\u9ed8\u8ba4\u201d\u503c,\u8fd9\u6837\u5c06\u8fd4\u56de\u4f60\u6307\u5b9a\u7684\u503c\u800c\u4e0d\u662fNone\u3002 >>> d.get('name','N/A') 'N/A'","title":"4. get"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#5-items","text":"\u65b9\u6cd5items\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b57\u5178\u9879\u7684\u5217\u8868,\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e3a(key, value)\u7684\u5f62\u5f0f\u3002\u5b57\u5178\u9879\u5728\u5217\u8868\u4e2d\u7684\u6392\u5217\u987a\u5e8f\u4e0d\u786e\u5b9a\u3002 >>> d = {'title': 'Python Web Site', 'url': 'http://www.python.org', 'spam': 0} >>> d.items() dict_items([('title', 'Python Web Site'), ('url', 'http://www.python.org'), ('spam', 0)]) \u8fd4\u56de\u503c\u5c5e\u4e8e\u4e00\u79cd\u540d\u4e3a\u5b57\u5178\u89c6\u56fe\u7684\u7279\u6b8a\u7c7b\u578b\u3002\u4f60\u8fd8\u53ef\u786e\u5b9a\u5176\u957f\u5ea6\u4ee5\u53ca\u5bf9\u5176\u6267\u884c\u6210\u5458\u8d44\u683c\u68c0\u67e5\u3002 >>> it = d.items() >>> len(it) 3 >>> ('spam', 0) in it True \u89c6\u56fe\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u4e0d\u590d\u5236,\u5b83\u4eec\u59cb\u7ec8\u662f\u5e95\u5c42\u5b57\u5178\u7684\u53cd\u6620,\u5373\u4fbf\u4f60\u4fee\u6539\u4e86\u5e95\u5c42\u5b57\u5178\u4ea6\u5982\u6b64\u3002 >>> d['spam'] = 1 >>> ('spam', 0) in it False >>> d['spam'] = 0 >>> ('spam', 0) in it True \u7136\u800c,\u5982\u679c\u4f60\u8981\u5c06\u5b57\u5178\u9879\u590d\u5236\u5230\u5217\u8868\u4e2d >>> list(d.items()) [('spam', 0), ('title', 'Python Web Site'), ('url', 'http://www.python.org')]","title":"5. items"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#6-keys","text":"\u65b9\u6cd5keys\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\u89c6\u56fe,\u5176\u4e2d\u5305\u542b\u6307\u5b9a\u5b57\u5178\u4e2d\u7684\u952e\u3002","title":"6. keys"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#7-pop","text":"\u65b9\u6cd5pop\u53ef\u7528\u4e8e\u83b7\u53d6\u4e0e\u6307\u5b9a\u952e\u76f8\u5173\u8054\u7684\u503c,\u5e76\u5c06\u8be5\u952e\uf02d\u503c\u5bf9\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u3002 >>> d = {'x': 1, 'y': 2} >>> d.pop('x') # \u5fc5\u987b\u4f20\u5165key\uff0c\u4e0d\u4f20\u4f1a\u62a5\u9519 1 >>> d {'y': 2}","title":"7. pop"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#8-popitem","text":"\u65b9\u6cd5popitem \u7c7b\u4f3c\u4e8elist.pop,\u4f46list.pop\u5f39\u51fa\u5217\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20,\u800c popitem\u968f\u673a\u5730\u5f39\u51fa\u4e00\u4e2a\u5b57\u5178\u9879,\u56e0\u4e3a\u5b57\u5178\u9879\u7684\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684,\u6ca1\u6709\u201c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u201d\u7684\u6982\u5ff5\u3002\u5982\u679c\u4f60\u8981\u4ee5\u9ad8\u6548\u5730\u65b9\u5f0f\u9010\u4e2a\u5220\u9664\u5e76\u5904\u7406\u6240\u6709\u5b57\u5178\u9879,\u8fd9\u53ef\u80fd\u5f88\u6709\u7528,\u56e0\u4e3a\u8fd9\u6837\u65e0\u9700\u5148\u83b7\u53d6\u952e\u5217\u8868\u3002 >>> d = {'url': 'http://www.python.org', 'spam': 0, 'title': 'Python Web Site'} >>> d.popitem() ('url', 'http://www.python.org') >>> d {'spam': 0, 'title': 'Python Web Site'}","title":"8. popitem"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#9-setdefault","text":"\u65b9\u6cd5setdefault \u6709\u70b9\u50cfget,\u56e0\u4e3a\u5b83\u4e5f\u83b7\u53d6\u4e0e\u6307\u5b9a\u952e\u76f8\u5173\u8054\u7684\u503c,\u4f46\u9664\u6b64\u4e4b\u5916, setdefault\u8fd8\u5728\u5b57\u5178\u4e0d\u5305\u542b\u6307\u5b9a\u7684\u952e\u65f6,\u5728\u5b57\u5178\u4e2d\u6dfb\u52a0\u6307\u5b9a\u7684\u952e-\u503c\u5bf9 >>> d = {} >>> d.setdefault('name', 'N/A') 'N/A' >>> d {'name': 'N/A'} >>> d['name'] = 'Gumby' >>> d.setdefault('name', 'N/A') 'Gumby' >>> d {'name': 'Gumby'} \u5982\u4f60\u6240\u89c1,\u6307\u5b9a\u7684\u952e\u4e0d\u5b58\u5728\u65f6,setdefault\u8fd4\u56de\u6307\u5b9a\u7684\u503c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0\u5b57\u5178\u3002\u5982\u679c\u6307\u5b9a\u7684\u952e\u5b58\u5728,\u5c31\u8fd4\u56de\u5176\u503c,\u5e76\u4fdd\u6301\u5b57\u5178\u4e0d\u53d8\u3002\u4e0eget\u4e00\u6837,\u503c\u662f\u53ef\u9009\u7684;\u5982\u679c\u6ca1\u6709\u6307\u5b9a,\u9ed8\u8ba4\u4e3aNone\u3002 >>> d = {} >>> print(d.setdefault('name')) None >>> d {'name': None}","title":"9. setdefault"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#10-update","text":"\u65b9\u6cd5update\u4f7f\u7528\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u9879\u6765\u66f4\u65b0\u53e6\u4e00\u4e2a\u5b57\u5178\u3002 >>> d = { ... 'title': 'Python Web Site', ... 'url': 'http://www.python.org', ... 'changed': 'Mar 14 22:09:15 MET 2016' ... } >>> x = {'title': 'Python Language Website', 'page': 'index.html'} >>> d.update(x) >>> d {'url': 'http://www.python.org', 'changed':'Mar 14 22:09:15 MET 2016', 'title': 'Python Language Website', 'page': 'index.html'} \u53ef\u4ee5\u770b\u51fad\u4e2d\u7684\u952e'title'\u88ab\u66f4\u65b0\u4e86\uff0c\u4f46\u53ea\u4f1a\u5c06x\u548cd\u4e2d\u90fd\u6709\u7684\u952e\u66f4\u65b0, \u800c\u6ca1\u6709\u7684\u9879\u4f1a\u6dfb\u52a0","title":"10. update"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#11-values","text":"\u65b9\u6cd5values\u8fd4\u56de\u4e00\u4e2a\u7531\u5b57\u5178\u4e2d\u7684\u503c\u7ec4\u6210\u7684\u5b57\u5178\u89c6\u56fe\u3002\u4e0d\u540c\u4e8e\u65b9\u6cd5keys,\u65b9\u6cd5values\u8fd4\u56de\u7684\u89c6\u56fe\u53ef\u80fd\u5305\u542b\u91cd\u590d\u7684\u503c >>> d = {} >>> d[1] = 1 >>> d[2] = 2 >>> d[3] = 3 >>> d[4] = 1 >>> d.values() dict_values([1, 2, 3, 1])","title":"11.  values"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u5178/#_5","text":"Python\u4e5f\u5305\u542b\u6709 \u96c6\u5408 \u7c7b\u578b\u3002\u96c6\u5408\u662f\u7531\u4e0d\u91cd\u590d\u5143\u7d20\u7ec4\u6210\u7684\u65e0\u5e8f\u7684\u96c6\u3002\u5b83\u7684\u57fa\u672c\u7528\u6cd5\u5305\u62ec\u6210\u5458\u68c0\u6d4b\u548c\u6d88\u9664\u91cd\u590d\u5143\u7d20\u3002\u96c6\u5408\u5bf9\u8c61\u4e5f\u652f\u6301\u50cf \u8054\u5408\uff0c\u4ea4\u96c6\uff0c\u5dee\u96c6\uff0c\u5bf9\u79f0\u5dee\u5206\u7b49\u6570\u5b66\u8fd0\u7b97\u3002 \u82b1\u62ec\u53f7\u6216 set() \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u96c6\u5408\u3002\u6ce8\u610f\uff1a\u8981\u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u4f60\u53ea\u80fd\u7528 set() \u800c\u4e0d\u80fd\u7528 {} \uff0c\u56e0\u4e3a\u540e\u8005\u662f\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178 >>> basket = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'} >>> print(basket) # show that duplicates have been removed {'orange', 'banana', 'pear', 'apple'} >>> 'orange' in basket # fast membership testing True >>> 'crabgrass' in basket False >>> a = set('abracadabra') >>> b = set('alacazam') >>> a # unique letters in a {'a', 'r', 'b', 'c', 'd'} >>> a - b # letters in a but not in b {'r', 'd', 'b'} >>> a | b # letters in a or b or both {'a', 'c', 'r', 'd', 'b', 'm', 'z', 'l'} >>> a & b # letters in both a and b {'a', 'c'} >>> a ^ b # letters in a or b but not both {'r', 'd', 'b', 'm', 'z', 'l'}","title":"\u96c6\u5408"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/","text":"\u5b57\u7b26\u4e32\u6982\u8ff0 \u5b57\u7b26\u4e32\u53ca\u8f6c\u4e49 \u5728python\u4e2d\u8868\u793a\u5b57\u7b26\u4e32\u65e2\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7\uff08 ' \uff09,\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\uff08 \" \uff09 >>> \"Hello world!\" 'Hello world' >>> 'Hello world!' 'Hello world!' \u4f46\u6709\u65f6\u5019\u6211\u4eec\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u5305\u542b\u5f15\u53f7\uff0c\u4f8b\u5982\uff1a Let's go \u6216\u8005 \u201dhello world\u201c, she said \uff0cpython\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u53ea\u6709\u5355\u5f15\u53f7\u65f6\u53ef\u4ee5\u5728\u5b57\u7b26\u4e24\u4fa7\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5982\u679c\u5b57\u7b26\u4e2d\u53ea\u6709\u53cc\u5f15\u53f7\u65f6\u53ef\u4ee5\u5728\u5b57\u7b26\u4e24\u4fa7\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u793a\u4f8b\uff1a >>> \"Let's go\" \"Let's go\" >>> '\u201dhello world\u201c, she said' '\u201dhello world\u201c, she said' >>> 'Let's go' File \"<stdin>\", line 1 'Let's go' ^ SyntaxError: invalid syntax \u5b9e\u9645\u4e0a\uff0c\u5e76\u975e\u5fc5\u987b\u8fd9\u6837\u505a\uff08\u8fd9\u6837\u505a\u53ea\u662f\u51fa\u4e8e\u65b9\u4fbf\u8003\u8651\uff09\u3002\u53ef\u4f7f\u7528\u53cd\u659c\u6760\uff08\\\uff09\u5bf9\u5f15\u53f7\u8fdb\u884c\u8f6c\u4e49 >>> 'Let\\'s go' \"Let's go\" str \u548c repr \u4f60\u53ef\u901a\u8fc7\u4f7f\u7528\u51fd\u6570str\u548crepr\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e24\u79cd\u673a\u5236\u3002\u4f7f\u7528str\u80fd\u4ee5\u5408\u7406\u7684\u65b9\u5f0f\u5c06\u503c\u8f6c\u6362\u4e3a\u7528\u6237\u80fd\u591f\u770b\u61c2\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u5c3d\u53ef\u80fd\u5c06\u7279\u6b8a\u5b57\u7b26\u7f16\u7801\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u5b57\u7b26\u3002\u7136\u800c\uff0c\u4f7f\u7528repr\u65f6\uff0c\u901a\u5e38\u4f1a\u83b7\u5f97\u503c\u7684\u5408\u6cd5Python\u8868\u8fbe\u5f0f\u8868\u793a\u3002 >>> print(repr(\"Hello,\\nworld!\")) 'Hello,\\nworld!' >>> print(str(\"Hello,\\nworld!\")) Hello, world! >>> s = \"\"\" ... Hello ... World ... \"\"\" >>> print(repr(s)) '\\nHello,\\nworld\\n' \u957f\u5b57\u7b26\u4e32\u3001\u539f\u59cb\u5b57\u7b26\u4e32\u548c\u5b57\u8282 1. \u957f\u5b57\u7b26\u4e32 \u5982\u679c\u8981\u8868\u793a\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u5f15\u53f7\uff08'''\uff09\u6216\u8005 \uff08\"\"\"\uff09 >>> print('''This is a very long string. It continues here. And it's not over yet. \"Hello, world!\" Still here.''') 2. \u539f\u59cb\u5b57\u7b26\u4e32 \u539f\u59cb\u5b57\u7b26\u4e32\u4e0d\u4ee5\u7279\u6b8a\u65b9\u5f0f\u5904\u7406\u53cd\u659c\u6760\uff0c\u56e0\u6b64\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u5f88\u6709\u7528\u2461\u3002\u5728\u5e38\u89c4\u5b57\u7b26\u4e32\u4e2d\uff0c\u53cd\u659c \u6760\u626e\u6f14\u7740\u7279\u6b8a\u89d2\u8272\uff1a\u5b83\u5bf9\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\uff0c\u8ba9\u4f60\u80fd\u591f\u5728\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u539f\u672c\u65e0\u6cd5\u5305\u542b\u7684\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u4f60\u5df2\u7ecf\u770b\u5230\u53ef\u4f7f\u7528\\n\u8868\u793a\u6362\u884c\u7b26\uff0c\u4ece\u800c\u50cf\u4e0b\u9762\u8fd9\u6837\u5728\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u6362\u884c\u7b26\uff1a >>> print('Hello,\\nworld!') Hello, world! \u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u5b57\u7b26\u4e32\u53ef\u6d3e\u4e0a\u7528\u573a\uff0c\u56e0\u4e3a\u5b83\u4eec\u6839\u672c\u4e0d\u4f1a\u5bf9\u53cd\u659c\u6760\u505a\u7279\u6b8a\u5904\u7406\uff0c\u800c\u662f\u8ba9 \u5b57\u7b26\u4e32\u5305\u542b\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4fdd\u6301\u539f\u6837\u3002 >>> print(r'C:\\nowhere') C:\\nowhere \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d,\u6700\u6fc0\u52a8\u4eba\u5fc3\u7684\u90e8\u5206\u4e3a\u66ff\u6362\u5b57\u6bb5\u3002\u66ff\u6362\u5b57\u6bb5\u7531\u5982\u4e0b\u90e8\u5206\u7ec4\u6210,\u5176\u4e2d\u6bcf\u4e2a\u90e8\u5206\u90fd\u662f\u53ef\u9009\u7684\u3002 \u5b57\u6bb5\u540d :\u7d22\u5f15\u6216\u6807\u8bc6\u7b26,\u6307\u51fa\u8981\u8bbe\u7f6e\u54ea\u4e2a\u503c\u7684\u683c\u5f0f\u5e76\u4f7f\u7528\u7ed3\u679c\u6765\u66ff\u6362\u8be5\u5b57\u6bb5\u3002\u9664\u6307\u5b9a\u503c\u5916,\u8fd8\u53ef\u6307\u5b9a\u503c\u7684\u7279\u5b9a\u90e8\u5206,\u5982\u5217\u8868\u7684\u5143\u7d20\u3002 \u8f6c\u6362\u6807\u5fd7 :\u8ddf\u5728\u53f9\u53f7\u540e\u9762\u7684\u5355\u4e2a\u5b57\u7b26\u3002\u5f53\u524d\u652f\u6301\u7684\u5b57\u7b26\u5305\u62ecr(\u8868\u793arepr)\u3001s(\u8868\u793astr)\u548c a(\u8868\u793aascii)\u3002\u5982\u679c\u4f60\u6307\u5b9a\u4e86\u8f6c\u6362\u6807\u5fd7,\u5c06\u4e0d\u4f7f\u7528\u5bf9\u8c61\u672c\u8eab\u7684\u683c\u5f0f\u8bbe\u7f6e\u673a\u5236,\u800c\u662f\u4f7f\u7528\u6307\u5b9a\u7684\u51fd\u6570\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32,\u518d\u505a\u8fdb\u4e00\u6b65\u7684\u683c\u5f0f\u8bbe\u7f6e\u3002 \u683c\u5f0f\u8bf4\u660e\u7b26 :\u8ddf\u5728\u5192\u53f7\u540e\u9762\u7684\u8868\u8fbe\u5f0f(\u8fd9\u79cd\u8868\u8fbe\u5f0f\u662f\u4f7f\u7528\u5fae\u578b\u683c\u5f0f\u6307\u5b9a\u8bed\u8a00\u8868\u793a\u7684)\u3002\u683c\u5f0f\u8bf4\u660e\u7b26\u8ba9\u6211\u4eec\u80fd\u591f\u8be6\u7ec6\u5730\u6307\u5b9a\u6700\u7ec8\u7684\u683c\u5f0f,\u5305\u62ec\u683c\u5f0f\u7c7b\u578b(\u5982\u5b57\u7b26\u4e32\u3001\u6d6e\u70b9\u6570\u6216\u5341\u516d\u8fdb\u5236\u6570),\u5b57\u6bb5\u5bbd\u5ea6\u548c\u6570\u7684\u7cbe\u5ea6,\u5982\u4f55\u663e\u793a\u7b26\u53f7\u548c\u5343\u4f4d\u5206\u9694\u7b26,\u4ee5\u53ca\u5404\u79cd\u5bf9\u9f50\u548c\u586b\u5145\u65b9\u5f0f\u3002 \u66ff\u63db\u5b57\u6bb5\u540d \u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b,\u53ea\u9700\u5411format\u63d0\u4f9b\u8981\u8bbe\u7f6e\u5176\u683c\u5f0f\u7684\u672a\u547d\u540d\u53c2\u6570,\u5e76\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u672a\u547d\u540d\u5b57\u6bb5\u3002\u6b64\u65f6,\u5c06\u6309\u987a\u5e8f\u5c06\u5b57\u6bb5\u548c\u53c2\u6570\u914d\u5bf9\u3002\u4f60\u8fd8\u53ef\u7ed9\u53c2\u6570\u6307\u5b9a\u540d\u79f0,\u8fd9\u79cd\u53c2\u6570\u5c06\u88ab\u7528\u4e8e\u76f8\u5e94\u7684\u66ff\u6362\u5b57\u6bb5\u4e2d\u3002\u4f60\u53ef\u6df7\u5408\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u3002 >>> \"{foo} {} {bar} {}\".format(1, 2, bar=4, foo=3) '3 1 4 2' \u5176\u4e2d\uff0c\u53c3\u6578foo\u548cbar\u5206\u5225\u6307\u5b9a\u4e864\u548c3, \u53e6\u5916\u5169\u500b\u53c3\u6578\u6309\u9806\u5e8f\u5206\u5225\u6307\u5b9a\u4e861\u548c2\uff0c\u548c\u53ef\u4ee5\u901a\u904e\u7d22\u5f15\u4f86\u6307\u5b9a\u76f8\u61c9\u7684\u672a\u547d\u540d\u53c3\u6578 >>> \"{foo} {1} {bar} {0}\".format(1, 2, bar=4, foo=3) '3 2 4 1' {0}\u6307\u5411\u7b2c\u4e00\u500b\u53c2\u6570\uff0c{1} \u6307\u5411\u7b2c\u4e8c\u500b\u53c2\u6570 \u9664\u4e86\u4f7f\u7528\u7d22\u5f15\u5916\uff0c\u8fd8\u53ef\u4f7f\u7528\u53e5\u70b9\u8868\u793a\u6cd5\u6765\u8bbf\u95ee\u5bfc\u5165\u7684\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5\u3001\u5c5e\u6027\u3001\u53d8\u91cf\u548c\u51fd\u6570 >>> fullname = [\"Alfred\", \"Smoketoomuch\"] >>> \"Mr {name[1]}\".format(name=fullname) 'Mr Smoketoomuch' >>> import math >>> tmpl = \"The {mod.__name__} module defines the value {mod.pi} for \u03c0\" >>> tmpl.format(mod=math) 'The math module defines the value 3.141592653589793 for \u03c0' \u57fa\u672c\u8f6c\u6362 \u6307\u5b9a\u8981\u5728\u5b57\u6bb5\u4e2d\u5305\u542b\u7684\u503c\u540e,\u5c31\u53ef\u6dfb\u52a0\u6709\u5173\u5982\u4f55\u8bbe\u7f6e\u5176\u683c\u5f0f\u7684\u6307\u4ee4\u4e86\u3002\u9996\u5148,\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u8f6c\u6362\u6807\u5fd7\u3002 >>> print(\"{pi!s} {pi!r} {pi!a}\".format(pi=\"\u03c0\")) \u03c0 '\u03c0' '\\u03c0' \u4e0a\u8ff0\u4e09\u4e2a\u6807\u5fd7(s\u3001r\u548ca)\u6307\u5b9a\u5206\u522b\u4f7f\u7528str\u3001repr\u548cascii\u8fdb\u884c\u8f6c\u6362\u3002\u51fd\u6570str\u901a\u5e38\u521b\u5efa\u5916\u89c2\u666e\u901a\u7684\u5b57\u7b26\u4e32\u7248\u672c(\u8fd9\u91cc\u6ca1\u6709\u5bf9\u8f93\u5165\u5b57\u7b26\u4e32\u505a\u4efb\u4f55\u5904\u7406)\u3002\u51fd\u6570repr\u5c1d\u8bd5\u521b\u5efa\u7ed9\u5b9a\u503c\u7684Python\u8868\u793a(\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf)\u3002\u51fd\u6570ascii\u521b\u5efa\u53ea\u5305\u542bASCII\u5b57\u7b26\u7684\u8868\u793a \u4f60\u8fd8\u53ef\u6307\u5b9a\u8981\u8f6c\u6362\u7684\u503c\u662f\u54ea\u79cd\u7c7b\u578b,\u66f4\u51c6\u786e\u5730\u8bf4,\u662f\u8981\u5c06\u5176\u89c6\u4e3a\u54ea\u79cd\u7c7b\u578b\u3002\u4f8b\u5982,\u4f60\u53ef\u80fd\u63d0\u4f9b\u4e00\u4e2a\u6574\u6570,\u4f46\u5c06\u5176\u4f5c\u4e3a\u5c0f\u6570\u8fdb\u884c\u5904\u7406\u3002\u4e3a\u6b64\u53ef\u5728\u683c\u5f0f\u8bf4\u660e(\u5373\u5192\u53f7\u540e\u9762)\u4f7f\u7528\u5b57\u7b26f(\u8868\u793a\u5b9a\u70b9\u6570) \u3002 >>> \"The number is {num}\".format(num=42) 'The number is 42' >>> \"The number is {num:f}\".format(num=42) 'The number is 42.000000' \u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u4e2d\u7684\u7c7b\u578b\u8bf4\u660e\u7b26 \u7c7b\u578b \u542b\u4e49 b \u5c06\u6574\u6570\u8868\u793a\u4e3a\u4e8c\u8fdb\u5236 c \u5c06\u6574\u6570\u89e3\u8bfb\u4e3aunicode d \u5c06\u6574\u6570\u89c6\u4e3a\u5341\u8fdb\u5236\u6570\u8fdb\u884c\u5904\u7406,\u8fd9\u662f\u6574\u6570\u9ed8\u8ba4\u4f7f\u7528\u7684\u8bf4\u660e\u7b26 e \u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u5c0f\u6570 e \u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u5c0f\u6570 E \u4e0ee\u76f8\u540c,\u4f46\u4f7f\u7528E\u6765\u8868\u793a\u6307\u6570 f \u8868\u793a\u5c0f\u6570 F \u4e0ef\u76f8\u540c,\u4f46\u5bf9\u4e8e\u7279\u6b8a\u503c( nan \u548c inf ),\u4f7f\u7528\u5927\u5199\u8868\u793a g \u81ea\u52a8\u5728\u5b9a\u70b9\u8868\u793a\u6cd5\u548c\u79d1\u5b66\u8868\u793a\u6cd5\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\u8fd9\u662f\u9ed8\u8ba4\u7528\u4e8e\u5c0f\u6570\u7684\u8bf4\u660e\u7b26\uff0c\u4f46\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u81f3\u5c11\u67091\u4f4d\u5c0f\u6570 G \u4e0eg\u76f8\u540c\uff0c\u4f46\u4f7f\u7528\u5927\u5199\u6765\u8868\u793a\u6307\u6570\u548c\u7279\u6b8a\u503c n \u4e0eg\u76f8\u540c\uff0c\u4f46\u63d2\u5165\u968f\u533a\u57df\u800c\u5f02\u7684\u6570\u5b57\u5206\u9694\u7b26 o \u5c06\u6574\u6570\u8868\u793a\u4e3a\u516b\u8fdb\u5236\u6570 s \u4fdd\u6301\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u4e0d\u53d8\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u8bf4\u660e\u7b26 x \u5c06\u6574\u6570\u8868\u793a\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u5e76\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd X \u4e0ex\u76f8\u540c\uff0c\u4f46\u4f7f\u7528\u5927\u5199\u5b57\u6bcd % \u5c06\u6570\u8868\u793a\u4e3a\u767e\u5206\u6bd4\u503c\uff08\u4e58\u4ee5100\uff0c\u6309\u8bf4\u660e\u7b26f\u8bbe\u7f6e\u683c\u5f0f\uff0c\u518d\u5728\u540e\u9762\u52a0\u4e0a%\uff09 \u5bbd\u5ea6\u3001\u7cbe\u5ea6\u548c\u5343\u4f4d\u5206\u9694\u7b26 \u8bbe\u7f6e\u6d6e\u70b9\u6570(\u6216\u5176\u4ed6\u66f4\u5177\u4f53\u7684\u5c0f\u6570\u7c7b\u578b)\u7684\u683c\u5f0f\u65f6,\u9ed8\u8ba4\u5728\u5c0f\u6570\u70b9\u540e\u9762\u663e\u793a6\u4f4d\u5c0f\u6570,\u5e76\u6839\u636e\u9700\u8981\u8bbe\u7f6e\u5b57\u6bb5\u7684\u5bbd\u5ea6,\u800c\u4e0d\u8fdb\u884c\u4efb\u4f55\u5f62\u5f0f\u7684\u586b\u5145\u3002\u5f53\u7136,\u8fd9\u79cd\u9ed8\u8ba4\u8bbe\u7f6e\u53ef\u80fd\u4e0d\u662f\u4f60\u60f3\u8981\u7684,\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u53ef\u6839\u636e\u9700\u8981\u5728\u683c\u5f0f\u8bf4\u660e\u4e2d\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u3002 >>> \"{num:10}\".format(num=3) ' 3' >>> \"{name:10}\".format(name=\"Bob\") 'Bob ' \u5982\u4f60\u6240\u89c1,\u6570\u548c\u5b57\u7b26\u4e32\u7684\u5bf9\u9f50\u65b9\u5f0f\u4e0d\u540c\u3002 \u7cbe\u5ea6\u4e5f\u662f\u4f7f\u7528\u6574\u6570\u6307\u5b9a\u7684,\u4f46\u9700\u8981\u5728\u5b83\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u8868\u793a\u5c0f\u6570\u70b9\u7684\u53e5\u70b9 >>> \"Pi is {pi:.2f}\".format(pi=pi) 'Pi is 3.14' \u8fd9\u91cc\u663e\u5f0f\u5730\u6307\u5b9a\u4e86\u7c7b\u578bf,\u56e0\u4e3a\u9ed8\u8ba4\u7684\u7cbe\u5ea6\u5904\u7406\u65b9\u5f0f\u7a0d\u6709\u4e0d\u540c(\u76f8\u5173\u7684\u89c4\u5219\u8bf7\u53c2\u9605\u201c Python\u5e93\u53c2\u8003\u624b\u518c \u201d )\u3002\u5f53\u7136,\u53ef\u540c\u65f6\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u3002 >>> \"{pi:10.2f}\".format(pi=pi) ' 3.14' \u6700\u540e,\u53ef\u4f7f\u7528\u9017\u53f7\u6765\u6307\u51fa\u4f60\u8981\u6dfb\u52a0\u5343\u4f4d\u5206\u9694\u7b26\u3002 >>> 'One googol is {:,}'.format(10**100) 'One googol is 10,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000' \u7b26\u53f7\u3001\u5bf9\u9f50\u548c\u7528 0 \u586b\u5145 \u6709\u5f88\u591a\u7528\u4e8e\u8bbe\u7f6e\u6570\u5b57\u683c\u5f0f\u7684\u673a\u5236,\u6bd4\u5982\u4fbf\u4e8e\u6253\u5370\u6574\u9f50\u7684\u8868\u683c\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b,\u53ea\u9700\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6,\u4f46\u5305\u542b\u8d1f\u6570\u540e,\u539f\u672c\u6f02\u4eae\u7684\u8f93\u51fa\u53ef\u80fd\u4e0d\u518d\u6f02\u4eae\u3002\u53e6\u5916,\u6b63\u5982\u4f60\u5df2\u770b\u5230\u7684,\u5b57\u7b26\u4e32\u548c\u6570\u7684\u9ed8\u8ba4\u5bf9\u9f50\u65b9\u5f0f\u4e0d\u540c\u3002\u5728\u4e00\u680f\u4e2d\u540c\u65f6\u5305\u542b\u5b57\u7b26\u4e32\u548c\u6570\u65f6,\u4f60\u53ef\u80fd\u60f3\u4fee\u6539\u9ed8\u8ba4\u5bf9\u9f50\u65b9\u5f0f\u3002\u5728\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u7684\u6570\u524d\u9762,\u53ef\u6dfb\u52a0\u4e00\u4e2a\u6807\u5fd7\u3002\u8fd9\u4e2a\u6807\u5fd7\u53ef\u4ee5\u662f\u96f6\u3001\u52a0\u53f7\u3001\u51cf\u53f7\u6216\u7a7a\u683c,\u5176\u4e2d\u96f6\u8868\u793a\u4f7f\u75280\u6765\u586b\u5145\u6570\u5b57 >>> '{:010.2f}'.format(pi) '0000003.14' \u8981\u6307\u5b9a\u5de6\u5bf9\u9f50\u3001\u53f3\u5bf9\u9f50\u548c\u5c45\u4e2d,\u53ef\u5206\u522b\u4f7f\u7528<\u3001>\u548c^ \u3002 >>> print('{0:<10.2f}\\n{0:^10.2f}\\n{0:>10.2f}'.format(pi)) 3.14 3.14 3.14 \u53ef\u4ee5\u4f7f\u7528\u586b\u5145\u5b57\u7b26\u6765\u6269\u5145\u5bf9\u9f50\u8bf4\u660e\u7b26,\u8fd9\u6837\u5c06\u4f7f\u7528\u6307\u5b9a\u7684\u5b57\u7b26\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u7a7a\u683c\u6765\u586b\u5145\u3002 >>> \"{:$^15}\".format(\" WIN BIG \") '$$$ WIN BIG $$$' \u5982\u679c\u8981\u7ed9\u6b63\u6570\u52a0\u4e0a\u7b26\u53f7,\u53ef\u4f7f\u7528\u8bf4\u660e\u7b26+(\u5c06\u5176\u653e\u5728\u5bf9\u9f50\u8bf4\u660e\u7b26\u540e\u9762),\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684-\u3002\u5982\u679c\u5c06\u7b26\u53f7\u8bf4\u660e\u7b26\u6307\u5b9a\u4e3a\u7a7a\u683c,\u4f1a\u5728\u6b63\u6570\u524d\u9762\u52a0\u4e0a\u7a7a\u683c\u800c\u4e0d\u662f+\u3002 >>> print('{0:-.2}\\n{1:-.2}'.format(pi, -pi)) #\u9ed8\u8ba4\u8bbe\u7f6e 3.1 -3.1 >>> print('{0:+.2}\\n{1:+.2}'.format(pi, -pi)) +3.1 -3.1 >>> print('{0: .2}\\n{1: .2}'.format(pi, -pi)) 3.1 -3.1 \u9700\u8981\u4ecb\u7ecd\u7684\u6700\u540e\u4e00\u4e2a\u8981\u7d20\u662f\u4e95\u53f7(#)\u9009\u9879,\u4f60\u53ef\u5c06\u5176\u653e\u5728\u7b26\u53f7\u8bf4\u660e\u7b26\u548c\u5bbd\u5ea6\u4e4b\u95f4(\u5982\u679c\u6307\u5b9a\u4e86\u8fd9\u4e24\u79cd\u8bbe\u7f6e)\u3002\u8fd9\u4e2a\u9009\u9879\u5c06\u89e6\u53d1\u53e6\u4e00\u79cd\u8f6c\u6362\u65b9\u5f0f,\u8f6c\u6362\u7ec6\u8282\u968f\u7c7b\u578b\u800c\u5f02\u3002\u4f8b\u5982,\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8f6c\u6362,\u5c06\u52a0\u4e0a\u4e00\u4e2a\u524d\u7f00\u3002 >>> \"{:b}\".format(42) '101010' >>> \"{:#b}\".format(42) '0b101010' \u5b57\u7b26\u4e32\u65b9\u6cd5 center \u65b9\u6cd5center\u901a\u8fc7\u5728\u4e24\u8fb9\u6dfb\u52a0\u586b\u5145\u5b57\u7b26(\u9ed8\u8ba4\u4e3a\u7a7a\u683c)\u8ba9\u5b57\u7b26\u4e32\u5c45\u4e2d\u3002 >>> \"The Middle by Jimmy Eat World\".center(39) ' The Middle by Jimmy Eat World ' >>> \"The Middle by Jimmy Eat World\".center(39, \"*\") '*****The Middle by Jimmy Eat World*****' \u81ea\u5b66 ljust\u3001rjust\u548czfill \u3002 find \u65b9\u6cd5find\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u3002\u5982\u679c\u627e\u5230,\u5c31\u8fd4\u56de\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u5426\u5219\u8fd4\u56de-1 \u3002 >>>'With a moo-moo here, and a moo-moo there'.find('moo') 7 >>>title = \"Monty Python's Flying Circus\" >>>title.find('Monty') 0 \u4f60\u8fd8\u53ef\u6307\u5b9a\u641c\u7d22\u7684\u8d77\u70b9\u548c\u7ec8\u70b9(\u5b83\u4eec\u90fd\u662f\u53ef\u9009\u7684)\u3002 >>>subject.find('$$$') 0 >>>subject.find('$$$', 1) # \u53ea\u6307\u5b9a\u4e86\u8d77\u70b9 20 >>>subject.find('!!!') 16 >>>subject.find('!!!', 0, 16) # \u540c\u65f6\u6307\u5b9a\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9 -1 \u8bf7\u6ce8\u610f,\u8d77\u70b9\u548c\u7ec8\u70b9\u503c(\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570)\u6307\u5b9a\u7684\u641c\u7d22\u8303\u56f4\u5305\u542b\u8d77\u70b9,\u4f46\u4e0d\u5305\u542b\u7ec8\u70b9\u3002 \u81ea\u5b66 rfind\u3001index\u3001rindex\u3001count\u3001startswith\u3001endswith \u3002 join \u5408\u5e76\u5e8f\u5217\u7684\u5143\u7d20\u5fc5\u987b\u90fd\u662f\u5b57\u7b26\u4e32\u3002 >>> seq = [1, 2, 3, 4, 5] >>> sep = '+' >>> sep.join(seq) # \u5408\u5e76\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868 '1+2+3+4+5' \u5982\u679c\u662f seq.join(sep) \u5219\u4f1a\u62a5\u9519 \u81ea\u5b66 split lower \u65b9\u6cd5lower\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5c0f\u5199\u7248\u672c\u3002 >>> 'Trondheim Hammer Dance'.lower() 'trondheim hammer dance' \u81ea\u5b66 :islower\u3001istitle\u3001isupper\u3001translate\u3001capitalize\u3001casefold\u3001swapcase\u3001title\u3001upper \u3002 strip \u65b9\u6cd5strip\u5c06\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u672b\u5c3e\u7684\u7a7a\u767d(\u4f46\u4e0d\u5305\u62ec\u4e2d\u95f4\u7684\u7a7a\u767d)\u5220\u9664,\u5e76\u8fd4\u56de\u5220\u9664\u540e\u7684\u7ed3\u679c\u3002 >>> ' internal whitespace is kept '.strip() 'internal whitespace is kept' \u8fd8\u53ef\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u4e2d\u6307\u5b9a\u8981\u5220\u9664\u54ea\u4e9b\u5b57\u7b26\u3002 >>> '*** SPAM * for * everyone!!! ***'.strip(' *!') 'SPAM * for * everyone' \u81ea\u5b66 lstrip\u3001rstrip replace \u65b9\u6cd5replace\u5c06\u6307\u5b9a\u5b50\u4e32\u90fd\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32,\u5e76\u8fd4\u56de\u66ff\u6362\u540e\u7684\u7ed3\u679c\u3002 >>> 'This is a test'.replace('is', 'eez') 'Theez eez a test' \u81ea\u5b66 expandtabs \u3002 translate \u65b9\u6cd5translate\u4e0ereplace\u4e00\u6837\u66ff\u6362\u5b57\u7b26\u4e32\u7684\u7279\u5b9a\u90e8\u5206,\u4f46\u4e0d\u540c\u7684\u662f\u5b83\u53ea\u80fd\u8fdb\u884c\u5355\u5b57\u7b26\u66ff\u6362\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u80fd\u591f\u540c\u65f6\u66ff\u6362\u591a\u4e2a\u5b57\u7b26,\u56e0\u6b64\u6548\u7387\u6bd4replace\u9ad8\u3002 \u7136\u800c,\u4f7f\u7528translate\u524d\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8f6c\u6362\u8868\u3002\u8fd9\u4e2a\u8f6c\u6362\u8868\u6307\u51fa\u4e86\u4e0d\u540cUnicode\u7801\u70b9\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u3002\u8981\u521b\u5efa\u8f6c\u6362\u8868,\u53ef\u5bf9\u5b57\u7b26\u4e32\u7c7b\u578b str\u8c03\u7528\u65b9\u6cd5maketrans,\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570:\u4e24\u4e2a\u957f\u5ea6\u76f8\u540c\u7684\u5b57\u7b26\u4e32,\u5b83\u4eec\u6307\u5b9a\u8981\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u66ff\u6362\u4e3a\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u76f8\u5e94\u5b57\u7b26 >>> table = str.maketrans('cs', 'kz') >>> table {115: 122, 99: 107} >>> 'this is an incredible test'.translate(table) 'thiz iz an inkredible tezt' \u8c03\u7528\u65b9\u6cd5maketrans\u65f6,\u8fd8\u53ef\u63d0\u4f9b\u53ef\u9009\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570,\u6307\u5b9a\u8981\u5c06\u54ea\u4e9b\u5b57\u6bcd\u5220\u9664 >>> table = str.maketrans('cs', 'kz', ' ') >>> 'this is an incredible test'.translate(table) 'thizizaninkredibletezt'","title":"\u5b57\u7b26\u4e32"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_1","text":"","title":"\u5b57\u7b26\u4e32\u6982\u8ff0"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_2","text":"\u5728python\u4e2d\u8868\u793a\u5b57\u7b26\u4e32\u65e2\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7\uff08 ' \uff09,\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\uff08 \" \uff09 >>> \"Hello world!\" 'Hello world' >>> 'Hello world!' 'Hello world!' \u4f46\u6709\u65f6\u5019\u6211\u4eec\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u5305\u542b\u5f15\u53f7\uff0c\u4f8b\u5982\uff1a Let's go \u6216\u8005 \u201dhello world\u201c, she said \uff0cpython\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u53ea\u6709\u5355\u5f15\u53f7\u65f6\u53ef\u4ee5\u5728\u5b57\u7b26\u4e24\u4fa7\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5982\u679c\u5b57\u7b26\u4e2d\u53ea\u6709\u53cc\u5f15\u53f7\u65f6\u53ef\u4ee5\u5728\u5b57\u7b26\u4e24\u4fa7\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u793a\u4f8b\uff1a >>> \"Let's go\" \"Let's go\" >>> '\u201dhello world\u201c, she said' '\u201dhello world\u201c, she said' >>> 'Let's go' File \"<stdin>\", line 1 'Let's go' ^ SyntaxError: invalid syntax \u5b9e\u9645\u4e0a\uff0c\u5e76\u975e\u5fc5\u987b\u8fd9\u6837\u505a\uff08\u8fd9\u6837\u505a\u53ea\u662f\u51fa\u4e8e\u65b9\u4fbf\u8003\u8651\uff09\u3002\u53ef\u4f7f\u7528\u53cd\u659c\u6760\uff08\\\uff09\u5bf9\u5f15\u53f7\u8fdb\u884c\u8f6c\u4e49 >>> 'Let\\'s go' \"Let's go\"","title":"\u5b57\u7b26\u4e32\u53ca\u8f6c\u4e49"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#str-repr","text":"\u4f60\u53ef\u901a\u8fc7\u4f7f\u7528\u51fd\u6570str\u548crepr\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e24\u79cd\u673a\u5236\u3002\u4f7f\u7528str\u80fd\u4ee5\u5408\u7406\u7684\u65b9\u5f0f\u5c06\u503c\u8f6c\u6362\u4e3a\u7528\u6237\u80fd\u591f\u770b\u61c2\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u5c3d\u53ef\u80fd\u5c06\u7279\u6b8a\u5b57\u7b26\u7f16\u7801\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u5b57\u7b26\u3002\u7136\u800c\uff0c\u4f7f\u7528repr\u65f6\uff0c\u901a\u5e38\u4f1a\u83b7\u5f97\u503c\u7684\u5408\u6cd5Python\u8868\u8fbe\u5f0f\u8868\u793a\u3002 >>> print(repr(\"Hello,\\nworld!\")) 'Hello,\\nworld!' >>> print(str(\"Hello,\\nworld!\")) Hello, world! >>> s = \"\"\" ... Hello ... World ... \"\"\" >>> print(repr(s)) '\\nHello,\\nworld\\n'","title":"str \u548c repr"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_3","text":"","title":"\u957f\u5b57\u7b26\u4e32\u3001\u539f\u59cb\u5b57\u7b26\u4e32\u548c\u5b57\u8282"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#1","text":"\u5982\u679c\u8981\u8868\u793a\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u5f15\u53f7\uff08'''\uff09\u6216\u8005 \uff08\"\"\"\uff09 >>> print('''This is a very long string. It continues here. And it's not over yet. \"Hello, world!\" Still here.''')","title":"1. \u957f\u5b57\u7b26\u4e32"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#2","text":"\u539f\u59cb\u5b57\u7b26\u4e32\u4e0d\u4ee5\u7279\u6b8a\u65b9\u5f0f\u5904\u7406\u53cd\u659c\u6760\uff0c\u56e0\u6b64\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u5f88\u6709\u7528\u2461\u3002\u5728\u5e38\u89c4\u5b57\u7b26\u4e32\u4e2d\uff0c\u53cd\u659c \u6760\u626e\u6f14\u7740\u7279\u6b8a\u89d2\u8272\uff1a\u5b83\u5bf9\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\uff0c\u8ba9\u4f60\u80fd\u591f\u5728\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u539f\u672c\u65e0\u6cd5\u5305\u542b\u7684\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u4f60\u5df2\u7ecf\u770b\u5230\u53ef\u4f7f\u7528\\n\u8868\u793a\u6362\u884c\u7b26\uff0c\u4ece\u800c\u50cf\u4e0b\u9762\u8fd9\u6837\u5728\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u6362\u884c\u7b26\uff1a >>> print('Hello,\\nworld!') Hello, world! \u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u5b57\u7b26\u4e32\u53ef\u6d3e\u4e0a\u7528\u573a\uff0c\u56e0\u4e3a\u5b83\u4eec\u6839\u672c\u4e0d\u4f1a\u5bf9\u53cd\u659c\u6760\u505a\u7279\u6b8a\u5904\u7406\uff0c\u800c\u662f\u8ba9 \u5b57\u7b26\u4e32\u5305\u542b\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4fdd\u6301\u539f\u6837\u3002 >>> print(r'C:\\nowhere') C:\\nowhere","title":"2. \u539f\u59cb\u5b57\u7b26\u4e32"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_4","text":"\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d,\u6700\u6fc0\u52a8\u4eba\u5fc3\u7684\u90e8\u5206\u4e3a\u66ff\u6362\u5b57\u6bb5\u3002\u66ff\u6362\u5b57\u6bb5\u7531\u5982\u4e0b\u90e8\u5206\u7ec4\u6210,\u5176\u4e2d\u6bcf\u4e2a\u90e8\u5206\u90fd\u662f\u53ef\u9009\u7684\u3002 \u5b57\u6bb5\u540d :\u7d22\u5f15\u6216\u6807\u8bc6\u7b26,\u6307\u51fa\u8981\u8bbe\u7f6e\u54ea\u4e2a\u503c\u7684\u683c\u5f0f\u5e76\u4f7f\u7528\u7ed3\u679c\u6765\u66ff\u6362\u8be5\u5b57\u6bb5\u3002\u9664\u6307\u5b9a\u503c\u5916,\u8fd8\u53ef\u6307\u5b9a\u503c\u7684\u7279\u5b9a\u90e8\u5206,\u5982\u5217\u8868\u7684\u5143\u7d20\u3002 \u8f6c\u6362\u6807\u5fd7 :\u8ddf\u5728\u53f9\u53f7\u540e\u9762\u7684\u5355\u4e2a\u5b57\u7b26\u3002\u5f53\u524d\u652f\u6301\u7684\u5b57\u7b26\u5305\u62ecr(\u8868\u793arepr)\u3001s(\u8868\u793astr)\u548c a(\u8868\u793aascii)\u3002\u5982\u679c\u4f60\u6307\u5b9a\u4e86\u8f6c\u6362\u6807\u5fd7,\u5c06\u4e0d\u4f7f\u7528\u5bf9\u8c61\u672c\u8eab\u7684\u683c\u5f0f\u8bbe\u7f6e\u673a\u5236,\u800c\u662f\u4f7f\u7528\u6307\u5b9a\u7684\u51fd\u6570\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32,\u518d\u505a\u8fdb\u4e00\u6b65\u7684\u683c\u5f0f\u8bbe\u7f6e\u3002 \u683c\u5f0f\u8bf4\u660e\u7b26 :\u8ddf\u5728\u5192\u53f7\u540e\u9762\u7684\u8868\u8fbe\u5f0f(\u8fd9\u79cd\u8868\u8fbe\u5f0f\u662f\u4f7f\u7528\u5fae\u578b\u683c\u5f0f\u6307\u5b9a\u8bed\u8a00\u8868\u793a\u7684)\u3002\u683c\u5f0f\u8bf4\u660e\u7b26\u8ba9\u6211\u4eec\u80fd\u591f\u8be6\u7ec6\u5730\u6307\u5b9a\u6700\u7ec8\u7684\u683c\u5f0f,\u5305\u62ec\u683c\u5f0f\u7c7b\u578b(\u5982\u5b57\u7b26\u4e32\u3001\u6d6e\u70b9\u6570\u6216\u5341\u516d\u8fdb\u5236\u6570),\u5b57\u6bb5\u5bbd\u5ea6\u548c\u6570\u7684\u7cbe\u5ea6,\u5982\u4f55\u663e\u793a\u7b26\u53f7\u548c\u5343\u4f4d\u5206\u9694\u7b26,\u4ee5\u53ca\u5404\u79cd\u5bf9\u9f50\u548c\u586b\u5145\u65b9\u5f0f\u3002","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_5","text":"\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b,\u53ea\u9700\u5411format\u63d0\u4f9b\u8981\u8bbe\u7f6e\u5176\u683c\u5f0f\u7684\u672a\u547d\u540d\u53c2\u6570,\u5e76\u5728\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u672a\u547d\u540d\u5b57\u6bb5\u3002\u6b64\u65f6,\u5c06\u6309\u987a\u5e8f\u5c06\u5b57\u6bb5\u548c\u53c2\u6570\u914d\u5bf9\u3002\u4f60\u8fd8\u53ef\u7ed9\u53c2\u6570\u6307\u5b9a\u540d\u79f0,\u8fd9\u79cd\u53c2\u6570\u5c06\u88ab\u7528\u4e8e\u76f8\u5e94\u7684\u66ff\u6362\u5b57\u6bb5\u4e2d\u3002\u4f60\u53ef\u6df7\u5408\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u3002 >>> \"{foo} {} {bar} {}\".format(1, 2, bar=4, foo=3) '3 1 4 2' \u5176\u4e2d\uff0c\u53c3\u6578foo\u548cbar\u5206\u5225\u6307\u5b9a\u4e864\u548c3, \u53e6\u5916\u5169\u500b\u53c3\u6578\u6309\u9806\u5e8f\u5206\u5225\u6307\u5b9a\u4e861\u548c2\uff0c\u548c\u53ef\u4ee5\u901a\u904e\u7d22\u5f15\u4f86\u6307\u5b9a\u76f8\u61c9\u7684\u672a\u547d\u540d\u53c3\u6578 >>> \"{foo} {1} {bar} {0}\".format(1, 2, bar=4, foo=3) '3 2 4 1' {0}\u6307\u5411\u7b2c\u4e00\u500b\u53c2\u6570\uff0c{1} \u6307\u5411\u7b2c\u4e8c\u500b\u53c2\u6570 \u9664\u4e86\u4f7f\u7528\u7d22\u5f15\u5916\uff0c\u8fd8\u53ef\u4f7f\u7528\u53e5\u70b9\u8868\u793a\u6cd5\u6765\u8bbf\u95ee\u5bfc\u5165\u7684\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5\u3001\u5c5e\u6027\u3001\u53d8\u91cf\u548c\u51fd\u6570 >>> fullname = [\"Alfred\", \"Smoketoomuch\"] >>> \"Mr {name[1]}\".format(name=fullname) 'Mr Smoketoomuch' >>> import math >>> tmpl = \"The {mod.__name__} module defines the value {mod.pi} for \u03c0\" >>> tmpl.format(mod=math) 'The math module defines the value 3.141592653589793 for \u03c0'","title":"\u66ff\u63db\u5b57\u6bb5\u540d"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_6","text":"\u6307\u5b9a\u8981\u5728\u5b57\u6bb5\u4e2d\u5305\u542b\u7684\u503c\u540e,\u5c31\u53ef\u6dfb\u52a0\u6709\u5173\u5982\u4f55\u8bbe\u7f6e\u5176\u683c\u5f0f\u7684\u6307\u4ee4\u4e86\u3002\u9996\u5148,\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u8f6c\u6362\u6807\u5fd7\u3002 >>> print(\"{pi!s} {pi!r} {pi!a}\".format(pi=\"\u03c0\")) \u03c0 '\u03c0' '\\u03c0' \u4e0a\u8ff0\u4e09\u4e2a\u6807\u5fd7(s\u3001r\u548ca)\u6307\u5b9a\u5206\u522b\u4f7f\u7528str\u3001repr\u548cascii\u8fdb\u884c\u8f6c\u6362\u3002\u51fd\u6570str\u901a\u5e38\u521b\u5efa\u5916\u89c2\u666e\u901a\u7684\u5b57\u7b26\u4e32\u7248\u672c(\u8fd9\u91cc\u6ca1\u6709\u5bf9\u8f93\u5165\u5b57\u7b26\u4e32\u505a\u4efb\u4f55\u5904\u7406)\u3002\u51fd\u6570repr\u5c1d\u8bd5\u521b\u5efa\u7ed9\u5b9a\u503c\u7684Python\u8868\u793a(\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf)\u3002\u51fd\u6570ascii\u521b\u5efa\u53ea\u5305\u542bASCII\u5b57\u7b26\u7684\u8868\u793a \u4f60\u8fd8\u53ef\u6307\u5b9a\u8981\u8f6c\u6362\u7684\u503c\u662f\u54ea\u79cd\u7c7b\u578b,\u66f4\u51c6\u786e\u5730\u8bf4,\u662f\u8981\u5c06\u5176\u89c6\u4e3a\u54ea\u79cd\u7c7b\u578b\u3002\u4f8b\u5982,\u4f60\u53ef\u80fd\u63d0\u4f9b\u4e00\u4e2a\u6574\u6570,\u4f46\u5c06\u5176\u4f5c\u4e3a\u5c0f\u6570\u8fdb\u884c\u5904\u7406\u3002\u4e3a\u6b64\u53ef\u5728\u683c\u5f0f\u8bf4\u660e(\u5373\u5192\u53f7\u540e\u9762)\u4f7f\u7528\u5b57\u7b26f(\u8868\u793a\u5b9a\u70b9\u6570) \u3002 >>> \"The number is {num}\".format(num=42) 'The number is 42' >>> \"The number is {num:f}\".format(num=42) 'The number is 42.000000' \u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u4e2d\u7684\u7c7b\u578b\u8bf4\u660e\u7b26 \u7c7b\u578b \u542b\u4e49 b \u5c06\u6574\u6570\u8868\u793a\u4e3a\u4e8c\u8fdb\u5236 c \u5c06\u6574\u6570\u89e3\u8bfb\u4e3aunicode d \u5c06\u6574\u6570\u89c6\u4e3a\u5341\u8fdb\u5236\u6570\u8fdb\u884c\u5904\u7406,\u8fd9\u662f\u6574\u6570\u9ed8\u8ba4\u4f7f\u7528\u7684\u8bf4\u660e\u7b26 e \u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u5c0f\u6570 e \u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u5c0f\u6570 E \u4e0ee\u76f8\u540c,\u4f46\u4f7f\u7528E\u6765\u8868\u793a\u6307\u6570 f \u8868\u793a\u5c0f\u6570 F \u4e0ef\u76f8\u540c,\u4f46\u5bf9\u4e8e\u7279\u6b8a\u503c( nan \u548c inf ),\u4f7f\u7528\u5927\u5199\u8868\u793a g \u81ea\u52a8\u5728\u5b9a\u70b9\u8868\u793a\u6cd5\u548c\u79d1\u5b66\u8868\u793a\u6cd5\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\u8fd9\u662f\u9ed8\u8ba4\u7528\u4e8e\u5c0f\u6570\u7684\u8bf4\u660e\u7b26\uff0c\u4f46\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u81f3\u5c11\u67091\u4f4d\u5c0f\u6570 G \u4e0eg\u76f8\u540c\uff0c\u4f46\u4f7f\u7528\u5927\u5199\u6765\u8868\u793a\u6307\u6570\u548c\u7279\u6b8a\u503c n \u4e0eg\u76f8\u540c\uff0c\u4f46\u63d2\u5165\u968f\u533a\u57df\u800c\u5f02\u7684\u6570\u5b57\u5206\u9694\u7b26 o \u5c06\u6574\u6570\u8868\u793a\u4e3a\u516b\u8fdb\u5236\u6570 s \u4fdd\u6301\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u4e0d\u53d8\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u8bf4\u660e\u7b26 x \u5c06\u6574\u6570\u8868\u793a\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u5e76\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd X \u4e0ex\u76f8\u540c\uff0c\u4f46\u4f7f\u7528\u5927\u5199\u5b57\u6bcd % \u5c06\u6570\u8868\u793a\u4e3a\u767e\u5206\u6bd4\u503c\uff08\u4e58\u4ee5100\uff0c\u6309\u8bf4\u660e\u7b26f\u8bbe\u7f6e\u683c\u5f0f\uff0c\u518d\u5728\u540e\u9762\u52a0\u4e0a%\uff09","title":"\u57fa\u672c\u8f6c\u6362"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_7","text":"\u8bbe\u7f6e\u6d6e\u70b9\u6570(\u6216\u5176\u4ed6\u66f4\u5177\u4f53\u7684\u5c0f\u6570\u7c7b\u578b)\u7684\u683c\u5f0f\u65f6,\u9ed8\u8ba4\u5728\u5c0f\u6570\u70b9\u540e\u9762\u663e\u793a6\u4f4d\u5c0f\u6570,\u5e76\u6839\u636e\u9700\u8981\u8bbe\u7f6e\u5b57\u6bb5\u7684\u5bbd\u5ea6,\u800c\u4e0d\u8fdb\u884c\u4efb\u4f55\u5f62\u5f0f\u7684\u586b\u5145\u3002\u5f53\u7136,\u8fd9\u79cd\u9ed8\u8ba4\u8bbe\u7f6e\u53ef\u80fd\u4e0d\u662f\u4f60\u60f3\u8981\u7684,\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u53ef\u6839\u636e\u9700\u8981\u5728\u683c\u5f0f\u8bf4\u660e\u4e2d\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u3002 >>> \"{num:10}\".format(num=3) ' 3' >>> \"{name:10}\".format(name=\"Bob\") 'Bob ' \u5982\u4f60\u6240\u89c1,\u6570\u548c\u5b57\u7b26\u4e32\u7684\u5bf9\u9f50\u65b9\u5f0f\u4e0d\u540c\u3002 \u7cbe\u5ea6\u4e5f\u662f\u4f7f\u7528\u6574\u6570\u6307\u5b9a\u7684,\u4f46\u9700\u8981\u5728\u5b83\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u8868\u793a\u5c0f\u6570\u70b9\u7684\u53e5\u70b9 >>> \"Pi is {pi:.2f}\".format(pi=pi) 'Pi is 3.14' \u8fd9\u91cc\u663e\u5f0f\u5730\u6307\u5b9a\u4e86\u7c7b\u578bf,\u56e0\u4e3a\u9ed8\u8ba4\u7684\u7cbe\u5ea6\u5904\u7406\u65b9\u5f0f\u7a0d\u6709\u4e0d\u540c(\u76f8\u5173\u7684\u89c4\u5219\u8bf7\u53c2\u9605\u201c Python\u5e93\u53c2\u8003\u624b\u518c \u201d )\u3002\u5f53\u7136,\u53ef\u540c\u65f6\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u3002 >>> \"{pi:10.2f}\".format(pi=pi) ' 3.14' \u6700\u540e,\u53ef\u4f7f\u7528\u9017\u53f7\u6765\u6307\u51fa\u4f60\u8981\u6dfb\u52a0\u5343\u4f4d\u5206\u9694\u7b26\u3002 >>> 'One googol is {:,}'.format(10**100) 'One googol is 10,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000'","title":"\u5bbd\u5ea6\u3001\u7cbe\u5ea6\u548c\u5343\u4f4d\u5206\u9694\u7b26"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#0","text":"\u6709\u5f88\u591a\u7528\u4e8e\u8bbe\u7f6e\u6570\u5b57\u683c\u5f0f\u7684\u673a\u5236,\u6bd4\u5982\u4fbf\u4e8e\u6253\u5370\u6574\u9f50\u7684\u8868\u683c\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b,\u53ea\u9700\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6,\u4f46\u5305\u542b\u8d1f\u6570\u540e,\u539f\u672c\u6f02\u4eae\u7684\u8f93\u51fa\u53ef\u80fd\u4e0d\u518d\u6f02\u4eae\u3002\u53e6\u5916,\u6b63\u5982\u4f60\u5df2\u770b\u5230\u7684,\u5b57\u7b26\u4e32\u548c\u6570\u7684\u9ed8\u8ba4\u5bf9\u9f50\u65b9\u5f0f\u4e0d\u540c\u3002\u5728\u4e00\u680f\u4e2d\u540c\u65f6\u5305\u542b\u5b57\u7b26\u4e32\u548c\u6570\u65f6,\u4f60\u53ef\u80fd\u60f3\u4fee\u6539\u9ed8\u8ba4\u5bf9\u9f50\u65b9\u5f0f\u3002\u5728\u6307\u5b9a\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u7684\u6570\u524d\u9762,\u53ef\u6dfb\u52a0\u4e00\u4e2a\u6807\u5fd7\u3002\u8fd9\u4e2a\u6807\u5fd7\u53ef\u4ee5\u662f\u96f6\u3001\u52a0\u53f7\u3001\u51cf\u53f7\u6216\u7a7a\u683c,\u5176\u4e2d\u96f6\u8868\u793a\u4f7f\u75280\u6765\u586b\u5145\u6570\u5b57 >>> '{:010.2f}'.format(pi) '0000003.14' \u8981\u6307\u5b9a\u5de6\u5bf9\u9f50\u3001\u53f3\u5bf9\u9f50\u548c\u5c45\u4e2d,\u53ef\u5206\u522b\u4f7f\u7528<\u3001>\u548c^ \u3002 >>> print('{0:<10.2f}\\n{0:^10.2f}\\n{0:>10.2f}'.format(pi)) 3.14 3.14 3.14 \u53ef\u4ee5\u4f7f\u7528\u586b\u5145\u5b57\u7b26\u6765\u6269\u5145\u5bf9\u9f50\u8bf4\u660e\u7b26,\u8fd9\u6837\u5c06\u4f7f\u7528\u6307\u5b9a\u7684\u5b57\u7b26\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u7a7a\u683c\u6765\u586b\u5145\u3002 >>> \"{:$^15}\".format(\" WIN BIG \") '$$$ WIN BIG $$$' \u5982\u679c\u8981\u7ed9\u6b63\u6570\u52a0\u4e0a\u7b26\u53f7,\u53ef\u4f7f\u7528\u8bf4\u660e\u7b26+(\u5c06\u5176\u653e\u5728\u5bf9\u9f50\u8bf4\u660e\u7b26\u540e\u9762),\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684-\u3002\u5982\u679c\u5c06\u7b26\u53f7\u8bf4\u660e\u7b26\u6307\u5b9a\u4e3a\u7a7a\u683c,\u4f1a\u5728\u6b63\u6570\u524d\u9762\u52a0\u4e0a\u7a7a\u683c\u800c\u4e0d\u662f+\u3002 >>> print('{0:-.2}\\n{1:-.2}'.format(pi, -pi)) #\u9ed8\u8ba4\u8bbe\u7f6e 3.1 -3.1 >>> print('{0:+.2}\\n{1:+.2}'.format(pi, -pi)) +3.1 -3.1 >>> print('{0: .2}\\n{1: .2}'.format(pi, -pi)) 3.1 -3.1 \u9700\u8981\u4ecb\u7ecd\u7684\u6700\u540e\u4e00\u4e2a\u8981\u7d20\u662f\u4e95\u53f7(#)\u9009\u9879,\u4f60\u53ef\u5c06\u5176\u653e\u5728\u7b26\u53f7\u8bf4\u660e\u7b26\u548c\u5bbd\u5ea6\u4e4b\u95f4(\u5982\u679c\u6307\u5b9a\u4e86\u8fd9\u4e24\u79cd\u8bbe\u7f6e)\u3002\u8fd9\u4e2a\u9009\u9879\u5c06\u89e6\u53d1\u53e6\u4e00\u79cd\u8f6c\u6362\u65b9\u5f0f,\u8f6c\u6362\u7ec6\u8282\u968f\u7c7b\u578b\u800c\u5f02\u3002\u4f8b\u5982,\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8f6c\u6362,\u5c06\u52a0\u4e0a\u4e00\u4e2a\u524d\u7f00\u3002 >>> \"{:b}\".format(42) '101010' >>> \"{:#b}\".format(42) '0b101010'","title":"\u7b26\u53f7\u3001\u5bf9\u9f50\u548c\u7528 0 \u586b\u5145"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#_8","text":"","title":"\u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#center","text":"\u65b9\u6cd5center\u901a\u8fc7\u5728\u4e24\u8fb9\u6dfb\u52a0\u586b\u5145\u5b57\u7b26(\u9ed8\u8ba4\u4e3a\u7a7a\u683c)\u8ba9\u5b57\u7b26\u4e32\u5c45\u4e2d\u3002 >>> \"The Middle by Jimmy Eat World\".center(39) ' The Middle by Jimmy Eat World ' >>> \"The Middle by Jimmy Eat World\".center(39, \"*\") '*****The Middle by Jimmy Eat World*****' \u81ea\u5b66 ljust\u3001rjust\u548czfill \u3002","title":"center"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#find","text":"\u65b9\u6cd5find\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u3002\u5982\u679c\u627e\u5230,\u5c31\u8fd4\u56de\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u5426\u5219\u8fd4\u56de-1 \u3002 >>>'With a moo-moo here, and a moo-moo there'.find('moo') 7 >>>title = \"Monty Python's Flying Circus\" >>>title.find('Monty') 0 \u4f60\u8fd8\u53ef\u6307\u5b9a\u641c\u7d22\u7684\u8d77\u70b9\u548c\u7ec8\u70b9(\u5b83\u4eec\u90fd\u662f\u53ef\u9009\u7684)\u3002 >>>subject.find('$$$') 0 >>>subject.find('$$$', 1) # \u53ea\u6307\u5b9a\u4e86\u8d77\u70b9 20 >>>subject.find('!!!') 16 >>>subject.find('!!!', 0, 16) # \u540c\u65f6\u6307\u5b9a\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9 -1 \u8bf7\u6ce8\u610f,\u8d77\u70b9\u548c\u7ec8\u70b9\u503c(\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570)\u6307\u5b9a\u7684\u641c\u7d22\u8303\u56f4\u5305\u542b\u8d77\u70b9,\u4f46\u4e0d\u5305\u542b\u7ec8\u70b9\u3002 \u81ea\u5b66 rfind\u3001index\u3001rindex\u3001count\u3001startswith\u3001endswith \u3002","title":"find"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#join","text":"\u5408\u5e76\u5e8f\u5217\u7684\u5143\u7d20\u5fc5\u987b\u90fd\u662f\u5b57\u7b26\u4e32\u3002 >>> seq = [1, 2, 3, 4, 5] >>> sep = '+' >>> sep.join(seq) # \u5408\u5e76\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868 '1+2+3+4+5' \u5982\u679c\u662f seq.join(sep) \u5219\u4f1a\u62a5\u9519 \u81ea\u5b66 split","title":"join"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#lower","text":"\u65b9\u6cd5lower\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5c0f\u5199\u7248\u672c\u3002 >>> 'Trondheim Hammer Dance'.lower() 'trondheim hammer dance' \u81ea\u5b66 :islower\u3001istitle\u3001isupper\u3001translate\u3001capitalize\u3001casefold\u3001swapcase\u3001title\u3001upper \u3002","title":"lower"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#strip","text":"\u65b9\u6cd5strip\u5c06\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u672b\u5c3e\u7684\u7a7a\u767d(\u4f46\u4e0d\u5305\u62ec\u4e2d\u95f4\u7684\u7a7a\u767d)\u5220\u9664,\u5e76\u8fd4\u56de\u5220\u9664\u540e\u7684\u7ed3\u679c\u3002 >>> ' internal whitespace is kept '.strip() 'internal whitespace is kept' \u8fd8\u53ef\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u4e2d\u6307\u5b9a\u8981\u5220\u9664\u54ea\u4e9b\u5b57\u7b26\u3002 >>> '*** SPAM * for * everyone!!! ***'.strip(' *!') 'SPAM * for * everyone' \u81ea\u5b66 lstrip\u3001rstrip","title":"strip"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#replace","text":"\u65b9\u6cd5replace\u5c06\u6307\u5b9a\u5b50\u4e32\u90fd\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32,\u5e76\u8fd4\u56de\u66ff\u6362\u540e\u7684\u7ed3\u679c\u3002 >>> 'This is a test'.replace('is', 'eez') 'Theez eez a test' \u81ea\u5b66 expandtabs \u3002","title":"replace"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u5b57\u7b26\u4e32/#translate","text":"\u65b9\u6cd5translate\u4e0ereplace\u4e00\u6837\u66ff\u6362\u5b57\u7b26\u4e32\u7684\u7279\u5b9a\u90e8\u5206,\u4f46\u4e0d\u540c\u7684\u662f\u5b83\u53ea\u80fd\u8fdb\u884c\u5355\u5b57\u7b26\u66ff\u6362\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u80fd\u591f\u540c\u65f6\u66ff\u6362\u591a\u4e2a\u5b57\u7b26,\u56e0\u6b64\u6548\u7387\u6bd4replace\u9ad8\u3002 \u7136\u800c,\u4f7f\u7528translate\u524d\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8f6c\u6362\u8868\u3002\u8fd9\u4e2a\u8f6c\u6362\u8868\u6307\u51fa\u4e86\u4e0d\u540cUnicode\u7801\u70b9\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u3002\u8981\u521b\u5efa\u8f6c\u6362\u8868,\u53ef\u5bf9\u5b57\u7b26\u4e32\u7c7b\u578b str\u8c03\u7528\u65b9\u6cd5maketrans,\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570:\u4e24\u4e2a\u957f\u5ea6\u76f8\u540c\u7684\u5b57\u7b26\u4e32,\u5b83\u4eec\u6307\u5b9a\u8981\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u66ff\u6362\u4e3a\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u76f8\u5e94\u5b57\u7b26 >>> table = str.maketrans('cs', 'kz') >>> table {115: 122, 99: 107} >>> 'this is an incredible test'.translate(table) 'thiz iz an inkredible tezt' \u8c03\u7528\u65b9\u6cd5maketrans\u65f6,\u8fd8\u53ef\u63d0\u4f9b\u53ef\u9009\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570,\u6307\u5b9a\u8981\u5c06\u54ea\u4e9b\u5b57\u6bcd\u5220\u9664 >>> table = str.maketrans('cs', 'kz', ' ') >>> 'this is an incredible test'.translate(table) 'thizizaninkredibletezt'","title":"translate"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/","text":"\u6761\u4ef6\u548c\u6761\u4ef6\u8bed\u53e5 if... if \u8868\u8fbe\u5f0f: \u8bed\u53e5\u5757 \u5176\u5b9e\u8868\u8fbe\u5f0f\u53ea\u662f\u4e00\u4e2a\u5355\u7eaf\u7684\u5e03\u5c14\u503c\u6216\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u6bd4\u8f83\u8868\u8fbe\u5f0f\u6216\u903b\u8f91\u8868\u8fbe\u5f0f\uff08a > b and a != c\uff09\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u6267\u884c\u8bed\u53e5\u5757\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u5047\u5219\u8df3\u8fc7\u8bed\u53e5\u5757, \u8bed\u53e5\u5757\u4f7f\u7528\u5236\u8868\u7b26\uff0c\u5373Tab\u6216\u8005\u56db\u4e2a\u7a7a\u683c\u7684\u7f29\u8fdb \u7528\u4f5c\u5e03\u5c14\u8868\u8fbe\u5f0f\u65f6\uff0c\u4e0b\u9762\u7684\u503c\u5c06\u88ab\u89e3\u91ca\u5668\u89c6\u4e3a\u5047\u3002 False None 0 \"\" () [] {} \u53e6\u5916\uff0c\u5e03\u5c14\u503c\u771f\uff08True\uff09\u4ee3\u88681, \u5047\uff08False\uff09\u4ee3\u88680 >>> True + 1 2 >>> False + 1 1 # coding=utf-8 if not False: print(\"expression is False \") if not 0: print(\"expression is 0\") if not None: print(\"expression is None\") if not (): print(\"expression is ()\") if not []: print('expression is []') if not {}: print('expression is {}') # out expression is False expression is 0 expression is None expression is () expression is [] expression is {} \u4f7f\u7528if\u8bed\u53e5\u65f6\u5982\u679c\u53ea\u6709\u4e00\u6761\u8bed\u53e5\u5757\uff0c\u53ef\u4ee5\u4e16\u754c\u5199\u5728\u5192\u53f7\u540e\u9762 if 2 > 1: print('2 > 1') # out 2 > 1 \u5e03\u5c14\u503cTrue\u548cFalse\u5c5e\u4e8e\u7c7b\u578bbool,\u800cbool\u4e0elist\u3001 str\u548ctuple\u4e00\u6837,\u53ef\u7528\u6765\u8f6c\u6362\u5176\u4ed6\u7684\u503c >>> bool(\"I think, i am falling, you can see, Why do you pretend you don't know?\") True >>> bool(0) False if...else... else\u5fc5\u4f34\u968f\u7740if,\u5f53if \u540e\u9762\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3a\u5047\u65f6\u6267\u884celse\u540e\u9762\u7684\u8bed\u53e5\u5757\uff0c\u5176\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b if \u8868\u8fbe\u5f0f\uff1a \u8bed\u53e5\u57571 else: \u8bed\u53e5\u57572 a = -9 if a > 0: b = a else: b = -a print(b) # out 9 \u540c\u6837\uff0c\u4ee3\u7801\u5757\u53ea\u6709\u4e00\u884c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7b80\u5199 b = a if a > 0 else -a \u5728python\u4e2d\u4e5f\u79f0\u5176\u4e3a\u4e09\u76ee\u8fd0\u7b97\u7b26, if \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u6210\u7acb\uff0c\u5c06a\u503c\u8d4b\u7ed9b\uff0c\u5426\u5219b = -a,\u8fd9\u662f\u4e00\u4e2a\u6c42\u7edd\u5bf9\u503c\u7684\u7b80\u5355\u5199\u6cd5\u3002 elif\u8bed\u53e5 \u5176\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b if \u8868\u8fbe\u5f0f1: \u8bed\u53e5\u57571 elif \u8868\u8fbe\u5f0f2: \u8bed\u53e5\u57572 elif \u8868\u8fbe\u5f0f3: \u8bed\u53e5\u57573 ... else: \u8bed\u53e5\u5757n a = 0 if a > 0: print('a > 0') elif a = 0: print('a = 0') else: print('a < 0') # out a = 0 \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e2d,\u6700\u57fa\u672c\u7684\u8fd0\u7b97\u7b26\u53ef\u80fd\u662f\u6bd4\u8f83\u8fd0\u7b97\u7b26,\u5b83\u4eec\u7528\u4e8e\u6267\u884c\u6bd4\u8f83 \u8868\u8fbe\u5f0f \u63cf\u8ff0 x == y x \u7b49\u4e8e y x < y x \u5c0f\u4e8e y x > y x \u5927\u4e8e y x >= y x \u5927\u4e8e\u6216\u7b49\u4e8e y x <= y x\u5c0f\u4e8e\u6216\u7b49\u4e8e y x != y x \u4e0d\u7b49\u4e8e y x is y x\u548cy\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 x is not y x\u548cy\u662f\u4e0d\u540c\u7684\u5bf9\u8c61 x in y x\u662f\u5bb9\u5668y\u7684\u6210\u5458 x not in y x \u4e0d\u662fy\u7684\u6210\u5458 \u6ce8\u610f\uff1a\u76f8\u540c\u8fd0\u7b97\u7b26\uff08is\uff09\u4e0e\u76f8\u7b49\u8fd0\u7b97\u7b26\uff08==\uff09\u662f\u4e0d\u4e00\u6837\u7684 x = y = [1,2] z = [1,2] print(x == y) # True print(x is y) # True print(x == z) # True print(x is z) # False python\u652f\u6301\u94fe\u5f0f\u6bd4\u8f83,\u53ef\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 0 < age < 100 age = 20 if 20 is age > 0: print('age:', age) # out age: 20 age1 = 20 age2 = 40 if 0 < age1 < age2 < 100: print('age1:', age1, ',age2:', age2) # out age1: 20 ,age2: 40 and\u3001or \u548c not and\u3001or\u548cnot \u662fpython\u4e2d\u7684\u903b\u8f91\u8fd0\u7b97\u7b26\uff0cand \u4ee3\u8868\u4e0e\uff0cor\u4ee3\u8868\u903b\u8f91\u6216\uff0cnot \u4ee3\u8868\u903b\u8f91\u975e\uff0cand \u548c or\u4e2d\u95f4\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0cnot \u540e\u9762\u53ea\u80fd\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08not False \u5373\u4e3a True, not True \u5373\u4e3a False\uff09\uff0c\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b \u8868\u8fbe\u5f0f1 and \u8868\u8fbe\u5f0f2 and \u8868\u8fbe\u5f0f3 ... \u8868\u8fbe\u5f0f1 or \u8868\u8fbe\u5f0f2 or \u8868\u8fbe\u5f0f3 ... \u94fe\u63a5and\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u90fd\u662f\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047 \u94fe\u63a5or\u7684\u8868\u8fbe\u5f0f\u6709\u4e00\u4e2a\u4e3a\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047 \u5faa\u73af while while \u8868\u8fbe\u5f0f: \u8bed\u53e5\u5757 \u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5\u5757\uff0c\u5426\u5219\u4e0d\u6267\u884c x = 1 while x <= 100: print(x) x += 1 for \u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b for arg in \u8fed\u4ee3\u5bf9\u8c61: \u8bed\u53e5\u5757(\u53ef\u64cd\u4f5carg) words = ['this', 'is', 'an', 'ex', 'parrot'] for word in words: print(word) # out this is an ex parrot numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] for number in numbers: print(number) # out 0 1 2 3 4 5 6 7 8 9 \u5f88\u660e\u663e\u4e0a\u8ff0\u7684\u4f8b\u5b50\u904d\u5386\u6570\u5b57\u6709\u4e9b\u9ebb\u70e6\uff0cpython\u63d0\u4f9b\u4e86range\u51fd\u6570 def __init__(self, start: int, stop: int, step: int = ...) -> None: ... \u8fd9\u51fd\u6570\u4e2d\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2astart\u662f\u8d77\u59cb\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570stop\u662f\u6700\u540e\u503c\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570step\u662f\u6b65\u957f\uff0crange\u7684\u8303\u56f4\u5305\u542bstart\u4f46\u662f\u4e0d\u5305\u542bstop,\u5982\u679c\u4e0d\u4f20\u5165start,\u5219\u9ed8\u8ba4\u4e3a0 for number in range(0, 10): print(number) # out 0 1 2 3 4 5 6 7 8 9 \u4e0a\u9762\u8fed\u4ee3\u7684\u90fd\u662f\u5217\u8868\uff0c\u800c\u5217\u8868\u4e2d\u6bcf\u4e2a\u503c\u90fd\u662f\u5355\u4e00\u503c\uff0c\u6211\u4eec\u77e5\u9053\u5b57\u5178\u662f\u5df2\u952e\u503c\u5b58\u50a8\uff0c\u904d\u5386\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f idict = {'x': 1, 'y': 2, 'z': 3} for i in idict: print(i) # out x y z \u5728\u904d\u5386\u5b57\u5178\u65f6\uff0c\u6253\u5370\u4e86\u5b57\u5178\u7684\u6240\u6709\u952e\uff0c\u5982\u4f55\u904d\u5386\u5b57\u5178\u7684\u503c\u5462\uff1f idict = {'x': 1, 'y': 2, 'z': 3} for key, value in idict.items(): print(\"this dict key is\uff1a\", key, ', the dict value is\uff1a', value) # out this dict key is\uff1a x , the dict value is\uff1a 1 this dict key is\uff1a y , the dict value is\uff1a 2 this dict key is\uff1a z , the dict value is\uff1a 3 \u6709\u65f6\u5019\uff0c\u4f60\u53ef\u80fd\u60f3\u540c\u65f6\u8fed\u4ee3\u4e24\u4e2a\u5e8f\u5217\u3002 names = ['anne', 'beth', 'george', 'damon'] ages = [12, 45, 32, 102] for i in range(len(names)): print(names[i], 'is', ages[i], 'years old') # out anne is 12 years old beth is 45 years old george is 32 years old damon is 102 years old i\u662f\u7528\u4f5c\u5faa\u73af\u7d22\u5f15\u7684\u53d8\u91cf\u7684\u6807\u51c6\u540d\u79f0\u3002\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u5e76\u884c\u8fed\u4ee3\u5de5\u5177\u662f\u5185\u7f6e\u51fd\u6570zip\uff0c\u5b83\u5c06\u4e24\u4e2a\u5e8f\u5217\u201c\u7f1d\u5408\u201d\u8d77\u6765\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7531\u5143\u7ec4\u7ec4\u6210\u7684\u5e8f\u5217\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u9002\u5408\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u8981\u67e5\u770b\u5176\u5185\u5bb9\uff0c\u53ef\u4f7f\u7528list\u5c06\u5176\u8f6c\u6362\u4e3a\u5217\u8868\u3002 >>> list(zip(names, ages)) [('anne', 12), ('beth', 45), ('george', 32), ('damon', 102)] \u53ef\u5728\u5faa\u73af\u4e2d\u5c06\u5143\u7ec4\u89e3\u5305\u3002 for name, age in zip(names, ages): print(name, 'is', age, 'years old') # out anne is 12 years old beth is 45 years old george is 32 years old damon is 102 years old \u51fd\u6570zip\u53ef\u7528\u4e8e\u201c\u7f1d\u5408\u201d\u4efb\u610f\u6570\u91cf\u7684\u5e8f\u5217\u3002\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u5f53\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u540c\u65f6\uff0c\u51fd\u6570zip\u5c06\u5728\u6700\u77ed\u7684\u5e8f\u5217\u7528\u5b8c\u540e\u505c\u6b62\u201c\u7f1d\u5408\u201d\u3002 >>> list(zip(range(5), range(100000000))) [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)] \u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u5728\u8fed\u4ee3\u5bf9\u8c61\u5e8f\u5217\u7684\u540c\u65f6\u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684\u7d22\u5f15\u3002 lst = ['a', 'b', 'c', 'd', 'e'] for index, value in enumrate(lst) print(\"index:\",index,\",value:\",value) # out index: 0 ,value: a index: 1 ,value: b index: 2 ,value: c index: 3 ,value: d index: 4 ,value: e \u901a\u5e38\uff0c\u5faa\u73af\u4f1a\u4e0d\u65ad\u5730\u6267\u884c\u4ee3\u7801\u5757\uff0c\u76f4\u5230\u6761\u4ef6\u4e3a\u5047\u6216\u4f7f\u7528\u5b8c\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\u4f46\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u60f3\u4e2d\u65ad\u5faa\u73af\u3001\u5f00\u59cb\u65b0\u8fed\u4ee3\uff08\u8fdb\u5165\u201c\u4e0b\u4e00\u8f6e\u201d\u4ee3\u7801\u5757\u6267\u884c\u6d41\u7a0b\uff09\u6216\u76f4\u63a5\u7ed3\u675f\u5faa\u73af\u3002 break \u8981\u7ed3\u675f\uff08\u8df3\u51fa\uff09\u5faa\u73af\uff0c\u53ef\u4f7f\u7528break,\u5047\u8bbe\u4f60\u8981\u627e\u51fa\u5c0f\u4e8e100\u7684\u6700\u5927\u5e73\u65b9\u503c\uff08\u6574\u6570\u4e0e\u81ea\u5df1\u76f8\u4e58 \u7684\u7ed3\u679c\uff09\uff0c\u53ef\u4ece100\u5f00\u59cb\u5411\u4e0b\u8fed\u4ee3\u3002\u627e\u5230\u4e00\u4e2a\u5e73\u65b9\u503c\u540e\uff0c\u65e0\u9700\u518d\u8fed\u4ee3\uff0c\u56e0\u6b64\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u3002 from math import sqrt for n in range(99, 0, -1): root = sqrt(n) if root == int(root): print(n) break # out 81 continue \u8bed\u53e5continue\u6ca1\u6709break\u7528\u5f97\u591a\u3002\u5b83\u7ed3\u675f\u5f53\u524d\u8fed\u4ee3\uff0c\u5e76\u8df3\u5230\u4e0b\u4e00\u6b21\u8fed\u4ee3\u5f00\u5934\u3002\u8fd9\u57fa\u672c\u4e0a\u610f\u5473\u7740\u8df3\u8fc7\u5faa\u73af\u4f53\u4e2d\u4f59\u4e0b\u7684\u8bed\u53e5\uff0c\u4f46\u4e0d\u7ed3\u675f\u5faa\u73af\u3002\u8fd9\u5728\u5faa\u73af\u4f53\u5e9e\u5927\u800c\u590d\u6742\uff0c\u4e14\u5b58\u5728\u591a\u4e2a\u8981\u8df3\u8fc7\u5b83\u7684\u539f\u56e0\u65f6\u5f88\u6709\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4f7f\u7528continue\uff0c\u5982\u4e0b\u6240\u793a\uff1a for x in seq: if condition1: continue if condition2: continue if condition3: continue do_something() do_something_else() do_another_thing() etc() \u5faa\u73af\u4e2d\u7684else \u901a\u5e38\uff0c\u5728\u5faa\u73af\u4e2d\u4f7f\u7528break\u662f\u56e0\u4e3a\u4f60\u201c\u53d1\u73b0\u201d\u4e86\u4ec0\u4e48\u6216\u201c\u51fa\u73b0\u201d\u4e86\u4ec0\u4e48\u60c5\u51b5\u3002\u8981\u5728\u5faa\u73af\u63d0\u524d\u7ed3\u675f\u65f6\u91c7\u53d6\u67d0\u79cd\u63aa\u65bd\u5f88\u5bb9\u6613\uff0c\u4f46\u6709\u65f6\u5019\u4f60\u53ef\u80fd\u60f3\u5728\u5faa\u73af\u6b63\u5e38\u7ed3\u675f\u65f6\u624d\u91c7\u53d6\u67d0\u79cd\u63aa\u65bd\u3002\u5982\u4f55\u5224\u65ad\u5faa\u73af\u662f\u63d0\u524d\u7ed3\u675f\u8fd8\u662f\u6b63\u5e38\u7ed3\u675f\u7684\u5462\uff1f\u53ef\u5728\u5faa\u73af\u5f00\u59cb\u524d\u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3aFalse\uff0c\u518d\u5728\u8df3\u51fa\u5faa\u73af\u65f6\u5c06\u5176\u8bbe\u7f6e\u4e3aTrue\u3002\u8fd9\u6837\u5c31\u53ef\u5728\u5faa\u73af\u540e\u9762\u4f7f\u7528\u4e00\u6761if\u8bed\u53e5\u6765\u5224\u65ad\u5faa\u73af\u662f\u5426\u662f\u63d0\u524d\u7ed3\u675f\u7684\u3002 broke_out = False for x in seq: do_something(x) if condition(x): broke_out = True break do_something_else(x) if not broke_out: print(\"I didn't break out!\") \u4e00\u79cd\u66f4\u7b80\u5355\u7684\u529e\u6cd5\u662f\u5728\u5faa\u73af\u4e2d\u6dfb\u52a0\u4e00\u6761else\u5b50\u53e5\uff0c\u5b83\u4ec5\u5728\u6ca1\u6709\u8c03\u7528break\u65f6\u624d\u6267\u884c from math import sqrt for n in range(99, 81, -1): root = sqrt(n) if root == int(root): print(n) break else: print(\"Didn't find it!\") \u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6253\u5370\"Didn't find it!\" \u5217\u8868\u63a8\u5bfc\u5f0f \u5217\u8868\u63a8\u5bfc\u662f\u4e00\u79cd\u4ece\u5176\u4ed6\u5217\u8868\u521b\u5efa\u5217\u8868\u7684\u65b9\u5f0f,\u7c7b\u4f3c\u4e8e\u6570\u5b66\u4e2d\u7684\u96c6\u5408\u63a8\u5bfc\u3002\u5217\u8868\u63a8\u5bfc\u7684\u5de5\u4f5c\u539f\u7406\u975e\u5e38\u7b80\u5355,\u6709\u70b9\u7c7b\u4f3c\u4e8efor\u5faa\u73af\u3002 >>> [x * x for x in range(10)] [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] \u8fd9\u4e2a\u5217\u8868\u7531range(10)\u5185\u6bcf\u4e2a\u503c\u7684\u5e73\u65b9\u7ec4\u6210,\u975e\u5e38\u7b80\u5355\u5427?\u5982\u679c\u53ea\u60f3\u6253\u5370\u90a3\u4e9b\u80fd\u88ab3\u6574\u9664\u7684\u5e73\u65b9\u503c,\u8be5\u5982\u4f55\u529e\u5462?\u53ef\u4f7f\u7528\u6c42\u6a21\u8fd0\u7b97\u7b26:\u5982\u679cy \u80fd\u88ab3\u6574\u9664,y % 3\u5c06\u8fd4\u56de0(\u8bf7\u6ce8\u610f,\u4ec5\u5f53x\u80fd\u88ab3\u6574\u9664\u65f6,x*x \u624d\u80fd\u88ab3\u6574\u9664) \u3002\u4e3a\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd,\u53ef\u5728\u5217\u8868\u63a8\u5bfc\u4e2d\u6dfb\u52a0\u4e00\u6761if\u8bed\u53e5\u3002 >>> [x*x for x in range(10) if x % 3 == 0] [0, 9, 36, 81] \u8fd8\u53ef\u6dfb\u52a0\u66f4\u591a\u7684for \u90e8\u5206\u3002 >>> [(x, y) for x in range(3) for y in range(3)] [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)] \u4f7f\u7528\u5706\u62ec\u53f7\u4ee3\u66ff\u65b9\u62ec\u53f7\u5e76\u4e0d\u80fd\u5b9e\u73b0\u5143\u7ec4\u63a8\u5bfc,\u800c\u662f\u5c06\u521b\u5efa\u751f\u6210\u5668,\u540e\u7eed\u4f1a\u4ecb\u7ecd\u751f\u6210\u5668\u3002\u7136\u800c,\u53ef\u4f7f\u7528\u82b1\u62ec\u53f7\u6765\u6267\u884c\u5b57\u5178\u63a8\u5bfc\u3002 >>> squares = {i:\"{} squared is {}\".format(i, i**2) for i in range(10)} >>> squares[8] '8 squared is 64' \u5728\u5217\u8868\u63a8\u5bfc\u4e2d, for\u524d\u9762\u53ea\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f,\u800c\u5728\u5b57\u5178\u63a8\u5bfc\u4e2d, for \u524d\u9762\u6709\u4e24\u4e2a\u7528\u5192\u53f7\u5206\u9694\u7684\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\u5206\u522b\u4e3a\u952e\u53ca\u5176\u5bf9\u5e94\u7684\u503c\u3002","title":"\u6761\u4ef6\u63a7\u5236\u548c\u5faa\u73af\u7ed3\u6784"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#_1","text":"","title":"\u6761\u4ef6\u548c\u6761\u4ef6\u8bed\u53e5"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#if","text":"if \u8868\u8fbe\u5f0f: \u8bed\u53e5\u5757 \u5176\u5b9e\u8868\u8fbe\u5f0f\u53ea\u662f\u4e00\u4e2a\u5355\u7eaf\u7684\u5e03\u5c14\u503c\u6216\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u6bd4\u8f83\u8868\u8fbe\u5f0f\u6216\u903b\u8f91\u8868\u8fbe\u5f0f\uff08a > b and a != c\uff09\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u6267\u884c\u8bed\u53e5\u5757\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u5047\u5219\u8df3\u8fc7\u8bed\u53e5\u5757, \u8bed\u53e5\u5757\u4f7f\u7528\u5236\u8868\u7b26\uff0c\u5373Tab\u6216\u8005\u56db\u4e2a\u7a7a\u683c\u7684\u7f29\u8fdb \u7528\u4f5c\u5e03\u5c14\u8868\u8fbe\u5f0f\u65f6\uff0c\u4e0b\u9762\u7684\u503c\u5c06\u88ab\u89e3\u91ca\u5668\u89c6\u4e3a\u5047\u3002 False None 0 \"\" () [] {} \u53e6\u5916\uff0c\u5e03\u5c14\u503c\u771f\uff08True\uff09\u4ee3\u88681, \u5047\uff08False\uff09\u4ee3\u88680 >>> True + 1 2 >>> False + 1 1 # coding=utf-8 if not False: print(\"expression is False \") if not 0: print(\"expression is 0\") if not None: print(\"expression is None\") if not (): print(\"expression is ()\") if not []: print('expression is []') if not {}: print('expression is {}') # out expression is False expression is 0 expression is None expression is () expression is [] expression is {} \u4f7f\u7528if\u8bed\u53e5\u65f6\u5982\u679c\u53ea\u6709\u4e00\u6761\u8bed\u53e5\u5757\uff0c\u53ef\u4ee5\u4e16\u754c\u5199\u5728\u5192\u53f7\u540e\u9762 if 2 > 1: print('2 > 1') # out 2 > 1 \u5e03\u5c14\u503cTrue\u548cFalse\u5c5e\u4e8e\u7c7b\u578bbool,\u800cbool\u4e0elist\u3001 str\u548ctuple\u4e00\u6837,\u53ef\u7528\u6765\u8f6c\u6362\u5176\u4ed6\u7684\u503c >>> bool(\"I think, i am falling, you can see, Why do you pretend you don't know?\") True >>> bool(0) False","title":"if..."},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#ifelse","text":"else\u5fc5\u4f34\u968f\u7740if,\u5f53if \u540e\u9762\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3a\u5047\u65f6\u6267\u884celse\u540e\u9762\u7684\u8bed\u53e5\u5757\uff0c\u5176\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b if \u8868\u8fbe\u5f0f\uff1a \u8bed\u53e5\u57571 else: \u8bed\u53e5\u57572 a = -9 if a > 0: b = a else: b = -a print(b) # out 9 \u540c\u6837\uff0c\u4ee3\u7801\u5757\u53ea\u6709\u4e00\u884c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7b80\u5199 b = a if a > 0 else -a \u5728python\u4e2d\u4e5f\u79f0\u5176\u4e3a\u4e09\u76ee\u8fd0\u7b97\u7b26, if \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u6210\u7acb\uff0c\u5c06a\u503c\u8d4b\u7ed9b\uff0c\u5426\u5219b = -a,\u8fd9\u662f\u4e00\u4e2a\u6c42\u7edd\u5bf9\u503c\u7684\u7b80\u5355\u5199\u6cd5\u3002","title":"if...else..."},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#elif","text":"\u5176\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b if \u8868\u8fbe\u5f0f1: \u8bed\u53e5\u57571 elif \u8868\u8fbe\u5f0f2: \u8bed\u53e5\u57572 elif \u8868\u8fbe\u5f0f3: \u8bed\u53e5\u57573 ... else: \u8bed\u53e5\u5757n a = 0 if a > 0: print('a > 0') elif a = 0: print('a = 0') else: print('a < 0') # out a = 0","title":"elif\u8bed\u53e5"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#_2","text":"\u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e2d,\u6700\u57fa\u672c\u7684\u8fd0\u7b97\u7b26\u53ef\u80fd\u662f\u6bd4\u8f83\u8fd0\u7b97\u7b26,\u5b83\u4eec\u7528\u4e8e\u6267\u884c\u6bd4\u8f83 \u8868\u8fbe\u5f0f \u63cf\u8ff0 x == y x \u7b49\u4e8e y x < y x \u5c0f\u4e8e y x > y x \u5927\u4e8e y x >= y x \u5927\u4e8e\u6216\u7b49\u4e8e y x <= y x\u5c0f\u4e8e\u6216\u7b49\u4e8e y x != y x \u4e0d\u7b49\u4e8e y x is y x\u548cy\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 x is not y x\u548cy\u662f\u4e0d\u540c\u7684\u5bf9\u8c61 x in y x\u662f\u5bb9\u5668y\u7684\u6210\u5458 x not in y x \u4e0d\u662fy\u7684\u6210\u5458 \u6ce8\u610f\uff1a\u76f8\u540c\u8fd0\u7b97\u7b26\uff08is\uff09\u4e0e\u76f8\u7b49\u8fd0\u7b97\u7b26\uff08==\uff09\u662f\u4e0d\u4e00\u6837\u7684 x = y = [1,2] z = [1,2] print(x == y) # True print(x is y) # True print(x == z) # True print(x is z) # False python\u652f\u6301\u94fe\u5f0f\u6bd4\u8f83,\u53ef\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 0 < age < 100 age = 20 if 20 is age > 0: print('age:', age) # out age: 20 age1 = 20 age2 = 40 if 0 < age1 < age2 < 100: print('age1:', age1, ',age2:', age2) # out age1: 20 ,age2: 40","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#andor-not","text":"and\u3001or\u548cnot \u662fpython\u4e2d\u7684\u903b\u8f91\u8fd0\u7b97\u7b26\uff0cand \u4ee3\u8868\u4e0e\uff0cor\u4ee3\u8868\u903b\u8f91\u6216\uff0cnot \u4ee3\u8868\u903b\u8f91\u975e\uff0cand \u548c or\u4e2d\u95f4\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0cnot \u540e\u9762\u53ea\u80fd\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08not False \u5373\u4e3a True, not True \u5373\u4e3a False\uff09\uff0c\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b \u8868\u8fbe\u5f0f1 and \u8868\u8fbe\u5f0f2 and \u8868\u8fbe\u5f0f3 ... \u8868\u8fbe\u5f0f1 or \u8868\u8fbe\u5f0f2 or \u8868\u8fbe\u5f0f3 ... \u94fe\u63a5and\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u90fd\u662f\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047 \u94fe\u63a5or\u7684\u8868\u8fbe\u5f0f\u6709\u4e00\u4e2a\u4e3a\u771f\uff0c\u7ed3\u679c\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047","title":"and\u3001or \u548c not"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#_3","text":"","title":"\u5faa\u73af"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#while","text":"while \u8868\u8fbe\u5f0f: \u8bed\u53e5\u5757 \u5982\u679c\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5\u5757\uff0c\u5426\u5219\u4e0d\u6267\u884c x = 1 while x <= 100: print(x) x += 1","title":"while"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#for","text":"\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b for arg in \u8fed\u4ee3\u5bf9\u8c61: \u8bed\u53e5\u5757(\u53ef\u64cd\u4f5carg) words = ['this', 'is', 'an', 'ex', 'parrot'] for word in words: print(word) # out this is an ex parrot numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] for number in numbers: print(number) # out 0 1 2 3 4 5 6 7 8 9 \u5f88\u660e\u663e\u4e0a\u8ff0\u7684\u4f8b\u5b50\u904d\u5386\u6570\u5b57\u6709\u4e9b\u9ebb\u70e6\uff0cpython\u63d0\u4f9b\u4e86range\u51fd\u6570 def __init__(self, start: int, stop: int, step: int = ...) -> None: ... \u8fd9\u51fd\u6570\u4e2d\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2astart\u662f\u8d77\u59cb\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570stop\u662f\u6700\u540e\u503c\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570step\u662f\u6b65\u957f\uff0crange\u7684\u8303\u56f4\u5305\u542bstart\u4f46\u662f\u4e0d\u5305\u542bstop,\u5982\u679c\u4e0d\u4f20\u5165start,\u5219\u9ed8\u8ba4\u4e3a0 for number in range(0, 10): print(number) # out 0 1 2 3 4 5 6 7 8 9 \u4e0a\u9762\u8fed\u4ee3\u7684\u90fd\u662f\u5217\u8868\uff0c\u800c\u5217\u8868\u4e2d\u6bcf\u4e2a\u503c\u90fd\u662f\u5355\u4e00\u503c\uff0c\u6211\u4eec\u77e5\u9053\u5b57\u5178\u662f\u5df2\u952e\u503c\u5b58\u50a8\uff0c\u904d\u5386\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f idict = {'x': 1, 'y': 2, 'z': 3} for i in idict: print(i) # out x y z \u5728\u904d\u5386\u5b57\u5178\u65f6\uff0c\u6253\u5370\u4e86\u5b57\u5178\u7684\u6240\u6709\u952e\uff0c\u5982\u4f55\u904d\u5386\u5b57\u5178\u7684\u503c\u5462\uff1f idict = {'x': 1, 'y': 2, 'z': 3} for key, value in idict.items(): print(\"this dict key is\uff1a\", key, ', the dict value is\uff1a', value) # out this dict key is\uff1a x , the dict value is\uff1a 1 this dict key is\uff1a y , the dict value is\uff1a 2 this dict key is\uff1a z , the dict value is\uff1a 3 \u6709\u65f6\u5019\uff0c\u4f60\u53ef\u80fd\u60f3\u540c\u65f6\u8fed\u4ee3\u4e24\u4e2a\u5e8f\u5217\u3002 names = ['anne', 'beth', 'george', 'damon'] ages = [12, 45, 32, 102] for i in range(len(names)): print(names[i], 'is', ages[i], 'years old') # out anne is 12 years old beth is 45 years old george is 32 years old damon is 102 years old i\u662f\u7528\u4f5c\u5faa\u73af\u7d22\u5f15\u7684\u53d8\u91cf\u7684\u6807\u51c6\u540d\u79f0\u3002\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u5e76\u884c\u8fed\u4ee3\u5de5\u5177\u662f\u5185\u7f6e\u51fd\u6570zip\uff0c\u5b83\u5c06\u4e24\u4e2a\u5e8f\u5217\u201c\u7f1d\u5408\u201d\u8d77\u6765\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7531\u5143\u7ec4\u7ec4\u6210\u7684\u5e8f\u5217\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u9002\u5408\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u8981\u67e5\u770b\u5176\u5185\u5bb9\uff0c\u53ef\u4f7f\u7528list\u5c06\u5176\u8f6c\u6362\u4e3a\u5217\u8868\u3002 >>> list(zip(names, ages)) [('anne', 12), ('beth', 45), ('george', 32), ('damon', 102)] \u53ef\u5728\u5faa\u73af\u4e2d\u5c06\u5143\u7ec4\u89e3\u5305\u3002 for name, age in zip(names, ages): print(name, 'is', age, 'years old') # out anne is 12 years old beth is 45 years old george is 32 years old damon is 102 years old \u51fd\u6570zip\u53ef\u7528\u4e8e\u201c\u7f1d\u5408\u201d\u4efb\u610f\u6570\u91cf\u7684\u5e8f\u5217\u3002\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u5f53\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u540c\u65f6\uff0c\u51fd\u6570zip\u5c06\u5728\u6700\u77ed\u7684\u5e8f\u5217\u7528\u5b8c\u540e\u505c\u6b62\u201c\u7f1d\u5408\u201d\u3002 >>> list(zip(range(5), range(100000000))) [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)] \u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u5728\u8fed\u4ee3\u5bf9\u8c61\u5e8f\u5217\u7684\u540c\u65f6\u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684\u7d22\u5f15\u3002 lst = ['a', 'b', 'c', 'd', 'e'] for index, value in enumrate(lst) print(\"index:\",index,\",value:\",value) # out index: 0 ,value: a index: 1 ,value: b index: 2 ,value: c index: 3 ,value: d index: 4 ,value: e \u901a\u5e38\uff0c\u5faa\u73af\u4f1a\u4e0d\u65ad\u5730\u6267\u884c\u4ee3\u7801\u5757\uff0c\u76f4\u5230\u6761\u4ef6\u4e3a\u5047\u6216\u4f7f\u7528\u5b8c\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\u4f46\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u60f3\u4e2d\u65ad\u5faa\u73af\u3001\u5f00\u59cb\u65b0\u8fed\u4ee3\uff08\u8fdb\u5165\u201c\u4e0b\u4e00\u8f6e\u201d\u4ee3\u7801\u5757\u6267\u884c\u6d41\u7a0b\uff09\u6216\u76f4\u63a5\u7ed3\u675f\u5faa\u73af\u3002","title":"for"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#break","text":"\u8981\u7ed3\u675f\uff08\u8df3\u51fa\uff09\u5faa\u73af\uff0c\u53ef\u4f7f\u7528break,\u5047\u8bbe\u4f60\u8981\u627e\u51fa\u5c0f\u4e8e100\u7684\u6700\u5927\u5e73\u65b9\u503c\uff08\u6574\u6570\u4e0e\u81ea\u5df1\u76f8\u4e58 \u7684\u7ed3\u679c\uff09\uff0c\u53ef\u4ece100\u5f00\u59cb\u5411\u4e0b\u8fed\u4ee3\u3002\u627e\u5230\u4e00\u4e2a\u5e73\u65b9\u503c\u540e\uff0c\u65e0\u9700\u518d\u8fed\u4ee3\uff0c\u56e0\u6b64\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u3002 from math import sqrt for n in range(99, 0, -1): root = sqrt(n) if root == int(root): print(n) break # out 81","title":"break"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#continue","text":"\u8bed\u53e5continue\u6ca1\u6709break\u7528\u5f97\u591a\u3002\u5b83\u7ed3\u675f\u5f53\u524d\u8fed\u4ee3\uff0c\u5e76\u8df3\u5230\u4e0b\u4e00\u6b21\u8fed\u4ee3\u5f00\u5934\u3002\u8fd9\u57fa\u672c\u4e0a\u610f\u5473\u7740\u8df3\u8fc7\u5faa\u73af\u4f53\u4e2d\u4f59\u4e0b\u7684\u8bed\u53e5\uff0c\u4f46\u4e0d\u7ed3\u675f\u5faa\u73af\u3002\u8fd9\u5728\u5faa\u73af\u4f53\u5e9e\u5927\u800c\u590d\u6742\uff0c\u4e14\u5b58\u5728\u591a\u4e2a\u8981\u8df3\u8fc7\u5b83\u7684\u539f\u56e0\u65f6\u5f88\u6709\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4f7f\u7528continue\uff0c\u5982\u4e0b\u6240\u793a\uff1a for x in seq: if condition1: continue if condition2: continue if condition3: continue do_something() do_something_else() do_another_thing() etc()","title":"continue"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#else","text":"\u901a\u5e38\uff0c\u5728\u5faa\u73af\u4e2d\u4f7f\u7528break\u662f\u56e0\u4e3a\u4f60\u201c\u53d1\u73b0\u201d\u4e86\u4ec0\u4e48\u6216\u201c\u51fa\u73b0\u201d\u4e86\u4ec0\u4e48\u60c5\u51b5\u3002\u8981\u5728\u5faa\u73af\u63d0\u524d\u7ed3\u675f\u65f6\u91c7\u53d6\u67d0\u79cd\u63aa\u65bd\u5f88\u5bb9\u6613\uff0c\u4f46\u6709\u65f6\u5019\u4f60\u53ef\u80fd\u60f3\u5728\u5faa\u73af\u6b63\u5e38\u7ed3\u675f\u65f6\u624d\u91c7\u53d6\u67d0\u79cd\u63aa\u65bd\u3002\u5982\u4f55\u5224\u65ad\u5faa\u73af\u662f\u63d0\u524d\u7ed3\u675f\u8fd8\u662f\u6b63\u5e38\u7ed3\u675f\u7684\u5462\uff1f\u53ef\u5728\u5faa\u73af\u5f00\u59cb\u524d\u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3aFalse\uff0c\u518d\u5728\u8df3\u51fa\u5faa\u73af\u65f6\u5c06\u5176\u8bbe\u7f6e\u4e3aTrue\u3002\u8fd9\u6837\u5c31\u53ef\u5728\u5faa\u73af\u540e\u9762\u4f7f\u7528\u4e00\u6761if\u8bed\u53e5\u6765\u5224\u65ad\u5faa\u73af\u662f\u5426\u662f\u63d0\u524d\u7ed3\u675f\u7684\u3002 broke_out = False for x in seq: do_something(x) if condition(x): broke_out = True break do_something_else(x) if not broke_out: print(\"I didn't break out!\") \u4e00\u79cd\u66f4\u7b80\u5355\u7684\u529e\u6cd5\u662f\u5728\u5faa\u73af\u4e2d\u6dfb\u52a0\u4e00\u6761else\u5b50\u53e5\uff0c\u5b83\u4ec5\u5728\u6ca1\u6709\u8c03\u7528break\u65f6\u624d\u6267\u884c from math import sqrt for n in range(99, 81, -1): root = sqrt(n) if root == int(root): print(n) break else: print(\"Didn't find it!\") \u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6253\u5370\"Didn't find it!\"","title":"\u5faa\u73af\u4e2d\u7684else"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6761\u4ef6\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784/#_4","text":"\u5217\u8868\u63a8\u5bfc\u662f\u4e00\u79cd\u4ece\u5176\u4ed6\u5217\u8868\u521b\u5efa\u5217\u8868\u7684\u65b9\u5f0f,\u7c7b\u4f3c\u4e8e\u6570\u5b66\u4e2d\u7684\u96c6\u5408\u63a8\u5bfc\u3002\u5217\u8868\u63a8\u5bfc\u7684\u5de5\u4f5c\u539f\u7406\u975e\u5e38\u7b80\u5355,\u6709\u70b9\u7c7b\u4f3c\u4e8efor\u5faa\u73af\u3002 >>> [x * x for x in range(10)] [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] \u8fd9\u4e2a\u5217\u8868\u7531range(10)\u5185\u6bcf\u4e2a\u503c\u7684\u5e73\u65b9\u7ec4\u6210,\u975e\u5e38\u7b80\u5355\u5427?\u5982\u679c\u53ea\u60f3\u6253\u5370\u90a3\u4e9b\u80fd\u88ab3\u6574\u9664\u7684\u5e73\u65b9\u503c,\u8be5\u5982\u4f55\u529e\u5462?\u53ef\u4f7f\u7528\u6c42\u6a21\u8fd0\u7b97\u7b26:\u5982\u679cy \u80fd\u88ab3\u6574\u9664,y % 3\u5c06\u8fd4\u56de0(\u8bf7\u6ce8\u610f,\u4ec5\u5f53x\u80fd\u88ab3\u6574\u9664\u65f6,x*x \u624d\u80fd\u88ab3\u6574\u9664) \u3002\u4e3a\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd,\u53ef\u5728\u5217\u8868\u63a8\u5bfc\u4e2d\u6dfb\u52a0\u4e00\u6761if\u8bed\u53e5\u3002 >>> [x*x for x in range(10) if x % 3 == 0] [0, 9, 36, 81] \u8fd8\u53ef\u6dfb\u52a0\u66f4\u591a\u7684for \u90e8\u5206\u3002 >>> [(x, y) for x in range(3) for y in range(3)] [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)] \u4f7f\u7528\u5706\u62ec\u53f7\u4ee3\u66ff\u65b9\u62ec\u53f7\u5e76\u4e0d\u80fd\u5b9e\u73b0\u5143\u7ec4\u63a8\u5bfc,\u800c\u662f\u5c06\u521b\u5efa\u751f\u6210\u5668,\u540e\u7eed\u4f1a\u4ecb\u7ecd\u751f\u6210\u5668\u3002\u7136\u800c,\u53ef\u4f7f\u7528\u82b1\u62ec\u53f7\u6765\u6267\u884c\u5b57\u5178\u63a8\u5bfc\u3002 >>> squares = {i:\"{} squared is {}\".format(i, i**2) for i in range(10)} >>> squares[8] '8 squared is 64' \u5728\u5217\u8868\u63a8\u5bfc\u4e2d, for\u524d\u9762\u53ea\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f,\u800c\u5728\u5b57\u5178\u63a8\u5bfc\u4e2d, for \u524d\u9762\u6709\u4e24\u4e2a\u7528\u5192\u53f7\u5206\u9694\u7684\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\u5206\u522b\u4e3a\u952e\u53ca\u5176\u5bf9\u5e94\u7684\u503c\u3002","title":"\u5217\u8868\u63a8\u5bfc\u5f0f"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6ce8\u91ca/","text":"Python\u4ee3\u7801\u6ce8\u91ca \u5728Python\u4e2d\uff0c\u4e95\u53f7\uff08 # \uff09\u6bd4\u8f83\u7279\u6b8a\uff1a\u5728\u4ee3\u7801\u4e2d\uff0c\u4e95\u53f7\u540e\u9762\u5230\u884c\u5c3e\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u88ab\u5ffd\u7565 # \u6253\u5370Hello World\uff01 print('Hello World\uff01') \u5355\u5f15\u53f7\uff08'''\uff09 ''' \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u5355\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u5355\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u5355\u5f15\u53f7 ''' \u53cc\u5f15\u53f7\uff08\"\"\"\uff09 \"\"\" \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7 \"\"\" \u5207\u8bb0\u4e00\u70b9\uff0c\u8981\u5728\u6587\u4ef6\u5f00\u5934\u52a0\u4e0a\u6587\u4ef6\u7f16\u7801\uff0c\u5426\u5219\u6709\u4e2d\u6587\u5b57\u7b26\u5c31\u4f1a\u51fa\u9519 # -*- coding:utf-8 -*- # coding=utf-8","title":"\u6ce8\u91ca"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6ce8\u91ca/#python","text":"\u5728Python\u4e2d\uff0c\u4e95\u53f7\uff08 # \uff09\u6bd4\u8f83\u7279\u6b8a\uff1a\u5728\u4ee3\u7801\u4e2d\uff0c\u4e95\u53f7\u540e\u9762\u5230\u884c\u5c3e\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u88ab\u5ffd\u7565 # \u6253\u5370Hello World\uff01 print('Hello World\uff01')","title":"Python\u4ee3\u7801\u6ce8\u91ca"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6ce8\u91ca/#_1","text":"''' \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u5355\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u5355\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u5355\u5f15\u53f7 '''","title":"\u5355\u5f15\u53f7\uff08'''\uff09"},{"location":"python/\u57fa\u7840\u6559\u7a0b/\u6ce8\u91ca/#_2","text":"\"\"\" \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7 \u8fd9\u662f\u591a\u884c\u6ce8\u91ca\uff0c\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7 \"\"\" \u5207\u8bb0\u4e00\u70b9\uff0c\u8981\u5728\u6587\u4ef6\u5f00\u5934\u52a0\u4e0a\u6587\u4ef6\u7f16\u7801\uff0c\u5426\u5219\u6709\u4e2d\u6587\u5b57\u7b26\u5c31\u4f1a\u51fa\u9519 # -*- coding:utf-8 -*- # coding=utf-8","title":"\u53cc\u5f15\u53f7\uff08\"\"\"\uff09"}]}